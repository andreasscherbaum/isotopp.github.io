<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Die wunderbare Welt von Isotopp</title>
    <link>https://blog.koehntopp.info/posts.html</link>
    <description>Recent content in Posts on Die wunderbare Welt von Isotopp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Jan 2022 23:13:18 +0000</lastBuildDate><atom:link href="https://blog.koehntopp.info/posts/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UTF8MB4</title>
      <link>https://blog.koehntopp.info/2022/01/12/utf8mb4.html</link>
      <pubDate>Mon, 10 Jan 2022 16:28:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/01/12/utf8mb4.html</guid>
      <description>&lt;p&gt;On Twitter, Jan Wildeboer &lt;a href=&#34;https://twitter.com/jwildeboer/status/1481308177727729668&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;linked&lt;/a&gt;

 an &lt;a href=&#34;https://adamhooper.medium.com/in-mysql-never-use-utf8-use-utf8mb4-11761243e434&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;article by Adam Hooper&lt;/a&gt;

 on MySQL and the weird &lt;code&gt;utf8mb4&lt;/code&gt; character set.&lt;/p&gt;
&lt;p&gt;The recommendation is correct:
In MySQL, use &lt;code&gt;utf8mb4&lt;/code&gt; when you mean to work with &lt;code&gt;utf8&lt;/code&gt; in your programming language.
The background and reasoning why this is is wrong and way more complicated.&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s walk through this:&lt;/p&gt;
&lt;h2 id=&#34;mysql-utf8-means-unicode-10-bmp&#34;&gt;
    &lt;a href=&#34;#mysql-utf8-means-unicode-10-bmp&#34;&gt;
	MySQL &lt;code&gt;utf8&lt;/code&gt; means Unicode 1.0 BMP
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;UTF8 in MySQL encodes the &lt;a href=&#34;https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unicode BMP&lt;/a&gt;

.
The Unicode Basic Multilingual Plane, or BMP, is the original 65536 character plane of Unicode 1.0.
It was thought to be enough for all scripts in the world.
It wasn&amp;rsquo;t.
Unicode was extended, as early as with the 2.0 release, to have more characters than that, in more code planes.
There can now be up to 17 Unicode planes.&lt;/p&gt;
&lt;p&gt;There are various ways to encode codepoints of Unicode.&lt;/p&gt;
&lt;p&gt;Some of them are fixed with.
For example, Windows uses internally a 16 bit character encoding, also from the time when people thought that Unicode 1.0 would solve the worlds writing problems.
This is not only limited, but also wasteful:
When writing western text, every other byte in Windows Unicode text is a null byte.&lt;/p&gt;
&lt;p&gt;In Unix, specifically originally in Plan 9 from AT&amp;amp;T, a variable length encoding for Unicode was developed.
Basically, the number of consecutive high bits of the first byte determines how long the byte sequence is.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;So a thing starting with &lt;code&gt;0x8?&lt;/code&gt; denotes a single character sequence,&lt;/li&gt;
&lt;li&gt;a thing starting with &lt;code&gt;0xc?&lt;/code&gt; identifies a two character sequence and&lt;/li&gt;
&lt;li&gt;a &lt;code&gt;0xe?&lt;/code&gt; a three byte sequence.&lt;/li&gt;
&lt;li&gt;Four byte codepoints start with &lt;code&gt;0xf?&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL also is from the time when people still believed in 65536 glyphs, and offers a number of encodings.
You can list the interesting ones with &lt;code&gt;SHOW CHARSET WHERE MAXLEN &amp;gt; 1&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxlen&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;---------+---------------------------------+---------------------+--------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Charset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Description&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;collation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Maxlen&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;---------+---------------------------------+---------------------+--------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;big5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Big5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Traditional&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Chinese&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;big5_chinese_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cp932&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SJIS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Windows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Japanese&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cp932_japanese_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eucjpms&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UJIS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Windows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Japanese&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eucjpms_japanese_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euckr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EUC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;KR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Korean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euckr_korean_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gb18030&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;China&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;National&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Standard&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GB18030&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gb18030_chinese_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gb2312&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GB2312&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Simplified&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Chinese&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gb2312_chinese_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gbk&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GBK&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Simplified&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Chinese&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gbk_chinese_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sjis&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Shift&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JIS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Japanese&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sjis_japanese_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucs2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UCS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Unicode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucs2_general_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ujis&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EUC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Japanese&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                 &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ujis_japanese_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UTF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Unicode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf16_general_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf16le&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UTF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Unicode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf16le_general_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf32&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UTF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Unicode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf32_general_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UTF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Unicode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8_general_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UTF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Unicode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4_0900_ai_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;---------+---------------------------------+---------------------+--------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Specifically, there are the &lt;code&gt;utf16&lt;/code&gt;, &lt;code&gt;utf16le&lt;/code&gt; and &lt;code&gt;utf32&lt;/code&gt; encodings.
And we can check what they do. In my terminal, which incidentally uses &lt;code&gt;utf8&lt;/code&gt; to talk to the database, I can  &lt;code&gt;select hex(&amp;quot;ö&amp;quot;) as ch&lt;/code&gt; to check the representation of an o-Umlaut as bytes.&lt;/p&gt;
&lt;p&gt;I can also &lt;code&gt;select hex(convert(&amp;quot;ö&amp;quot; using &amp;lt;somecharset&amp;gt;))) as ch&lt;/code&gt; to check what these bytes would be in other encodings.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s do that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ö&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;C3B6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ö&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;latin1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;F6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ö&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;F6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ö&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf16le&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;F600&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ö&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;000000&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;F6&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So we learn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;UTF8&lt;/code&gt; o-Umlaut is &lt;code&gt;0xc3b6&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In the fixed 8-bit charset &lt;code&gt;latin1&lt;/code&gt; that becomes &lt;code&gt;0xf6&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;UTF16&lt;/code&gt;, a superset of that, it becomes &lt;code&gt;0x00f6&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Unsurprisingly, in &lt;code&gt;UTF16LE&lt;/code&gt; that is now the same, backwards, &lt;code&gt;0xf600&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;And in the staggering wasteful &lt;code&gt;UTF32&lt;/code&gt; we actually get three null bytes per glyph when storing western script, &lt;code&gt;0x000000f6&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In fact, to encode all possible 17 unicode planes we require only 21 bits, so &lt;code&gt;UTF32&lt;/code&gt; is hopelessly wasteful even for non-western scripts.
That is at least one null byte for each glyph in any script.&lt;/p&gt;
&lt;h2 id=&#34;later-unicode-revisions-add-more-planes&#34;&gt;
    &lt;a href=&#34;#later-unicode-revisions-add-more-planes&#34;&gt;
	Later Unicode revisions add more planes
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;But: The singular Basic Multilingual Plane was not enough for all of earths scripts, so it needed to be extended.
So we get characters that no longer fit a Windows &lt;code&gt;wchar&lt;/code&gt;, and also not the 3-byte &lt;code&gt;utf8&lt;/code&gt; encoding.&lt;/p&gt;
&lt;p&gt;MySQL extends the character representation to 4 bytes, which covers all possible 17 Unicode planes, and names that character set &lt;code&gt;utf8mb4&lt;/code&gt;.
Case closed.&lt;/p&gt;
&lt;p&gt;When working with modern Unicode in MySQL, always define the character set as &lt;code&gt;utf8mb4&lt;/code&gt;.
It is that simple.&lt;/p&gt;
&lt;h2 id=&#34;but-why-is-the-4-byte-utf8-named-differently&#34;&gt;
    &lt;a href=&#34;#but-why-is-the-4-byte-utf8-named-differently&#34;&gt;
	But why is the 4-byte &lt;code&gt;utf8&lt;/code&gt; named differently?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;So why did MySQL name the 4-byte &lt;code&gt;utf8&lt;/code&gt; weirdly &lt;code&gt;utf8mb4&lt;/code&gt; and did not update the definition of &lt;code&gt;utf8&lt;/code&gt; to 4 bytes?&lt;/p&gt;
&lt;p&gt;That is, because in databases you cannot ever change the definition of a character set or character set sort order (&amp;ldquo;collation&amp;rdquo;) without great pains.
You can easily add more, but you can never change what you have delivered to customers, ever.&lt;/p&gt;
&lt;h3 id=&#34;indexes-physically-materialize-columns-in-sort-order-for-fast-lookups&#34;&gt;
    &lt;a href=&#34;#indexes-physically-materialize-columns-in-sort-order-for-fast-lookups&#34;&gt;
	Indexes physically materialize columns in sort order for fast lookups
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;So, databases have this thing called indexes.
Suppose you have a table with a character column (a column of any datatype that has a charset and a collation), it may be a &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;varchar&lt;/code&gt; or any of the four &lt;code&gt;text&lt;/code&gt; types.
And you define an index on it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;affected&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;G&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bigint&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsigned&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UNIQUE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ENGINE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InnoDB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CHARSET&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COLLATE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4_0900_ai_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What happens here?
We store rows in the table &lt;code&gt;kris&lt;/code&gt; by inserting data.
The database assigns a primary key &lt;code&gt;id&lt;/code&gt;, and stores the tuple &lt;code&gt;(id, c, d)&lt;/code&gt; in the table.
It also needs to maintain the index on &lt;code&gt;c&lt;/code&gt;, so it will take the &lt;code&gt;c&lt;/code&gt;-value of each row and store it in the index &lt;strong&gt;in sorted order&lt;/strong&gt; with a pointer to the full row.&lt;/p&gt;
&lt;p&gt;In InnoDB, the row pointer used by secondary indexes is actually the primary, &lt;code&gt;id&lt;/code&gt;, so we do get the index &lt;code&gt;c&lt;/code&gt; as tuples of &lt;code&gt;(c, id)&lt;/code&gt;.
That means each secondary has the primary key as a tail, so the primary key better be short.
In our case, it is a &lt;code&gt;BIGINT&lt;/code&gt;, so 8 bytes are added as a row pointer to the index, for each row.&lt;/p&gt;
&lt;p&gt;Notice the fat &lt;strong&gt;in sorted order&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;The index &lt;code&gt;c&lt;/code&gt; is sorted, in the order defined by the collation for the character set.
That is going to be critically important.
So let&amp;rsquo;s have a look at character ordering.&lt;/p&gt;
&lt;h3 id=&#34;collations-are-comparison-rules-for-characters&#34;&gt;
    &lt;a href=&#34;#collations-are-comparison-rules-for-characters&#34;&gt;
	Collations are comparison rules for characters
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Our collation is given as &lt;code&gt;utf8mb4_0900_ai_ci&lt;/code&gt;, and that are the Unicode Collation Algorithm (UCA) 9.0 sorting rules for 4-byte UTF8, with accent insensitivity (&lt;code&gt;ai&lt;/code&gt;)&lt;code&gt;and case insensitivity (&lt;/code&gt;ci`).&lt;/p&gt;
&lt;p&gt;We need to learn even more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collations are rules for handling comparisons between glyphs in a specific encoding.
There are encodings for &lt;code&gt;latin1&lt;/code&gt;, other ones specific to &lt;code&gt;utf8&lt;/code&gt; and again different ones for &lt;code&gt;utf8mb4&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Collations define &lt;em&gt;sort orders&lt;/em&gt; and &lt;em&gt;equality rules&lt;/em&gt;.
&lt;code&gt;ci&lt;/code&gt; means the &lt;em&gt;sort order&lt;/em&gt; is case insensitive, so &amp;ldquo;Köhntopp&amp;rdquo;, &amp;ldquo;KÖHNTOPP&amp;rdquo; and &amp;ldquo;köhntopp&amp;rdquo; sort the same. With &lt;code&gt;cs&lt;/code&gt; they would not.
&lt;code&gt;ai&lt;/code&gt; means accent insentitive, so &lt;code&gt;WHERE c = &amp;quot;Kohntopp&amp;quot;&lt;/code&gt; matches &amp;ldquo;Köhntopp&amp;rdquo;. With &lt;code&gt;as&lt;/code&gt; it would not.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can show the collations for a given character set.
There are over 250 of them, and 75 alone for &lt;code&gt;utf8mb4&lt;/code&gt;.
Let&amp;rsquo;s check just the &lt;code&gt;utf8mb4%_ai_ci&lt;/code&gt; ones.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;collation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;collation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;utf8mb4%_ai_ci&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----------------------------+---------+-----+---------+----------+---------+---------------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Collation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Charset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Compiled&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Sortlen&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Pad_attribute&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----------------------------+---------+-----+---------+----------+---------+---------------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4_0900_ai_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Yes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Yes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PAD&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4_cs_0900_ai_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;266&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Yes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PAD&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4_vi_0900_ai_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8mb4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;277&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Yes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PAD&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;----------------------------+---------+-----+---------+----------+---------+---------------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So many nation specific sort orders.
And if you define an index on a character column, it has a collation attached and the data will be physically sorted in that nations sort order.&lt;/p&gt;
&lt;p&gt;These things are in fact even versioned:
If there is an UCA 9.0, are there other, earlier ones?
Sure enough:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;kris&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;information_schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;collations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;collation_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;like&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%general_mysql%&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------+--------------------+-----+------------+-------------+---------+---------------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COLLATION_NAME&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CHARACTER_SET_NAME&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IS_DEFAULT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IS_COMPILED&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SORTLEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAD_ATTRIBUTE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------+--------------------+-----+------------+-------------+---------+---------------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucs2_general_mysql500_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ucs2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;159&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Yes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PAD&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SPACE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8_general_mysql500_ci&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utf8&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;223&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Yes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;PAD&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SPACE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--------------------------+--------------------+-----+------------+-------------+---------+---------------+
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rows&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The fine manual notes, at the bottom of &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-sets.html#charset-unicode-sets-uca&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unicode Character Sets&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4 id=&#34;miscellaneous-information&#34;&gt;
    &lt;a href=&#34;#miscellaneous-information&#34;&gt;
	Miscellaneous Information
    &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;The xxx_general_mysql500_ci collations preserve the pre-5.1.24 ordering of the original xxx_general_ci collations and permit upgrades for tables created before MySQL 5.1.24 (Bug #27877).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MySQL 5.1.24 was released on 2008-04-08, 14 years ago.
We have &lt;em&gt;buggy&lt;/em&gt; sort orders used back then maintained in current MySQL for the sake of upgradability.&lt;/p&gt;
&lt;h3 id=&#34;tldr-so-far&#34;&gt;
    &lt;a href=&#34;#tldr-so-far&#34;&gt;
	TL;DR, so far
    &lt;/a&gt;
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Databases use indexes to access data quickly.&lt;/li&gt;
&lt;li&gt;Indexes physically materialize a column (and row pointers) in sort order.&lt;/li&gt;
&lt;li&gt;Sort order for character sets character set dependent, and national language dependent.&lt;/li&gt;
&lt;li&gt;Sort order also got major upgrades during the evolution of Unicode: Not only did we move from &amp;ldquo;only BMP&amp;rdquo; to 17 planes, we also went through at least 9 revisions of the Unicode Collation Algorithm.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you change the collation (the sort order) of an index, the index needs to be rebuilt.&lt;/li&gt;
&lt;li&gt;Sort orders are a property of character sets.&lt;/li&gt;
&lt;li&gt;UTF8 sorted according to UCA 4.x and UCA 5.0, UTF8MB4 sorts according to UCA 9.0. Specifically, the concept of segregating sort order comparison from equality comparison, and introducing accent insensitivity is new in UCA 9.0 and not present in previous UCA versions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That means, while &lt;code&gt;utf8&lt;/code&gt; is a strict subset of &lt;code&gt;utf8mb4&lt;/code&gt; in terms of character repertoire and encoding (modulo bug fixes), it sorts differently.
An &lt;code&gt;ALTER TABLE kris MODIFY COLUMN c varchar(20) charset utf8&lt;/code&gt; in our example table implies a drop on the index &lt;code&gt;c&lt;/code&gt;, and it&amp;rsquo;s recreation with a different sort order, from scratch.
Not fast on a large table.&lt;/p&gt;
&lt;h2 id=&#34;so-what-would-happen-if-utf8-suddently-meant-utf8mb4&#34;&gt;
    &lt;a href=&#34;#so-what-would-happen-if-utf8-suddently-meant-utf8mb4&#34;&gt;
	So what would happen if &lt;code&gt;utf8&lt;/code&gt; suddently meant &lt;code&gt;utf8mb4&lt;/code&gt;?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s imagine a MySQL 9.0 comes out, and in that release &lt;code&gt;utf8&lt;/code&gt; suddenly means &lt;code&gt;utf8mb4&lt;/code&gt;.
If you greenfield a new installation, no problem.&lt;/p&gt;
&lt;p&gt;If you apply the update to an existing installation, all your character columns that are part of an index need to be checked, and if required, rebuilt.
At the time when you apply the database update.
Which can take a very long time, during which the database is not available.
That can be quite inconvenient.&lt;/p&gt;
&lt;h2 id=&#34;what-happens-instead-if-we-dont-do-that&#34;&gt;
    &lt;a href=&#34;#what-happens-instead-if-we-dont-do-that&#34;&gt;
	What happens instead if we don&amp;rsquo;t do that?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In that case, &lt;code&gt;utf8&lt;/code&gt; means &lt;code&gt;utf8&lt;/code&gt;, nothing changes, and &lt;code&gt;utf8mb4&lt;/code&gt; is added and not used at all.
Unless you do.&lt;/p&gt;
&lt;p&gt;So you could create new columns using the new character set and collations, even in existing tables.
That is possible, because unlike in the other database, in MySQL a charset and collation is a column attribute.
Tables, databases and servers just provide defaults that are inherited at the time of subordinate object creation.&lt;/p&gt;
&lt;p&gt;So if you wanted to upgrade your database, you&amp;rsquo;d install a new version.
Then you would check all columns and note which one need changing.
And then you would change them, table by table, at your own leisure.
Possibly using tooling such as Percona Online Table Change (&amp;ldquo;OSC&amp;rdquo;), making the change in the background without service interruption.&lt;/p&gt;
&lt;p&gt;That is what MySQL does.
It never changes collations any more (it did, in the dark, evil past, creating a lot of suffering).
It is not even correcting bugs in existing collations any more (except by creating newly renamed collations).
Instead you run your collation migrations as it fits into your operational schedule.&lt;/p&gt;
&lt;p&gt;For Unicode that means, 4-byte Unicode is &lt;code&gt;utf8mb4&lt;/code&gt; in MySQL, because the name &lt;code&gt;utf8&lt;/code&gt; was already taken by a previous version of the Unicode character set.&lt;/p&gt;
&lt;h2 id=&#34;not-using-libc&#34;&gt;
    &lt;a href=&#34;#not-using-libc&#34;&gt;
	Not using libc.
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;MySQL does not use &lt;code&gt;libc&lt;/code&gt; and the character set comparison functions in there for itself.
Instead it brings its own collations.&lt;/p&gt;
&lt;p&gt;That is also an important lesson.
It means that, unlike the other database, MySQL does not break when you upgrade the operating system &lt;code&gt;libc&lt;/code&gt; on your machine.
If MySQL used &lt;code&gt;libc&lt;/code&gt; fort sorting and comparing, the database could break without any changes to the database whatsoever - an innocent security update to the operation systems &lt;code&gt;libc&lt;/code&gt; that for some reason also touched &lt;code&gt;libc&lt;/code&gt; sorting and comparison would break all character indexes in your database.&lt;/p&gt;
&lt;p&gt;MySQL does not do that.
It lets you migrate these things in a way that is operationally convenient.&lt;/p&gt;
&lt;p&gt;It also means that MySQL versions sort the same between Linux, FreeBSD, Solaris and even Windows.
Just like the on disk format is compatible across all platforms, so is character handling and time zone handling.
MySQL is MySQL on any platform, and copying files and replication always work across these boundaries.&lt;/p&gt;
&lt;h2 id=&#34;dude-thats-complicated&#34;&gt;
    &lt;a href=&#34;#dude-thats-complicated&#34;&gt;
	Dude, that&amp;rsquo;s complicated
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Yes.
Databases are weird, complicated and large.&lt;/p&gt;
&lt;p&gt;That is because they keep the state for your program, so that your program can be stateless and easy to manage.
Guess where all that complexity and technical debt management went?&lt;/p&gt;
&lt;p&gt;Where I work there is a replication hierarchy where the database instances are 120 TB in size, with the largest table being 35 TB in size.
Cloning a new instance at 400 MB/s takes around a week, plus replication catchup, so you wait around two weeks for a new instance, if nothing goes wrong.&lt;/p&gt;
&lt;p&gt;Moving this to &lt;code&gt;utf8mb4&lt;/code&gt; is a 6 month project, at least, and most of it is waiting.&lt;/p&gt;
&lt;p&gt;This database was created around 16 years ago.
It has an unbroken chain of state changes (&amp;ldquo;inserts, updates and deletes&amp;rdquo;) from back then to the present.&lt;/p&gt;
&lt;p&gt;It was born as MySQL 4.x, at some point became a MariaDB and is now an Oracle MySQL 5.7.
None of the code that was running when it was created still exists.
But the bugs and faulty updates that code did, back then, still exist somewhere in the data, unless they have been found and corrected.&lt;/p&gt;
&lt;p&gt;Persistence systems - databases and their NoSQL brethren that actually manage to write data to disk properly - are stateful systems.
The data they store usually outlives the code that created the records.
Changes to this data are forever.
Mistakes in handling the data or the updates are forever, too.&lt;/p&gt;
&lt;p&gt;DBA are a very special folk.
They are very paranoid.
They have tested restores of their backups, and their backups have backups.
That is, because if they make a mistake and data is gone, it is gone forever, and no rollout to fix things is possible.&lt;/p&gt;
&lt;h2 id=&#34;sorting-stuff&#34;&gt;
    &lt;a href=&#34;#sorting-stuff&#34;&gt;
	Sorting stuff
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Not only can databases, tables and individual indexes be very large, they also need to be kept sorted, and sometimes data needs to be re-sorted.
Databases ususally have a large number of strategies for that.&lt;/p&gt;
&lt;p&gt;Small things are sorted in memory.
That is, the database creates the full rows of the result table in memory, using all columns.
It then sorts these rows in memory by shuffling around the full rows.
That uses up a lot of memory bandwidth, because we copy around full rows, which can be large.&lt;/p&gt;
&lt;p&gt;Sometimes we do not want to move around full rows.
So we only sort the columns specified in the &lt;code&gt;ORDER BY CLAUSE&lt;/code&gt;, which is a tiny subset of the full columns set of each row of the result table, and attach a row pointer to each of these sort rows.&lt;/p&gt;
&lt;p&gt;In the end we have a tiny in-memory table in sort order, which only holds columns from the &lt;code&gt;ORDER BY&lt;/code&gt;, and each row in there points to the unsorted full rows somewhere else - in memory or on disk.
We then output the full rows in sort order, but that means we generate a lot of seeks - possibly on disk.
That is, because the full rows have not been sorted, so the row pointers from the sorted data to the full rows are a mess.&lt;/p&gt;
&lt;p&gt;Sometimes we have very many rows.
So we do as before, but for a subset of all rows - as many as fit into our sort buffer.
When the sort buffer is full, we write it out to disk.
Then we continue with the next batch.
Across all partial results we perform a merge sort.&lt;/p&gt;
&lt;p&gt;If the things sorted were full rows, we can emit full result rows rather quickly.
If the things sorted were only &lt;code&gt;ORDER BY&lt;/code&gt; columns or other partial result set rows with row pointers attached, we may have to perform one or multiple seeks in order to get the missing columns from all tables involved.&lt;/p&gt;
&lt;p&gt;The optimizer has to decide which strategy to use here, based on estimates of the row width, size of the result set (which has not yet been produced, so it&amp;rsquo;s a guess) and the available amount of resources.&lt;/p&gt;
&lt;h3 id=&#34;and-then-implementation-issues&#34;&gt;
    &lt;a href=&#34;#and-then-implementation-issues&#34;&gt;
	And then, implementation issues
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Older versions of MySQL have different storage engines: &lt;code&gt;MYISAM&lt;/code&gt;, &lt;code&gt;INNODB&lt;/code&gt;, &lt;code&gt;MEMORY&lt;/code&gt; and others.
Modern MySQL has only &lt;code&gt;INNODB&lt;/code&gt;, but for temporary tables has a few tricks ready to make things faster (for example, temporary tables can be recreated and do not need to be crash safe, so no redo and undo logging is required).&lt;/p&gt;
&lt;p&gt;Other storage engines than &lt;code&gt;INNODB&lt;/code&gt; had restrictions.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;MEMORY&lt;/code&gt; tables could not have variable length columns, there was no &lt;code&gt;VARCHAR&lt;/code&gt;, only &lt;code&gt;CHAR&lt;/code&gt;.
So when sorting with temporary tables in memory, MySQL created these tables as &lt;code&gt;MEMORY&lt;/code&gt; tables, promoting every &lt;code&gt;varchar(255)&lt;/code&gt; to &lt;code&gt;CHAR(255)&lt;/code&gt;, and so a row with a varchar value of &lt;code&gt;hello&lt;/code&gt; suddenly used 255 bytes instead of 6 bytes to represent the string &lt;code&gt;hello&lt;/code&gt; (plus a lot of padding).&lt;/p&gt;
&lt;p&gt;Of course, with &lt;code&gt;utf8&lt;/code&gt;, a &lt;code&gt;varchar(255) charset utf8&lt;/code&gt; is promoted to a &lt;code&gt;char(255) charset utf8&lt;/code&gt;, which instead allocates 765 bytes of memory, out of which the first five bytes contain the string &lt;code&gt;hello&lt;/code&gt;, and the rest is wasteful padding.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MEMORY&lt;/code&gt; tables had a configurable size limit, and if your table exceeded that (which happened rather quickly, given the above restrictions), it was converted to an on-disk temporary table in &lt;code&gt;MYISAM&lt;/code&gt; format.
That, of course had &lt;code&gt;varchar(255) charset utf8&lt;/code&gt; as a native type and your &lt;code&gt;hello&lt;/code&gt; would again shrink to six bytes.
Looking at the on disk temporary file, which was rather small, you might wander what caused the spill.&lt;/p&gt;
&lt;p&gt;MySQL 8 introduces unlogged &lt;code&gt;INNODB&lt;/code&gt; temporary tables (and a failed experiment involving mmap that you may want to disable).
So this problem is gone, once and for all: &lt;code&gt;varchar&lt;/code&gt; is &lt;code&gt;varchar&lt;/code&gt; at all times, and representing Unicode variants in temporary tables is no longer a problem.&lt;/p&gt;
&lt;p&gt;In MySQL 8.&lt;/p&gt;
&lt;p&gt;This is in fact one of the major reasons to graduate from 5.7 for many people.&lt;/p&gt;
&lt;h3 id=&#34;sorting-tldr-and-unicode&#34;&gt;
    &lt;a href=&#34;#sorting-tldr-and-unicode&#34;&gt;
	Sorting TLDR and Unicode
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Sorting Unicode columns was expensive in versions of MySQL before MySQL 8.
That is because the memory engine used did not understand variable length data types at all.
That led to all kinds of recommendations restricting the use of Unicode columns:
Don&amp;rsquo;t use them, if you do not need them.
Keep them short.
Exclude BLOB and TEXT columns from sorting.
And so on.&lt;/p&gt;
&lt;p&gt;MySQL 8 fixes all that.
Use Unicode columns as you see fit.
They work well, and as expected.
BLOB and TEXT are no longer a problem with sorting (well, they are, but for other reasons, but they do not longer trigger an immediate spill, no matter how tiny they are).&lt;/p&gt;
&lt;h2 id=&#34;tldr&#34;&gt;
    &lt;a href=&#34;#tldr&#34;&gt;
	TLDR
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your programming languages &lt;code&gt;utf8&lt;/code&gt; is called &lt;code&gt;utf8mb4&lt;/code&gt; in MySQL.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;utf8&lt;/code&gt; and &lt;code&gt;utf8mb4&lt;/code&gt; sort differently due to changes in the Unicode Collation Algorithm (UCA).&lt;/li&gt;
&lt;li&gt;Indexes are physically materialized sort orders of column sets. They can become pretty large.&lt;/li&gt;
&lt;li&gt;MySQL never changes sort orders of character sets (collations), even if they are buggy. Instead a new collation with a new name is created.&lt;/li&gt;
&lt;li&gt;That is, because changing a sort order may require dropping and recreating an index, which is expensive if the index is large.&lt;/li&gt;
&lt;li&gt;Sorting things can be done in many different ways, depending on data set size, column size and other considerations.&lt;/li&gt;
&lt;li&gt;Implementation details can make sorting even more complicated.&lt;/li&gt;
&lt;li&gt;MySQL 8 is a worthwhile upgrade.&lt;/li&gt;
&lt;li&gt;Databases manage state so you don&amp;rsquo;t have to. If you think databases are complicated, consider what you would have to do if the database and your DBA would not be there for you.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Never check for an error condition you don&#39;t know how to handle</title>
      <link>https://blog.koehntopp.info/2022/01/10/never-check-for-an-error-condition.html</link>
      <pubDate>Mon, 10 Jan 2022 07:11:35 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/01/10/never-check-for-an-error-condition.html</guid>
      <description>&lt;p&gt;This is the english version of an &lt;a href=&#34;https://blog.koehntopp.info/2009/08/21/was-bedeutet-eigentlich-never-check-for-an-error-condition-you-don-t-know-how-to-handle.html&#34;&gt;older text in German&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Computer scientists are weird.
In their science there are a few rules that sound wrong when you hear them first, but make a lot of sense if you think about them.
Some of them are making sense even outside of computer science.&lt;/p&gt;
&lt;p&gt;One of those rules is&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When you encounter this the first time that sounds very questionable.
There are known error conditions in my program that I know they can happen, and I should not check for them?&lt;/p&gt;
&lt;p&gt;If you read that left to right, that&amp;rsquo;s exactly what it means.
Let&amp;rsquo;s have a look at an example and try to understand what goes on.
Here is a very simple case: I could try to allocate memory from the operating system and that can fails.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;someSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;what_now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That is a very typical situation.
For example, why does the library function &lt;code&gt;malloc()&lt;/code&gt; not check itself for &lt;code&gt;p == NULL&lt;/code&gt;  and handles this case?
Because it does not, I have to do that every time and must not forget that in a single case.&lt;/p&gt;
&lt;p&gt;Indeed, most programs have a function &lt;code&gt;safe_malloc()&lt;/code&gt;, which wraps &lt;code&gt;malloc()&lt;/code&gt; and more or less looks like the example above.
The point being that each program has their own implementation of &lt;code&gt; what_now()&lt;/code&gt;, because the desired behavior is specific to the application and cannot be provided by the library.&lt;/p&gt;
&lt;p&gt;One could argue that &lt;code&gt;malloc()&lt;/code&gt; should internally call a &lt;code&gt;what_now()&lt;/code&gt;, and each library user would have to provide an implementation for that.
But that would proscribe a certain mode of usage for &lt;code&gt;malloc()&lt;/code&gt;.
The solution that &lt;code&gt;malloc()&lt;/code&gt; does not do the check, but only signals the error, is the most flexible solution &amp;ndash; and hence suitable for a library function, because it leaves the choice to the user.
It provides mechanism, but not policy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side thought:&lt;/strong&gt; That&amp;rsquo;s one of the main differences between a library and a framework.
Libraries provide mechanism, but do not enforce a policy.
They do not proscribe a default way of working with problems.
Frameworks are opinionated, and have been designed with a specific way of working in mind, and provide policies that are considered default solutions in the context of the framework.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side side though:&lt;/strong&gt; Kernel, libraries and frameworks are all infrastructure, and as all infrastructure they are being judged by how they fail.
In this case: What solutions exist to bypass the policy in a framework, if the policy does not fit.
&amp;ldquo;How can I have queries in &lt;a href=&#34;https://en.wikipedia.org/wiki/Ruby_on_Rails&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RoR&lt;/a&gt;

 that bypass &lt;a href=&#34;https://en.wikipedia.org/wiki/Active_record_pattern&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Active Record&lt;/a&gt;

&amp;rdquo; is one example.
How free of policy is this library?
Is it just a mechanism or is there an obvious or hidden intention, a policy?&lt;/p&gt;
&lt;p&gt;A library ideally supplies just a mechanism, but that makes it mandatory for the developer to think about a policy for error handling and how to implement it.
That&amp;rsquo;s a relatively obvious point, but one that in my experience is not taught sufficiently.
If it wasn&amp;rsquo;t, we&amp;rsquo;d have less bad code in many projects.
And I do not want to limit myself to the tons of toxic PHP-MYSQL that fire queries at a database without checking for errors at all.&lt;/p&gt;
&lt;p&gt;The point is rather that a missing policy for error handling requires that you provide one in the application (or at least some minimal standards in the application).
Some programming environments have a name for such an informal construct:
A convention, a contract between library developer and application developer that is informal and not enforced by the mechanisms of the language.
The convention is also often unspoken, or not made explicit enough in the documentation of the library.
And hence taught insufficiently, and then implemented insufficiently.&lt;/p&gt;
&lt;p&gt;But you can take the sentence&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle-1&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle-1&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;and read it backwards.
What exactly does it mean to handle an error condition?
Specifically, if the error happens, what are our options and what is the desired failure mode?
What is supposed to happen?&lt;/p&gt;
&lt;p&gt;Going back to the &lt;code&gt;malloc()&lt;/code&gt; above:
When that happens, the operating system can&amp;rsquo;t or won&amp;rsquo;t give us more memory.
We don&amp;rsquo;t know why, so we have to assume the worst.
That is: memory is full, nobody gets any memory any more.
In fact, there could be another program that permanently allocates more memory.
So even if we gave memory back to the operating system, we wouldn&amp;rsquo;t get it back when trying to reserve it.&lt;/p&gt;
&lt;p&gt;So handling this error means that we already have all memory required to recover from the situation before the error happens.
That&amp;rsquo;s a really complicated situation, and too complicated for most application developers when we force them to think about it.
At the point in time when this happens they are usually busy with completing the non-failing, actually function path of the application before they are ready to turn to failure modes and their code paths.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Side thought:&lt;/strong&gt; This is another main reason for bad code:
We force developers to think about failing code paths at the wrong point in time.
They really want to write programs that work well.
But we shouldn&amp;rsquo;t bother them with failure handling right when they are busy with completing the money earning part of the code.&lt;/p&gt;
&lt;p&gt;If we bother devs at the wrong moment in time, we get error handling like this at best:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;someSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ENOMEM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// out of memory error
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, at least they checked for an error.
Maybe there are even some &lt;code&gt; atexit(3)&lt;/code&gt; handlers stacked that will try to clean up, but did you ever see any of those?&lt;/p&gt;
&lt;p&gt;If you see code like this, it is screaming at you &amp;ldquo;Yes, yes, I know, but I am really busy now with other things. Go away!&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Another common problem is that we need to check for the error at the lowest level, but need more context at the higher levels of our code to handle it properly.
Sometimes there is not even a contract on how errors are being bubbled up to the next layer without losing information.
The interiors of the MySQL codebase used to be a prime example of that.
You could find code that mapped error codes similar to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;errcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doSomeThing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;errcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;E_THIS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;E_THAT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is taking detailed internal error codes and flattens them into larger categories, losing detail.
Sometimes a higher level handler has more context, but no longer sufficient detail to decide what exactly went wrong at the lower layers.&lt;/p&gt;
&lt;p&gt;The rule&lt;/p&gt;
&lt;h1 id=&#34;never-check-for-an-error-condition-you-dont-know-how-to-handle-2&#34;&gt;
    &lt;a href=&#34;#never-check-for-an-error-condition-you-dont-know-how-to-handle-2&#34;&gt;
	Never check for an error condition you don&amp;rsquo;t know how to handle.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;means we need to discuss things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Diagnosis:&lt;/strong&gt; Capture the error. Formulate a test which at some point in the code checks that we have a problem and distinctively signals which error that is.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Policy:&lt;/strong&gt; Determine the desired behavior for handling the error, that is, have a policy that explains how to handle the error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Context:&lt;/strong&gt; Decide where in the stack the error can be handled best, or if we need to escalate. When we escalate, make sure an escalation is expected at the higher layer and check for their policy. They need to have one. Also make sure the escalation does not lose detail.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;this-is-useful-outside-of-computer-science&#34;&gt;
    &lt;a href=&#34;#this-is-useful-outside-of-computer-science&#34;&gt;
	This is useful outside of computer science.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The original trigger to write this article in 2009 was a discussion about a 911-button (110-Taste) in a web browser.
&amp;ldquo;If you see something, say something&amp;rdquo;: If you find web pages that contain things that may be relevant for law enforcement, have a way to call for help.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s a very german and very 2009 idea, but suppose you want that: Coding that is easy, right? A button in a browser that raises an alarm somewhere should be very few lines of code in an extension.&lt;/p&gt;
&lt;p&gt;The real problem - and that is not a code problem - is the &lt;code&gt;what_now()&lt;/code&gt;.
What is supposed to happen with that alarm signal.
That&amp;rsquo;s a process question, that is &lt;strong&gt;WHO needs to talk WHEN with WHOM about WHAT?&lt;/strong&gt;
What information needs to be sent when the button is pressed and what reaction is then expected?&lt;/p&gt;
&lt;p&gt;Do we build a central emergency call center?
Do we transport location and identity information together with the call, if that is necessary?
If so, how?&lt;/p&gt;
&lt;p&gt;What other information is necessary to provide context?
The current URL?
The persistent state of the browser, with all bookmarks, the history and so on?
The volatile state of the browser, eg with all active spywat, but also all legit variables?
The whole state of the computer, processlist, memory and program information, installed software and so on?&lt;/p&gt;
&lt;p&gt;How is that call then handled and classified?&lt;/p&gt;
&lt;p&gt;What are standard reactions to verified and classfied emergency escalations?
Can the emergency call center take over the computer and extract further information and do a full forensic analysis?
Can they write and change the state of the machine to help?
Or can they just call back, and request a read-only screen sharing session to talk the user trough the emergency?&lt;/p&gt;
&lt;p&gt;What taxonomy of emergencies do we build, and what are the required steps to verify a case?&lt;/p&gt;
&lt;p&gt;Do we plan for preventatice action, when we register a spike in incidents of a certain type (ie a computer virus outbreak)?
Do we have a problem management and change managent on top of our incident management that would want to and be able to prevent a large scale situation in the field?
In the case of an outbreak, for example, by forcing patches on all machines?&lt;/p&gt;
&lt;p&gt;How do we build the technical and legal framework for this?
How do we build the organisation for this?
How to we enforce the technical changes required to be able to do this?
Do we make the installation of some software mandatory to be able to be on the Internet?
How do we protect this infrastructure against abuse?&lt;/p&gt;
&lt;p&gt;The check was easy &amp;ndash; an emergency call button in a browser.&lt;/p&gt;
&lt;p&gt;The work is in the handling, which can be &amp;ldquo;somewhat involved&amp;rdquo;.
But these are details that are gracefully elided in the discussion when politicans demand such a button.
That&amp;rsquo;s providing quite simplicistic discussions:
Why do we not have such a button in every browser already?&lt;/p&gt;
&lt;p&gt;Can&amp;rsquo;t be that hard, right?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>... and a happy new hack.</title>
      <link>https://blog.koehntopp.info/2022/01/01/and-a-happy-new-hack.html</link>
      <pubDate>Sat, 01 Jan 2022 16:28:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2022/01/01/and-a-happy-new-hack.html</guid>
      <description>&lt;p&gt;Und das neue Jahr beginnt für uns mit einem Minecraft-Server, auf dem wichtige Personen, die sich nichts haben zuschulden kommen lassen, plötzlich gebannt sind.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/01/banned.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Nach einem Unban an der Console: Der Spawn, der Eintrittspunkt für neue Spieler, ist komplett verwüstet.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2022/01/spawn.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Wir haben tägliche Backups, sodass das schnell behoben ist. Bleibt die Frage, was passiert ist.&lt;/p&gt;
&lt;h2 id=&#34;gehackt&#34;&gt;
    &lt;a href=&#34;#gehackt&#34;&gt;
	Gehackt
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Unter den Spielern ist die Frage schnell geklärt: &amp;ldquo;&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; wurde gehackt.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Es stellt sich raus:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt;&amp;rdquo; bekommt einen &lt;a href=&#34;https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html&#34;&gt;Free Nitro Spam&lt;/a&gt;

.&lt;/li&gt;
&lt;li&gt;Er klickt darauf.&lt;/li&gt;
&lt;li&gt;Er wird gebeten, &amp;ldquo;&lt;code&gt;FreeNitro.exe&lt;/code&gt;&amp;rdquo; zu installieren und macht das, startet dann das &lt;code&gt;.exe&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Sein Rechner macht ein Dutzend Fenster auf, rappelt los, und geht am Ende aus (und bleibt aus).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Im Rahmen des Exploits wurde er gebeten, seinen Minecraft Login und seinen Discord Login mit Passwort anzugeben, was er dann auch brav tat.
Zwei-Faktor-Authentisierung hat er nicht benutzt.&lt;/p&gt;
&lt;h2 id=&#34;impact&#34;&gt;
    &lt;a href=&#34;#impact&#34;&gt;
	Impact
    &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id=&#34;nur-minecraft&#34;&gt;
    &lt;a href=&#34;#nur-minecraft&#34;&gt;
	Nur Minecraft
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Den ersten Minecraft-Server für unser Kind und seine Freunde hatten wir daheim.
Das ging gut: Die Maschine hat 8 Cores, 32 GB Speicher und ist sowieso an, weil sie Dinge im Haus tut.
Die Anbindung ist mit Glasfaser und fester IP auch überaus zufriedenstellend.&lt;/p&gt;
&lt;p&gt;Als der ganze Server größer wurde, habe ich mit externen Anbietern herumexperimentiert und am Ende einen VPS besorgt.
Wichtig dabei ist nur, daß es eine Maschine ist, die nicht zu Hause steht, auf der nichts als Minecraft läuft und die keine Vertrauensbeziehung in irgendeiner Form mit anderen Maschinen von uns hat.&lt;/p&gt;
&lt;p&gt;Das hat sich nun bezahlt gemacht.&lt;/p&gt;
&lt;h3 id=&#34;restore&#34;&gt;
    &lt;a href=&#34;#restore&#34;&gt;
	Restore
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Wir haben auf dem Server daheim ein tägliches Backup: Der Minecraft-Server wird einmal pro Tag aus dem Internet nach Hause kopiert.
Das ist ein Pull, d.h. wir loggen uns auf dem Minecraft-Server ein und nicht der Minecraft-Server daheim.&lt;/p&gt;
&lt;p&gt;Wir heben die Backups 30 Tage lang auf und das Backup vom 1. jeden Monats unlimitiert.&lt;/p&gt;
&lt;p&gt;Dadurch konnten wir das gesamte Minecraft-Verzeichnis zur Seite bewegen, und dann aus dem Backup vom Vortag wiederherstellen.
Das hat 2 Minuten gedauert.&lt;/p&gt;
&lt;h3 id=&#34;logs&#34;&gt;
    &lt;a href=&#34;#logs&#34;&gt;
	Logs
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Das alte Verzeichnis liegt noch vor.
Dort sind auch die Logs vom Vorfall.&lt;/p&gt;
&lt;p&gt;Der Vorfall spielt sich so ab:
Der kompromittierte Account von &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; loggt sich ein und fängt an, &lt;code&gt;/lp&lt;/code&gt; Kommandos für das LuckPerms-Plugin zu senden.
Er listet alle User mit Rechten, und kickt und bannt diese dann.
Danach entzieht er ihnen Rechte.&lt;/p&gt;
&lt;p&gt;Das Plugin &lt;code&gt;WorldEdit&lt;/code&gt; ist installiert und der Account von &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; teleportiert sich auf den Spawn und fängt dort an, mit grossflächigen Brushes umzudekorieren.
Das Vorgehen sieht jedoch nicht systematisch und auch nicht schnell aus:
Die Aktion dauert beinahe 30 Minuten.
Das spricht nicht für einen gescripteten Angriff, und ist inkonsistent mit meinem Bild von einem &amp;ldquo;Free Nitro&amp;rdquo; Scammer und Angreifer.&lt;/p&gt;
&lt;p&gt;Das Logbuch des Serves und der mit &lt;code&gt;debsums&lt;/code&gt; verifizierte Zustand des Systems macht eine Reinstallation von allem
vermutlich nicht notwendig.
Es genügt, mit dem Stand aus dem Backup weiterzufahren.
Das ist angenehm:
Zwar ist der Server vollständig ansibilisiert und mit dem Backup in weniger als 30 Minuten aus einer kompletten Neuinstallation wiederherzustellen, aber wenn das nicht notwendig ist, ist das angenehm.&lt;/p&gt;
&lt;h3 id=&#34;der-user&#34;&gt;
    &lt;a href=&#34;#der-user&#34;&gt;
	Der User
    &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Der betreffende User hat Accounts auf Dutzenden von Minecraft-Servern.
Als engagierter und intensiver Spieler oft mit Sonderrechten.
Alle diese Server sind beschädigt, viele weniger automatisiert als unserer.&lt;/p&gt;
&lt;p&gt;Account-Recovery ohne 2FA ist schwierig.
Account-Recovery bei gleichem Paßwort für Minecraft und die Recovery-Mailadresse unmöglich.
Daraus folgt, daß man seine Recoveryadresse für den Minecraft Account eventuell nicht bei Hotmail haben sollte.
Daraus folgt auch, daß man Kindern Passwort Re-Use gar nicht früh genug aberziehen kann.&lt;/p&gt;
&lt;h2 id=&#34;maßnahmen-und-fazit&#34;&gt;
    &lt;a href=&#34;#ma%c3%9fnahmen-und-fazit&#34;&gt;
	Maßnahmen und Fazit
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wir verlangen in Zukunft für alle Benutzer mit Rechten auf dem Server oder im Discord zu beweisen, daß sowohl ihr Minecraft (Microsoft) Account als auch ihr Discord-Account mit Zwei-Faktor-Authentisierung gesichert sind.
Das wird helfen, den Schaden von solchen falschen Klicks zu minimieren und Accounts recoverbar zu machen.&lt;/p&gt;
&lt;p&gt;Die Analyse der Logfiles war hilfreich bei der Rekapitulation der Vorgänge, und um das Ausmaß des Schadens und den Reifegrad des Angreifers zu bestimmen.&lt;/p&gt;
&lt;p&gt;Einen externen, nur für Minecraft verwendeten Server zu nehmen, der nicht im Heimnetz steht, war sinnvoll und hat sich bezahlt gemacht.&lt;/p&gt;
&lt;p&gt;Der Vorfall ist ein gutes Werkzeug, um der Spielergruppe zu erläutern, wieso Accountsicherheit wichtig ist und wie man sich gegen solche Angriffe verteidigt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dein Kind will Minecraft spielen</title>
      <link>https://blog.koehntopp.info/2021/12/20/dein-kind-will-minecraft-spielen.html</link>
      <pubDate>Mon, 20 Dec 2021 13:32:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/12/20/dein-kind-will-minecraft-spielen.html</guid>
      <description>&lt;p&gt;Nachdem mich jetzt das dritte Paar computer-affiner Eltern mal gefragt hat, was man denn braucht, sobald der Nachwuchs sich &amp;ldquo;Minecraft&amp;rdquo; wünscht, hier der Aufschrieb zum Thema.&lt;/p&gt;
&lt;p&gt;Minecraft ist ursprünglich von der schwedischen Firma Mojang in Java entwickelt worden.
Der Eigner, Markus &amp;ldquo;Notch&amp;rdquo; Persson, hat das Spiel und die Firma Mitte 2014 auf Twitter zum Verkauf angeboten, und Microsoft hat die Firma gekauft.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/notch/status/478766808841732096&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft6.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;


&lt;em&gt;Spiel zu verkaufen - Minecraft ist auf Twitter angeboten worden. Jeder mit dem notwendigen Kleingeld &amp;ndash; 2.5 Milliarden USD &amp;ndash; konnte zuschlagen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Techradar hat mehr zur &lt;a href=&#34;https://www.techradar.com/news/the-history-of-minecraft&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Geschichte von Minecraft&lt;/a&gt;

.&lt;/p&gt;
&lt;h2 id=&#34;java-und-bedrock-edition&#34;&gt;
    &lt;a href=&#34;#java-und-bedrock-edition&#34;&gt;
	Java und Bedrock-Edition
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Eine der Aktivitäten von Microsoft war, das Spiel in C# neu zu schreiben. Dies ist die Bedrock-Edition, im Gegensatz zur Java-Edition des Originalspiels.&lt;/p&gt;
&lt;p&gt;Bedrock und Java sind nicht kompatibel, es gibt kein Crossplay, und die beiden Spiele werden nicht parallel entwickelt.
Es sind für alle praktischen Zwecke zwei verschiedene Spiele.&lt;/p&gt;
&lt;p&gt;Man will unbedingt und ausschließlich die Java-Edition kaufen.
Die Bedrock-Edition ist steril:
Erweiterungen für den Client und den Server werden von Microsoft verkauft.
Als Entwickler muss man sich anmelden, Verträge unterschreiben und Gebühren managen.
Es gibt deswegen praktisch keine Mod-Scene, sondern nur abgepacktes Gameplay.&lt;/p&gt;
&lt;p&gt;Niemand spielt Bedrock, und wenn Dein Kind von Minecraft redet, meint es die &lt;a href=&#34;https://www.minecraft.net/en-us/store/minecraft-java-edition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java-Edition&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft1.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Die Maskottchen und default Skins: Steve und Alex.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Java-Edition ist extrem lebendig, genau genommen ein unregulierter Dschungel.
Hier gibt es viele nette Leute, die spannende Dinge machen, und ein paar sehr dunkle Ecken.
Das ist aber im Grunde kein das Spiel verderbendes Problem, sondern eine gute Gelegenheit, gleich auch ein wenig Medienkompetenz und Grundlagen der Sicherheit zu vermitteln.&lt;/p&gt;
&lt;h2 id=&#34;was-wird-gespielt&#34;&gt;
    &lt;a href=&#34;#was-wird-gespielt&#34;&gt;
	Was wird gespielt?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft ist ein Spiel, das für Kinder ab 8 interessant ist.
Es ist zunächst einmal eine Art virtuelles Lego im Anzug eines Survival- und Crafting-Spieles:
Die Spieler müssen in einer Welt aus Blöcken erkunden, Ressourcen sammeln, aus den Ressourcen Dinge bauen und dabei die Nacht überleben.
Das ist nicht unbedingt einfach, denn in der Nacht kommen verschiedenen Monster, gegen die man nur bestehen kann, wenn man tagsüber einen Unterschlupf gebaut und Ausrüstung gewonnen hat.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Die Overworld, die normale Welt, hat verschiedene Klimazonen (&amp;ldquo;Biome&amp;rdquo;), in denen unterschiedliche Ressourcen zu finden sind.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Das Spiel hat eine marginale Story, im Laufe derer die Spieler weitere &amp;ldquo;Welten&amp;rdquo; entdecken und durch Portale betreten können:
der Nether und the End.
Das ist jedoch im Grunde alles nebensächlich, weil es in der ersten Iteration darum geht, mit Freunden zusammen aus Klötzen Dinge zu bauen.&lt;/p&gt;
&lt;h2 id=&#34;hardware-anforderungen&#34;&gt;
    &lt;a href=&#34;#hardware-anforderungen&#34;&gt;
	Hardware-Anforderungen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wegen der Zielgruppe hat das Spiel (mindestens bis Version 1.14.4) praktisch keine Mindestanforderungen an die Hardware.
Wortwörtlich jeder abgelegte Kartoffelcomputer kann Minecraft irgendwie ausführen &amp;ndash; Probleme entstehen vermutlich erst, wenn eine IDE (siehe unten) oder ein Videoschnitt-System oder Streaming-Support dazu kommen.
Wie dem auch sei:
Das schließt ein 2009er MacBook pro, einen Raspi 4 und circa jede Intel-Büchse der letzten 10 Jahre ein.
Weil es Java ist, funktioniert das alles mit demselben Spiel.&lt;/p&gt;
&lt;p&gt;Wegen der Modding-Community (dazu unten mehr) gibt es praktisch auch keine Höchstanforderungen an die Hardware:
Wenn man Raytracing Renderer installiert hat, reizt das Spiel auch eine &lt;a href=&#34;https://www.youtube.com/watch?v=AdTxrggo8e8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nvidia RTX 3090&lt;/a&gt;

 voll aus.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft3.jpg&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;


&lt;em&gt;Minecraft Standard und mit einem Raytracing Render Mod auf einer Nvidia RTX. Was ein paar hingeworfene Kissen ausmachen&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Minecraft ist eine Client-Server-Anwendung. Ein oder mehr Spieler verbinden ihre Clients mit dem Minecraft-Server und bespielen dann zusammen diese Welt.
Spielt man &amp;ldquo;offline&amp;rdquo;, startet der Launcher im Hintergrund einen lokalen Server auf dem Laptop, und verbindet den Client im Einzelspielermodus mit dem Server.&lt;/p&gt;
&lt;p&gt;Im Onlinebetrieb verbindet man sich mit einem zentralen Server, der von irgendjemandem betrieben wird, und spielt dann dort mit anderen.
Das sind im Zweifel echt viele Spieler &amp;ndash; auf einem öffentlichen Server irgendwelche Personen irgendwelchen Alters.
Auf einem privaten Server ist es so, wie immer es die Zugangs-Policy des Servers definiert.&lt;/p&gt;
&lt;h2 id=&#34;kein-minecraft-ohne-discord-kein-login-ohne-2fa&#34;&gt;
    &lt;a href=&#34;#kein-minecraft-ohne-discord-kein-login-ohne-2fa&#34;&gt;
	Kein Minecraft ohne Discord, kein Login ohne 2FA
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Öffentliche Server gibt es viele, die verschiedenen Serverlisten zeigen um eine halbe Million Serverinstallationen an.
Die meisten sind relativ kleine Communities mit beschränktem Zugang, einige sind sehr grosse öffentliche Installationen.
Besonders hervorstechend ist &lt;a href=&#34;https://de.wikipedia.org/wiki/Hypixel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hypixel&lt;/a&gt;

, einer der am besten gewarteten und entwickelten öffentlichen Server.&lt;/p&gt;
&lt;p&gt;Zu jedem öffentlichen Server gehört dieser Tage auch immer ein Discord (früher war das Teamspeak).
Der Hypixel Discord ist zum Beispiel &lt;a href=&#34;https://discord.com/invite/hypixel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hier&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Discord ist ein Hoster für Text-, Sprach-, Video-Chat und Game-Streaming.
&amp;ldquo;Ein Discord&amp;rdquo; ist ein geschlossener (zunächst kostenloser) virtueller Chatserver mit verschiedenen Kanälen für Text- und AV-Chat.&lt;/p&gt;
&lt;p&gt;Mit einem einzelnen Discord-Login kann man Zugang zu einer Reihe von Communities unterschiedlicher Größe bekommen.
Es ist also sinnvoll, mit dem Java-Minecraft-Account auch noch gleich einen (kostenlosen) Discord-Account zu erstellen.&lt;/p&gt;
&lt;p&gt;Dabei ist es extrem sinnvoll, diesen Zugang (wie auch den Microsoft-Zugang) mit 2-Faktor-Authentisierung abzusichern und das Kind gleich von Anfang an zu 2FA zu erziehen.
Warum ist das so?
&lt;a href=&#34;https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html&#34;&gt;Dazu hier ein kleines Erlebnis&lt;/a&gt;

.&lt;/p&gt;
&lt;h2 id=&#34;was-wird-eigentlich-gespielt&#34;&gt;
    &lt;a href=&#34;#was-wird-eigentlich-gespielt&#34;&gt;
	Was wird eigentlich gespielt?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Nach einer Weile Spiel wird das Kind weitere Wünsche und Fragen haben, weil das Spiel selbst nicht der primäre Inhalt von Minecraft ist.&lt;/p&gt;
&lt;p&gt;Minecraft ist ein kollaboratives Multiplayer-Spiel, das von den Spielern selbst verändert wird, indem diese Mods (Client-Erweiterungen) und Plugins (Server-Erweiterungen) erstellen.
Das heißt, sehr bald kommen die folgenden Fragen und Probleme:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Es gibt Streit, weil verschiedene Spielstile und Wünsche sich gegenseitig ausschließen, und weil mitunter Arschlöcher dabei sind. Ein Repertoire von Verhaltensweise zur Konfliktlösung muss eingeübt werden.&lt;/li&gt;
&lt;li&gt;Es gibt den Wunsch nach einem eigenen Server, der bezahlt und irgendwo installiert werden muss. Der Wunsch nach Taschengeld muss mit konkreten monatlichen Kosten vereinbar gemacht werden.&lt;/li&gt;
&lt;li&gt;Es gibt den Wunsch, den Client zu modden. Dazu sind besondere Tools auf dem lokalen Rechner notwendig, da weder Client noch Server nativ eine Moddingschnittstelle haben.&lt;/li&gt;
&lt;li&gt;Es gibt den Wunsch, besondere Spielmomente mit anderen zu Teilen. Die Frage nach Youtube und Twitch (konsumierend und erstellend) kommt auf, und es braucht Regeln (was, ab wann, Stimme, Gesicht zeigen, Namen nennen, und andere Verhaltensregeln).&lt;/li&gt;
&lt;li&gt;Es gibt den Wunsch, eigene Mods oder Plugins zu programmieren. Der Wunsch nach Java lernen, einer IDE und Hilfe von den Eltern kommt auf.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Der Reihe nach&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;streit-um-minecraft&#34;&gt;
    &lt;a href=&#34;#streit-um-minecraft&#34;&gt;
	Streit um Minecraft
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft kann man kooperativ (PvE, wir gegen die Monster) oder kompetetiv (PvP, Spieler gegeneinander) spielen.
Auch bei kooperativem Spiel kann es Probleme geben:
Wir hatten bisher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vandalismus (Spieler zerstören die Bauten anderer Spieler auf einem Sandkasten-Bauserver),&lt;/li&gt;
&lt;li&gt;Spieler fühlen sich ausgeschlossen oder zu wenig beachtet (&amp;ldquo;Niemand hört mir zu oder lässt mich aussprechen&amp;rdquo;),&lt;/li&gt;
&lt;li&gt;destruktive Verhaltensweisen und emotionale Erpressung (&amp;ldquo;Wenn Du nicht x für mich machst, spiele ich nicht mehr mit Dir&amp;rdquo;),&lt;/li&gt;
&lt;li&gt;und inkompatible Spielziele.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Das ist alles kein Beinbruch und nicht unerwartet.
Es macht es aber notwendig, daß man sich mit der ganzen Runde zusammensetzt und miteinander redet.
Auch dazu ist der Discord sehr nützlich.&lt;/p&gt;
&lt;p&gt;Minecraft Server können als PvE und PvP Server konfiguriert sein.
Mit Plugins sind auch Welten mit besonderen PvP-Varianten möglich, &amp;ldquo;Bedwars&amp;rdquo; (&amp;ldquo;Capture the Flag&amp;rdquo;, hier ein Bett) und Variationen zum Thema &amp;ldquo;Among Us&amp;rdquo; sind sehr populär.
PvP muss also nicht zwingend First-Person-Shooter Spiel sein.&lt;/p&gt;
&lt;p&gt;Weder im PvE noch im PvP fließt Blut. Es kommen Schwerter und Bogenwaffen vor, keine Gewehre. Die Grafik ist auch mit Render-Plugin immer blockig-pixelig, und es sind keine Details erkennbar.&lt;/p&gt;
&lt;p&gt;Bisher hatten die meisten bei uns erlebten Probleme ihren Kontext eher im PvE-Umfeld als im PvP Umfeld.&lt;/p&gt;
&lt;h2 id=&#34;ein-eigener-server&#34;&gt;
    &lt;a href=&#34;#ein-eigener-server&#34;&gt;
	Ein eigener Server
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Es gibt irgendwo auf der Minecraft-Site einen vom Client getrennten Server zum Herunterladen.
Dieser Server ist langsam und buggy.
Niemand verwendet ihn, außer als Grundlage für etwas Richtiges.&lt;/p&gt;
&lt;p&gt;Stattdessen durchläuft man den Installationsprozeß von &lt;a href=&#34;https://getbukkit.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bukkit oder Spigot&lt;/a&gt;

.
Dies setzt eine Maschine mit ausreichend Kernen und Speicher sowie einem installierten headless OpenJDK voraus.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Bukkit&lt;/dt&gt;
&lt;dd&gt;ist ein minimal veränderter Vanilla-Server und eher eine Demo für den Reverse Engineering und Patching Prozess.&lt;/dd&gt;
&lt;dt&gt;Spigot&lt;/dt&gt;
&lt;dd&gt;ist ein auf Performance optimierter und weiter aufgehackter Bukkit, und eher die Version die man installieren will.&lt;/dd&gt;
&lt;dt&gt;PaperMC&lt;/dt&gt;
&lt;dd&gt;ist ein weiterer Zweig, basierend auf Spigot, und noch klarer auf Performance optimiert. PaperMC unterstützt jedoch anders als Spigot nur die beiden neusten Versionen von Minecraft aktiv. Wer älteres Minecraft verwenden will oder muß wird mit PaperMC nicht glücklich.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Der Installationsprozeß ist dabei ein wahres Wunderwerk an Installationsautomation:
Er lädt den originalen Minecraft-Server herunter, ein obfuscated JAR.
Dies wird dann dekompiliert und mit einer Symboltabelle deobfuscated.
Dadurch entsteht ein reproduzierbarer lesbarer Sourcetree, der dann gepatcht wird.
Der resultierende Sourcetree wird dann compiliert, zusammengepackt und ein neues Server-JAR entsteht.
Dies ist dann die Grundlage für den eigenen Serverprozeß.&lt;/p&gt;
&lt;p&gt;Der ganze komplizierte Prozess klingt komplett haarsträubend, ist ein aber vollautomatischer Vorgang, der ausgesprochen reibungsfrei abläuft.
Der gepatchte Serverprozeß ist gegenüber dem Originalserver deutlich ärmer an Fehlern, um Größenordnungen schneller und hat eine dokumentierte und stabile API für Server-Erweiterungen (Plugins).&lt;/p&gt;
&lt;p&gt;Zum Server gehören auch noch eine &lt;code&gt;eula.txt&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;~minecraft/bukkit $ cat eula.txt
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;By changing the setting below to TRUE you are indicating your agreement to our EULA &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;https://account.mojang.com/documents/minecraft_eula&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.
&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;Mon Aug &lt;span class=&#34;m&#34;&gt;19&lt;/span&gt; 17:04:21 CEST &lt;span class=&#34;m&#34;&gt;2019&lt;/span&gt;
&lt;span class=&#34;go&#34;&gt;eula=true
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;und eine etwa längliche &lt;code&gt;server.properties&lt;/code&gt;-Datei, die die eigentliche &lt;a href=&#34;https://www.spigotmc.org/wiki/spigot-configuration-server-properties/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Konfiguration&lt;/a&gt;

 des Basis-Servers darstellt.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft4.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Dem Serverprozeß wird reichlich Speicher gegeben, aber trotz der großen Anzahl von Plugins liegt die effektive Prozeßgröße bei circa 3 GB (aber es laufen 84 Java-Threads).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Der Serverprozeß ist ursprünglich recht klein, aber wenn man den Server mit Plugins vollstopft nach oben offen.
Andererseits liegt ein Strato VPS mit 8 Kernen und 32 GB Speicher bei monatlich kündbaren 17 Euro und ist reichlich überprovisioniert für die Aufgabe.
Irgendwo zwischen dieser Größe und einem Raspi 4 findet man sicherlich was Passendes.&lt;/p&gt;
&lt;p&gt;Wer den Server nicht selbst installieren will, nimmt sich einen Servermanager &amp;ndash; es gibt viele mit zweifelhaftem Code und bunten Panels, und es gibt &lt;a href=&#34;https://github.com/dirien/minectl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;minectl&lt;/code&gt;&lt;/a&gt;

. Ich nehme einfach ein Shellscript:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;~minecraft/bukkit  $ cat starter.sh
&lt;span class=&#34;c1&#34;&gt;#! /bin/bash --&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;TIME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/minecraft/bukkit
&lt;span class=&#34;nv&#34;&gt;SERVER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;basename &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; :
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
        java -Xmx8192M -Xms3072M -Xss1m -jar &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt;/server.jar nogui
        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$SERVER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;: Java stopped or crashed. Waiting &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TIME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; seconds...&amp;#34;&lt;/span&gt;
        sleep &lt;span class=&#34;nv&#34;&gt;$TIME&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;clients-managen&#34;&gt;
    &lt;a href=&#34;#clients-managen&#34;&gt;
	Clients managen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wie auch der Server ist der Minecraft-Client eigentlich nicht erweiterbar.
Der Minecraft Launcher erlaubt immerhin die Verwaltung mehrerer Versionen, legt einen aber auf ein bestimmtes JDK fest (je nach Version auf ein anderes).&lt;/p&gt;
&lt;p&gt;Bastelt man intensiver am Client rum, hat man aber schnell das Problem, bestimmte (andere) JDK-Versionen verwenden zu müssen, den Client mit einer Mod-API modifizieren zu müssen oder unterschiedliche Mod-Konfigurationen für verschiedenen Gruppen und Aufgaben zu haben.
Das Werkzeug der Wahl für die Client-Verwaltung ist &lt;a href=&#34;https://multimc.org/#Download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MultiMC&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Es erlaubt es, das Spiel mit einem anderen, moderneren JDK auszuführen, unterschiedliche Spieler-Accounts zu verwalten.
Es automatisiert auch analog zum Server-Build, den Client automatisiert zu dekompilieren und zu patchen, um ihm eine stabile Mod-API zu verpassen.
Populär sind Forge und Fabric, die direkt von MultiMC integriert werden.
Danach kann man den Client dann mit Mods voll laden.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/minecraft5.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;MultiMC mit einer Instanz von Minecraft 1.14.4 und installiertem Fabric. Zu neue Minecraft-Versionen werden von der Mod-Community noch nicht voll unterstützt, zu alte nicht mehr. Die 1.14-Serie hat im Moment gute Kompatibilität.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mit den Mods und Plugins sollte man unbedingt mit dem Kind Vereinbarungen treffen.
Je nach Lebenserfahrung und Verständnis von Werten kann das Kind hier leicht ein Opfer von Scam, Abzocke und Phishing werden.
Auf der anderen Seiten kann man mit dem Kind, sobald es fragt oder sich die Gelegenheit bietet, über Merkmale von vertrauenswürdigen und seltsamen Webseiten reden und am Beispiel erklären, was eine Seite komisch aussehen lässt.&lt;/p&gt;
&lt;p&gt;Auch wenn man dem Kind zuhört, bieten die Geschichten von anderen und wie es ihnen ergangen ist, viele Haken und Themen, an denen man erklärend ansetzen kann, oder die man zum Anlass nehmen kann, gemeinsam nachzusehen und darüber zu sprechen, wie ehrliche und unehrliche Angebote aussehen.
Einige alternative Clients bieten Anti-Cheat-Möglichkeiten durch Totalüberwachung des Clients an.
Auch hier kann man einhaken, Regeln setzen und erklären, warum zum Beispiel dauernd laufende Hintergrundprozesse, Gerätetreiber, die Tastendrücke überwachen und andere Kontrollmaßnahmen ein No-Go sind.&lt;/p&gt;
&lt;h2 id=&#34;content-konsumieren-und-produzieren&#34;&gt;
    &lt;a href=&#34;#content-konsumieren-und-produzieren&#34;&gt;
	&amp;ldquo;Content&amp;rdquo; konsumieren und produzieren
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der ganze Teil der Community, der sich mit Plugins und Mods beschäftigt, dokumentiert und bildet aus.
Das geschieht in der Regel nicht nur geschrieben im Wiki, sondern auch mit Tutorials auf Youtube, Twitch und GitHub.
Sobald das Kind hier aktiv wird, wird man wieder Accounts machen müssen (2FA!).
Und ja, das heißt vermutlich auch GitHub.&lt;/p&gt;
&lt;p&gt;Wir haben die Vereinbarung, daß wir die Accounts machen, und daß wir allen Content zu sehen bekommen, bevor er veröffentlicht wird.
Es ist okay, Bildschirme zu zeigen und zu sprechen.
Gesichter und reale Namen und Adressen sind tabu: Es werden nur Avatare gezeigt und nur Handles benutzt.&lt;/p&gt;
&lt;p&gt;Die Vereinbarung, Plugins und Mods vor der Installation zu sehen zu bekommen hat sich nicht bewährt:
Es ist also damit zu rechnen, daß der Server oder der Client verloren gehen.
Eine Recovery-Strategie, etwa &amp;ldquo;der Server kann mit Ansible neu gemacht werden&amp;rdquo; und &amp;ldquo;es läuft nachts um 3 ein automatisches Backup&amp;rdquo; für den Server ist erfolgversprechender.
Auch für den Client (&amp;ldquo;verwende Time Machine&amp;rdquo;, &amp;ldquo;Hier ist ein Acronis&amp;rdquo;) ist das notwendig.&lt;/p&gt;
&lt;p&gt;Wegen &lt;a href=&#34;https://en.wikipedia.org/wiki/Children%27s_Online_Privacy_Protection_Act&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;COPPA&lt;/a&gt;

 läuft man Gefahr, Accounts bei US-Anbietern zu verlieren, wenn man nicht über das Geburtsjahr lügt &amp;ndash; das Kind muss über 13 Jahre alt sein, um legal einen Account haben zu können.
Anbieter, die Kinder unter 13 nicht komplett ablehnen, schränken die Accounts oft funktional bis zur Nutzlosigkeit ein.
Mit einem regulären Account, ein wenig partnerschaftlicher Aufsicht, und einer Lüge bei der Altersangabe fährt man in der Regel weitaus besser als mit verdummten Accounts.&lt;/p&gt;
&lt;p&gt;Falls das Kind selbst Content produziert ist das Risiko den Account zu verlieren oder gesperrt zu bekommen noch höher.
Daher sollte man den privaten Account und den publizierenden Account des Kindes strikt trennen, sodaß bei einer Sperrung nicht die Kontakte, private Mail und alle Kommunikationsmöglichkeiten mit weg sind.
Über Chrome Browser &lt;a href=&#34;https://www.techsolutions.support.com/how-to/how-to-create-and-switch-profiles-in-chrome-12564&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;User Profiles&lt;/a&gt;

 kann man das schnell und bequem umschalten, und das Kind lernt gleich noch OpSec und sich selbst geschickt zu publizieren.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.de/Its-Complicated-Social-Lives-Networked-ebook/dp/B00HUYT8TS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;It&amp;rsquo;s complicated&lt;/a&gt;

, und danah boyd ist immer lesenswert.&lt;/p&gt;
&lt;h2 id=&#34;selber-programmieren&#34;&gt;
    &lt;a href=&#34;#selber-programmieren&#34;&gt;
	Selber programmieren
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft ist eine Einstiegsdroge für die Programmierung.
Das Potenzial für die Selbstmotivation ist enorm, und der Support in der Community gewaltig.&lt;/p&gt;
&lt;p&gt;Für JetBrains IntelliJ existieren ganz ausgezeichnete Plugins für Server-Plugins und Client-Mods: &lt;a href=&#34;https://plugins.jetbrains.com/plugin/8327-minecraft-development&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Minecraft Development&lt;/a&gt;

 unterstützt Bukkit, Spigot und PaperMC sowie einen Haufen weiterer populärer Servervarianten.&lt;/p&gt;
&lt;p&gt;IntelliJ selbst ist stabil (Eclipse meiner Erfahrung nach nicht) und hat einen sehr überschaubaren Ressourcenverbrauch: ~2 GB maximale Prozeßgröße, realer Verbrauch oszilliert von 512 MB bis 1024 MB.&lt;/p&gt;
&lt;h1 id=&#34;fazit&#34;&gt;
    &lt;a href=&#34;#fazit&#34;&gt;
	Fazit
    &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Maschine zum Spielen bereitstellen. Ein abgelegtes Mac oder Windows-Notebook tun sicher, die kommende Java-IDE wird die Maschine eher an die Grenzen bringen als das Spiel.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.minecraft.net/en-us/store/minecraft-java-edition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Minecraft Java Edition&lt;/a&gt;

 kaufen.
&lt;ul&gt;
&lt;li&gt;Oder den Gamepass holen &amp;ndash; Minecraft ist seit kurzem in der Java und in der Bedrock Edition Teil vom Gamepass.&lt;/li&gt;
&lt;li&gt;Den dazu notwendigen Microsoft-Account mit 2FA sichern.&lt;/li&gt;
&lt;li&gt;Einen Screenshot vom 2FA QR-Code offline (USB-Stick?) archivieren.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://discord.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Discord&lt;/a&gt;

 Account machen.
&lt;ul&gt;
&lt;li&gt;2FA aktivieren.&lt;/li&gt;
&lt;li&gt;Den QR-Code sichern.&lt;/li&gt;
&lt;li&gt;Discord installieren.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Java installieren.
&lt;ul&gt;
&lt;li&gt;Man will OpenJDK, nicht Oracle, und man will vermutlich JDK 11, 16 oder 17 (das hängt später ein wenig von den Mods ab).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://multimc.org/#Download&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MultiMC&lt;/a&gt;

 installieren.
&lt;ul&gt;
&lt;li&gt;Es kann sein, daß gleich nach dem Download beim ersten Run ein Upgrade angeboten wird. Annehmen.&lt;/li&gt;
&lt;li&gt;Sicherstellen, daß das gewünschte JDK gefunden wird. Dadurch wird nicht das steinalte Default-Download-JDK verwendet.&lt;/li&gt;
&lt;li&gt;Minecraft (Microsoft Account eintragen) eintragen.&lt;/li&gt;
&lt;li&gt;Spiel-Instanz erzeugen.&lt;/li&gt;
&lt;li&gt;Forge &lt;em&gt;oder&lt;/em&gt; Fabric installieren.&lt;/li&gt;
&lt;li&gt;Danach erst die Mods zufügen.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server mit externen Spielern nicht daheim betreiben:
&lt;ul&gt;
&lt;li&gt;VPS oder ähnlich besorgen.&lt;/li&gt;
&lt;li&gt;Installation ansibilisieren.&lt;/li&gt;
&lt;li&gt;Backup einrichten und Restore testen.&lt;/li&gt;
&lt;li&gt;Server Buildprozess durchlaufen lassen, resultierendes Binary ansibilisieren.&lt;/li&gt;
&lt;li&gt;Server in Betrieb nehmen, Zugang kontrollieren.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Zusammen mit dem Server auch gleich eine virtuelle Discord-Serverinstanz für die Spieler einrichten.
&lt;ul&gt;
&lt;li&gt;Selbst Owner vom Dicord bleiben: Kind so weit entrechten, daß es den Server noch moderieren kann, aber nicht kaputt machen.&lt;/li&gt;
&lt;li&gt;Das Kind wird vermutlich bald selbst eine 2. Discord-Instanz ohne Eltern einrichten.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Es funktioniert wie spezifiziert</title>
      <link>https://blog.koehntopp.info/2021/12/14/funktioniert-wie-spezifiziert.html</link>
      <pubDate>Tue, 14 Dec 2021 20:32:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/12/14/funktioniert-wie-spezifiziert.html</guid>
      <description>&lt;p&gt;Dieser Artikel basiert auf
&lt;a href=&#34;https://twitter.com/isotopp/status/1470668771962638339&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;einem Twitter-Thread&lt;/a&gt;


und ist in deutscher Sprache als
&lt;a href=&#34;https://www.heise.de/meinung/Kommentar-zu-log4j-Es-funktioniert-wie-spezifiziert-6294476.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Heise Kommentar&lt;/a&gt;


erschienen.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Über den Java-Slogan &amp;ldquo;Write Once, Run Everywhere&amp;rdquo; wurden schon viele Witze gemacht.
Den log4j-Exploit behandeln viele nun wie einen Bug – das ist er nicht.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eine kritische Lücke in der Java-Bibliothek Log4j beherrscht gerade die Schlagzeilen.
Die IT-Welt ruft &amp;ldquo;Warnstufe Rot&amp;rdquo; aus – weil offenbar der log4j-Code JNDI-Variablenexpansion vornehmen kann.
Doch was ist JNDI?
Jindi al Dap ist der Name eines alten arabischen Philosophen und Mathematik-Pioniers, der für Sun/Oracle gearbeitet hat, um &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ein System von Directory Lookups in Java&lt;/a&gt;

 zu entwickeln.
Dieses System lädt irgendwie Code aus dem Internet nach.
Aber selbst, wenn man länger auf das Systemdiagramm starrt, erkennt man nicht unbedingt sofort, an welcher Stelle sich der Java CLASSPATH so erweitert, dass er das gesamte Internet umfasst:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;


&lt;em&gt;Systemdiagramm des JNDI Subsystems von Java, aus der &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dokumentation&lt;/a&gt;

.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;nichts-ist-jemals-simpel&#34;&gt;
    &lt;a href=&#34;#nichts-ist-jemals-simpel&#34;&gt;
	Nichts ist jemals simpel.
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das ist so, weil in Java nichts jemals simpel ist.
Java Code ist unstrukturierter trockener Staub von Codefragmenten in Klassendateien, die inert in keiner Weise miteinander interagieren.
Erst mit den passenden Factories, Delegates, Generators und ClassLoaders werden sie instanziiert und zusammengesetzt.
Der entstehende Haufen an Querverweisen führt dann nur zufällig irgendwann einmal tatsächlich wirksamen Code aus. Man könnte jetzt auf die Idee kommen, eine IDE mit integrierter syntaktischer Codesuche zu verwenden, um diesen Quelltexthaufen in Form zu bringen und zu verstehen.
Aber das ist vergebens:
Auch mit der gesamten Codebasis und einem Index darauf kann man nicht vorhersagen, was eine gegebene Java Codebase tun wird, wenn man sie startet.&lt;/p&gt;
&lt;p&gt;Es braucht auch noch Konfigurationsdateien.
Diese sind ein weiterer Haufen &amp;ndash; Properties-Dateien &amp;ndash; in einem vorsintflutlichen Vorläufer von YAML geschrieben: XML.
Oder jedenfalls, das ist es, was wir denken sollen:
Mit den Properties und der Codebasis können wir endlich versuchen zu verstehen, was Java tut.
Und das wäre auch beinahe so, aber JNDI ist genau angetreten, dieses Problem zu beheben:
Directory Lookups!
Statt also die Anwendung und ihre Konfiguration zu paketieren, und dann die Pakete in Produktion zu installieren, können wir nun mit JNDI die Konfiguration vom Netz lesen.
Das heißt, die eigentlichen Konfigurationsdateien, die uns sagen, was die Anwendung tut sind&amp;hellip; nicht mehr da.
Fortschritt!&lt;/p&gt;
&lt;p&gt;Das stellt sicher, dass uns niemand mehr hacken kann, weil niemand den Code mehr versteht:
Wichtige, zum Verständnis der Codebasis notwendige Informationen sind versteckt in einem Verzeichnisdienst, und wir wissen nicht mal welcher.
Aber wir können das noch einen Schritt weiterspielen:
Der Code, der den Directory Lookup vornimmt, ist auch nicht da, nur ein Bootstrap:
&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/event&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Event and Service Provider Packages&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Laut &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/jndi/overview/event&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dokumentation&lt;/a&gt;

 können wir Objekte aus der Nameing API bekommen und dort hinein serialisieren. Wir bekommen also Printer-Objekte mit Printer-Methoden aus dieser API, wenn wir danach fragen.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dank JDNI SPI können wir also Java Classfiles von einem LDAP-Server ausliefern lassen, die angeblich ein Printer-Object generieren, wenn wir nach einem Printer fragen &amp;ndash; dann aber stattdessen Doom installieren.
Oder einen Kryptominer oder Verschlüsselungstrojaner.
So geht Enterprise Security!&lt;/p&gt;
&lt;h2 id=&#34;write-once-run-everywhere&#34;&gt;
    &lt;a href=&#34;#write-once-run-everywhere&#34;&gt;
	Write Once, Run Everywhere!
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Der Java-Slogan ist ja &amp;ldquo;Write Once, Run Everywhere&amp;rdquo;.
Wir haben da viele Witze drüber gemacht, weil Java so oft gecrashed ist &amp;ndash; die meisten Java-Anwendungen liefern inzwischen ja die gesamte Ausführungsumgebung einschließlich der JRE mit, damit überhaupt etwas funktioniert.
Jetzt funktioniert endlich mal alles, und die Leute sind wieder unglücklich.
Aber im Ernst: Viele behandeln den log4j-Exploit wie einen Bug, einen Programmierfehler, eine Verletzung einer Spezifikation.
Genau das ist jedoch nicht der Fall:&lt;/p&gt;
&lt;p&gt;Es funktioniert &amp;ndash; wortwörtlich &amp;ndash; endlich einmal alles wie spezifiziert und dokumentiert:
All die Modularität und dynamische Erweiterbarkeit von Java hat ganz wunderbar und genau wie geplant zusammengearbeitet und funktioniert.
Darauf haben wir dekadenlang hingearbeitet!&lt;/p&gt;
&lt;h2 id=&#34;notabug-wontfix&#34;&gt;
    &lt;a href=&#34;#notabug-wontfix&#34;&gt;
	&amp;ldquo;NOTABUG, WONTFIX&amp;rdquo;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Und das ist das eigentliche Problem hier.
Viele rufen jetzt nach &amp;ldquo;Mehr Kontrolle!&amp;rdquo;, &amp;ldquo;Mehr Review!&amp;rdquo;, &amp;ldquo;Mehr Funding!&amp;rdquo;, &amp;ldquo;Mehr Augen auf den Code!&amp;rdquo;.
Was wirklich helfen würde wäre weniger Code, weniger Indirektion und Boilerplate, und einfach mehr&amp;hellip; Einfachheit.&lt;/p&gt;
&lt;p&gt;Wieso brauche ich ein &lt;code&gt;LogAppenderFactorySingleton&lt;/code&gt;, das XML liest, um den Namen der Klasse zu bekommen, die es instanziieren muss, damit ich meine Logzeile da einwerfen kann, um sie asynchron an einen &lt;code&gt;LogStream&lt;/code&gt; anzuhängen?
Das ist nicht einfach.
Was ist einfach?
JSON nach stderr drucken.
Das ist einfach.
Aber Firmen stellen seit etwa einer Dekade Leute ein, die nicht wissen, was stdout und stderr sind und das ist irgendwie okay, weil inzwischen ja sowieso alles ein Webservices ist&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert4.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ein totales log4shell Nonmention von &lt;a href=&#34;https://twitter.com/apenwarr/status/1469183890749558784&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;apenwarr&lt;/a&gt;

.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Softwareentwicklung ist viel moderner geworden:
Wir haben Merge Requests mit Code Review, CI/CD-Pipelines, Infrastructure as Code und Immutable Infrastructure.
Das nützt nur nix, wenn meine Java Logging Library &lt;a href=&#34;https://twitter.com/TheASF/status/1400875147163279374&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;auf dem Mars Code von Directory-Servern auf der Erde nachlädt&lt;/a&gt;

 und so das &amp;ldquo;Remote&amp;rdquo; in RCE komplett neu definiert.
Die Analyse von Dependencies hat nur dann Sinn, wenn die Liste dieser Abhängigkeiten endlich, und genau so immutable wie die Infrastruktur ist.&lt;/p&gt;
&lt;p&gt;Java hatte einmal die notwendigen Kontrollknöpfe, mit denen wir erzwingen konnten, dass diese Liste von Abhängigkeiten endlich und unveränderlich ist.
Wenn man auf diese Art von Lebensstil steht, gibt es etwas, das sich SM nennt: &lt;a href=&#34;https://docs.oracle.com/javase/tutorial/essential/environment/security.htmlOracle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Oracle SM&lt;/a&gt;

.
SM bringt die notwendigen Verträge und die Disziplin, die eine Codebase braucht.
Aber die meisten Anwender stehen nicht auf SM, und lehnen die Idee ab.
Also wird die Funktionalität in Java 17 als deprecated (veraltet) gekennzeichnet und später entfernt werden (&lt;a href=&#34;https://openjdk.java.net/jeps/411&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JEP 411: Deprecate the Security Manager for Removal&lt;/a&gt;

).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/12/spezifiziert3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;h2 id=&#34;wie-ein-dreijähriger&#34;&gt;
    &lt;a href=&#34;#wie-ein-dreij%c3%a4hriger&#34;&gt;
	Wie ein Dreijähriger
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Auch JNDI hat SM abgelehnt und hat ein promiskuitives Interface, das Code irgendwoher lädt und ausführt.
Man muss sich das wie einen Dreijährigen vorstellen, der sich jede Klasse in den Mund steckt, um herauszufinden wie sie schmeckt und ob sie sich ausführen lässt.
Das ist am Ende genau die Spezifikation:
Hier ist ein Object, deserialisiere es.
In Java bedeutet das, dass der Code für die Klasse des Objektes irgendwo her kommen muss, deren Methoden dann ausgeführt werden.&lt;/p&gt;
&lt;p&gt;Natürlich würde niemand das für eine gute Idee halten, wenn man es so formuliert.
Aber andererseits hat es die Person, die das vor 8 Jahren implementiert hat, nicht gesehen, und auch die Hunderttausend, die log4j in ihre Codebasis importiert haben, sind nicht darüber gestolpert.
Was sagt uns das über den Dependency-Management-Prozess von Organisationen, die Software entwickeln?
Über das Verständnis der Codebase, der Abhängigkeiten, und der Prozesse, die Datenfluss und Releases planen?
Ja, genau.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Wir verwenden eine modulare Architektur und agile Methoden, um die Entwicklungsgeschwindigkeit zu steigern.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E = 1/2m*(v^2)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mehr Entwicklungsgeschwindigkeit macht größere Krater.&lt;/p&gt;
&lt;h2 id=&#34;code-ist-nicht-dein-freund&#34;&gt;
    &lt;a href=&#34;#code-ist-nicht-dein-freund&#34;&gt;
	Code. Ist. Nicht. Dein. Freund.
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ganz besonders nicht dynamisch aus dem Internet nachgeladener Code.&lt;/p&gt;
&lt;p&gt;Code. Ist. Nicht. Dein. Freund.&lt;/p&gt;
&lt;p&gt;Ich weiß, es klingt komisch, wenn man Entwickler ist und den eigenen Lebensunterhalt damit bestreitet, dass man glaubt, man sei mit dem Code befreundet.&lt;/p&gt;
&lt;p&gt;Aber so ist es.
Weniger Code ist besserer Code.
Am besten so wenig Code, dass man ihn zur Gänze und mit allen seinen Interaktionen verstehen kann.
Und auch den Code, der notwendig ist, um den eigenen Code zu betreiben.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Discord Nitro Spam and 2FA</title>
      <link>https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html</link>
      <pubDate>Tue, 30 Nov 2021 08:29:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/30/discord-nitro-spam-and-2fa.html</guid>
      <description>&lt;p&gt;This morning the Discord account of my son started to send &amp;ldquo;free nitro&amp;rdquo; spam to his friends on the friend list, and to some Discords he was a member of.
He had 2FA (Google Authenticator) on the account.
That fact alone made this a recoverable failure.&lt;/p&gt;
&lt;p&gt;My son is playing minecraft, has a friend list of around 100 fellow players, and is member of around 40 Discords.
He also connected his Discord to Spotify, YouTube and other servies, and he authorized around 12 application services, mostly Discord/Minecraft bot services.
It is pretty safe to say that his Discord account is very valuable to him, and plays a central part in his pandemic coping.&lt;/p&gt;
&lt;p&gt;The spam was sending messages to all his friends, and a few Discords, impersonating him.
It was not acting as a bot, or even one of his own bots.
That means the spammer had accessed his account and identity.&lt;/p&gt;
&lt;h2 id=&#34;recovery-was-easy-thanks-to-2fa&#34;&gt;
    &lt;a href=&#34;#recovery-was-easy-thanks-to-2fa&#34;&gt;
	Recovery was easy, thanks to 2FA
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Changing the account password is a 2FA protected operation, and invalidates all other login tokens.&lt;/p&gt;
&lt;p&gt;That means, only a person having access to his cellphone can 2FA and change the password - him (or, this time, me).
It also means his Desktop client, all spammers impersonating him and everyone else is logged out.
This stopped the Spam dead immediately.&lt;/p&gt;
&lt;h2 id=&#34;how-the-spam-works&#34;&gt;
    &lt;a href=&#34;#how-the-spam-works&#34;&gt;
	How the spam works
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The &amp;ldquo;free nitro&amp;rdquo; spam is a message promising Discord Nitro (Server Boost, a pay feature) for free.
It contains a link that leads you to a typosquatter domain displaying Discords original CI.
It presents you with a QR code to scan.&lt;/p&gt;
&lt;p&gt;It then directs you to open the Discord app on the phone, hit the settings, hit the personal icon on the right and use the function labelled &amp;ldquo;Scan QR code&amp;rdquo; to claim the prize.&lt;/p&gt;
&lt;p&gt;Nothing in the UI of the original Discord cellphone app explains to a casual observer what this function does:
&amp;ldquo;Using this function will log somebody in to your account&amp;rdquo;.
The copy is simply &amp;ldquo;Scan QR code&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/discord-scan-qr.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Discord Settings show the &amp;ldquo;Use the cellphone to auth the desktop app&amp;rdquo; function simply as &amp;ldquo;Scan QR Code&amp;rdquo;. Nothing explains what the function really does: It logs in somebody which may or may not be you. Never use this function.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Doing what is being asked will provide a bot with a login token to your account.
The bot will then begin to send spam in your name to your friends and all discords you are member of.&lt;/p&gt;
&lt;p&gt;It will also change your password, if it can.
It cannot do that when 2FA is active on your account.
2FA is literally saving your account here.&lt;/p&gt;
&lt;h2 id=&#34;training-your-kid&#34;&gt;
    &lt;a href=&#34;#training-your-kid&#34;&gt;
	Training your kid
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Here is what to do: Train your kid to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use 2FA properly, and always use this and no login shortcuts.&lt;/li&gt;
&lt;li&gt;archive the original 2FA QR codes used for setting up 2FA. Make a screenshot, and store the PNG of the setup QR code on a USB stick or another offline storage for recovery. This is much easier than the regular account recovery procedures 2FA setups offer, and unlike them, it is one way that works the same for all accounts. It also lets you have the 2FA code generator on the phone and a tablet, for example.&lt;/li&gt;
&lt;li&gt;Never re-use passwords. In the case of my son, he did not use his Discord password anywhere else, and he has a password list. Thus, he had to change only the Discord password and not fix any other accounts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, help your kid: Audit their online accounts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make yourself a calendar entry to audit the accounts your kid has every 6 months:
&lt;ul&gt;
&lt;li&gt;Check the password store: Make sure passwords are not re-used.&lt;/li&gt;
&lt;li&gt;Check 2FA: Have it enabled everywhere possible where regular TOTP can be used. Avoid Steam Authenticator or other special 2FA apps that may be offered, they are just more to learn and confusing. They break important workflows that must always be done right.&lt;/li&gt;
&lt;li&gt;Check account connections, cross-authentication, enabled bots and their permissions and so on.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;actually perform the audit.
&lt;ul&gt;
&lt;li&gt;Have your kid sit in on this, and explain what you do and why. Discuss your thought with them, and the risk analysis you do. Explain online business models with them, too: How is this service or game making money, where is the value, do you think that is okay? What do you want? Offer opinions and evaluation, but try to let them make choices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, hold yourself to the same standards.&lt;/p&gt;
&lt;p&gt;For the record, my personal Google Authenticator has 18 entries.
I did not specifically set out to maximize that, so just take this as a guidance, not a competition.&lt;/p&gt;
&lt;h2 id=&#34;2fa-works&#34;&gt;
    &lt;a href=&#34;#2fa-works&#34;&gt;
	2FA works!
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Again, note how 2FA worked exactly the way it is designed to work:&lt;/p&gt;
&lt;p&gt;It made a loss of control on the account a recoverable operation.
Instead of a permanent and total loss of the center of his online life, this was just an awkward 30 minutes and a bunch of apologies.&lt;/p&gt;
&lt;p&gt;Also note that while Discord is the better Slack, it does have UI/UX design problems around QR code quick authentication.
Never use this function.
Train your kid to not use this function.
Always login with username, password and 2FA.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL: Moving Average</title>
      <link>https://blog.koehntopp.info/2021/11/24/mysql-moving-average.html</link>
      <pubDate>Wed, 24 Nov 2021 22:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/24/mysql-moving-average.html</guid>
      <description>&lt;p&gt;MySQL window functions can be used to calculate daily averages or moving averages for a 24h time window relatively easily.
In an &lt;a href=&#34;https://blog.koehntopp.info/2020/06/21/mysql-window-functions.html&#34;&gt;earlier article&lt;/a&gt;

 basic window functions were already discussed.
In this article, we want to see how we can get daily buckets and moving averages.&lt;/p&gt;
&lt;p&gt;A sample program is available, as usual, &lt;a href=&#34;https://github.com/isotopp/mysql-dev-examples/blob/master/mysql-rolling-window/rolling-window.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;on GitHub&lt;/a&gt;

.&lt;/p&gt;
&lt;h1 id=&#34;getting-sample-data&#34;&gt;
    &lt;a href=&#34;#getting-sample-data&#34;&gt;
	Getting sample data
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We will be working with a data table named &lt;code&gt;data&lt;/code&gt;, with three columns: a sensor &lt;code&gt;id&lt;/code&gt;, a measurement datetime &lt;code&gt;d&lt;/code&gt; and a metric value &lt;code&gt;m&lt;/code&gt; that was sampled at that time.
The table definition looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Create a data table&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setup_tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sql_setup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;drop table if exists data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34; create table data (
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                id integer not null,
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                d datetime not null,
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                m integer not null,
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                primary key (id, d)
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        )&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sql_setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OperationalError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;setup_tables: failed &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; with &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For one year, each day and for each of our 11 (0-10) sensors, 1001 values will be collected.
We insert a random time within the day, and a random measured value, an integer between 0 and 1000.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Fill data table with test data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2020-01-01 00:00:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Start date and time yyyy-mm-dd hh:mm:ss&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--end&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2020-12-31 23:59:59&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;End date and time yyyy-mm-dd hh:mm:ss&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Number of values per day&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fill_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2020-01-01 00:00:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2020-12-31 23:59:59&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Get rid of the old data&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;truncate table data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromisoformat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromisoformat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;one_day&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;days&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# For one year, for each day:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Date = &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# For each measurement time:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# a random sensor id, a random second in the day, and a random metric&lt;/span&gt;
            &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seconds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;86399&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# are written to the database.&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;insert into data (id, d, m) values (&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(id)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(d)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(m)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)&amp;#34;&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# If the (id, time) combination is not unique, we get an error that we pass&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IntegrityError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;# The Birthday Paradox in Action&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;# print(e)&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# next day.&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;today&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;one_day&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;daily-buckets-with-group-by&#34;&gt;
    &lt;a href=&#34;#daily-buckets-with-group-by&#34;&gt;
	Daily Buckets with GROUP BY
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Window Queries are somewhat related to aggregations with GROUP BY:
With GROUP BY we make look at each row under the lens of the GROUP BY statement.
All rows that have equal values as listed in the GROUP BY clause land on the same pile.
We can then apply aggregation functions to measure the pile.&lt;/p&gt;
&lt;p&gt;In our example, we could use &lt;code&gt;GROUP BY date(d)&lt;/code&gt;.
That is, our &lt;code&gt;datetime&lt;/code&gt; is turned into a &lt;code&gt;date&lt;/code&gt;, the time component is cut off.
Two values with the same date, but different times, are considered identical and would land on the same pile.
Different &lt;code&gt;id&lt;/code&gt; values or different metric values &lt;code&gt;m&lt;/code&gt; are also not used to select different piles.&lt;/p&gt;
&lt;p&gt;What we do is &lt;code&gt;GROUP BY id, date(d)&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Group by day&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;daily_groups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    select id
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , date(d) as d
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , count(m) as cnt
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) as total
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m)/count(m) as av 
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;      from data 
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    group by id, date(d)
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    order by id, d
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;id: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;2d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; date: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  -  cnt: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cnt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;6d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; sum: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; average: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;av&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So two measurements from the same sensor-id and taken on the same date are put onto the same pile.&lt;/p&gt;
&lt;p&gt;MySQL offers us a number of functions to measure the pile: &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/aggregate-functions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aggregate Functions&lt;/a&gt;

.
We can &lt;code&gt;COUNT()&lt;/code&gt; the number of rows, we can &lt;code&gt;SUM()&lt;/code&gt; them up, we can ask for their &lt;code&gt;AVG()&lt;/code&gt;, &lt;code&gt;MIN()&lt;/code&gt; or &lt;code&gt;MAX()&lt;/code&gt;.
But we can also ask for the values themselves as a comma separated list, using &lt;code&gt;GROUP_CONCAT()&lt;/code&gt;.
We can also ask for the values to be turned into JSON using &lt;code&gt;JSON_ARRAYAGG()&lt;/code&gt; or &lt;code&gt;JSON_OBJECTAGG()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In our example above, we ask for the sum and the count and calculate the average ourselves.
The output looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;./rolling-window.py daily-groups &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -5
&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01  -  cnt:     80 sum: 418888 average: 5236.1000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-02  -  cnt:     92 sum: 419129 average: 4555.7500
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-03  -  cnt:     94 sum: 417583 average: 4442.3723
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-04  -  cnt:     94 sum: 422754 average: 4497.3830
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-05  -  cnt:    101 sum: 515639 average: 5105.3366
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;./rolling-window.py daily-groups &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -369 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tail -5
&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-30  -  cnt:     95 sum: 513361 average: 5403.8000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31  -  cnt:     94 sum: 480321 average: 5109.7979
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-01  -  cnt:     86 sum: 415058 average: 4826.2558
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-02  -  cnt:     93 sum: 443509 average: 4768.9140
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-03  -  cnt:     84 sum: 453897 average: 5403.5357
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since we aggregate and order by id first, we get all values from sensor 0 first, for an entire year.
Then the values for sensor id 1 follow, starting again at the beginning of the year.
Each row of output has values for one day, because we aggregated that way.&lt;/p&gt;
&lt;p&gt;We can see how for each of the 10 sensors, approximately 90 values per day exist, but the actual value varies.
We can also see that the average is around 5000, but again, it varies each day.&lt;/p&gt;
&lt;h1 id=&#34;daily-partitions&#34;&gt;
    &lt;a href=&#34;#daily-partitions&#34;&gt;
	Daily Partitions
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Window functions work just like aggregates, if we ask for that with a PARTITION BY clause.
But they will return all rows instead of making piles.
So when we define &lt;code&gt;WINDOW w AS ( partition by id, date(d) order by id, d)&lt;/code&gt;, we will get our sensors by sensor and by date.
Each new sensor id, and each new date will restart &amp;ldquo;data collection&amp;rdquo;, that is, our sums or counts will be reset.&lt;/p&gt;
&lt;p&gt;Our code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Partition by day&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;daily_partitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    select id
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , d
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , count(m) over w as cnt
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) over w as total
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) over w/count(m) over w as av 
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;      from data
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  window w as (
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    partition by id, date(d)
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    order by id, d)
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;id: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;2d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; date: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  -  cnt: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cnt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;6d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; sum: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; average: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;av&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can check the sums and counts, and see them be restarted:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;./rolling-window.py daily-partitions &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; less
&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:13:43  -  cnt:      1 sum: 6401 average: 6401.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:14:25  -  cnt:      2 sum: 15746 average: 7873.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:15:33  -  cnt:      3 sum: 19656 average: 6552.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 23:09:13  -  cnt:     79 sum: 411728 average: 5211.7468
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 23:27:16  -  cnt:     80 sum: 418888 average: 5236.1000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-02 00:14:48  -  cnt:      1 sum: 5834 average: 5834.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-02 00:15:21  -  cnt:      2 sum: 10970 average: 5485.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:01:21  -  cnt:     92 sum: 475441 average: 5167.8370
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:14:32  -  cnt:     93 sum: 475494 average: 5112.8387
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:25:47  -  cnt:     94 sum: 480321 average: 5109.7979
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-01 00:24:46  -  cnt:      1 sum: 7079 average: 7079.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-01 00:32:22  -  cnt:      2 sum: 7989 average: 3994.5000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-01 01:01:40  -  cnt:      3 sum: 14551 average: 4850.3333
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can see how each time the day changes or the id changes the sum and count values start over.
Initially our count is 1, the sum is 6401 and the average is larger than 5000.
As we proceed through the day, we can see how the average converges against that expected value.&lt;/p&gt;
&lt;p&gt;After &lt;code&gt;2020-01-01 23:27:16&lt;/code&gt; at a count of &lt;code&gt;80&lt;/code&gt; the new day starts and the counters reset.&lt;/p&gt;
&lt;p&gt;The same happens at the end of the year, at &lt;code&gt;2020-01-01 23:27:16&lt;/code&gt; when we start over at the first of January, but with id=1.&lt;/p&gt;
&lt;h1 id=&#34;moving-average&#34;&gt;
    &lt;a href=&#34;#moving-average&#34;&gt;
	Moving average
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Instead of partitioning the data set by date boundaries we can also define a moving window instead.
This window is based on either values, or on date values.
In our case, we want the latter: for each metric date &lt;code&gt;d&lt;/code&gt;, we want to do our math on the preceding 24 hours.&lt;/p&gt;
&lt;p&gt;In code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Sliding window query - 24h&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;daily_window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    select id
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , d
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , count(m) over w as cnt
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) over w as total
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;         , sum(m) over w/count(m) over w as av 
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;      from data
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  window w as (order by d range between interval 1 day preceding and current row)
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;id: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;2d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; date: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  -  cnt: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cnt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;6d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; sum: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; average: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;av&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Window clause is &lt;code&gt;WINDOW w AS (order by d range between interval 1 day preceding and current row)&lt;/code&gt;.
As we can see, the &lt;code&gt;id&lt;/code&gt; is out of the picture here:
We cannot nest window definitions, and that means in this example we count and sum over the previous 24h of &lt;strong&gt;all&lt;/strong&gt; sensors, not sensors with the same id as ours.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  6 date: 2020-01-01 00:03:44  -  cnt:      1 sum: 3420 average: 3420.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id: 10 date: 2020-01-01 00:07:50  -  cnt:      2 sum: 5359 average: 2679.5000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  5 date: 2020-01-01 00:08:35  -  cnt:      3 sum: 12441 average: 4147.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-04 20:40:46  -  cnt:    998 sum: 4842406 average: 4852.1102
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  7 date: 2020-01-04 20:41:49  -  cnt:    998 sum: 4842673 average: 4852.3778
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  8 date: 2020-01-04 20:43:00  -  cnt:    997 sum: 4833426 average: 4847.9699
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  1 date: 2020-01-04 20:43:05  -  cnt:    998 sum: 4837433 average: 4847.1273
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  7 date: 2020-12-31 23:54:52  -  cnt:   1003 sum: 5089623 average: 5074.3998
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  8 date: 2020-12-31 23:56:02  -  cnt:   1004 sum: 5092441 average: 5072.1524
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  8 date: 2020-12-31 23:59:56  -  cnt:   1000 sum: 5059683 average: 5059.6830````
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From the changing &lt;code&gt;id&lt;/code&gt; values we can see that all sensors are considered.
The count also shows that in the middle of the field around 1000 values are considered - the amount of values in one 24h range.&lt;/p&gt;
&lt;p&gt;An expression such as &lt;code&gt;order by id, d range between interval 1 day preceding and current row&lt;/code&gt; is not valid: we get&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;MySQLdb._exceptions.OperationalError: (3587, &amp;#34;Window &amp;#39;w&amp;#39; with RANGE N PRECEDING/FOLLOWING frame requires exactly one ORDER BY expression, of numeric or temporal type&amp;#34;)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We would have to ask for values from one sensor, specifically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;over&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;over&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;over&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;over&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;av&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;between&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;preceding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and do that for each successive constant &lt;code&gt;id&lt;/code&gt; value.
That is not fast nor elegant.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:13:43  -  cnt:      1 sum: 6401 average: 6401.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:14:25  -  cnt:      2 sum: 15746 average: 7873.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-01-01 00:15:33  -  cnt:      3 sum: 19656 average: 6552.0000
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-04-01 02:48:29  -  cnt:     99 sum: 463956 average: 4686.4242
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-04-01 03:07:43  -  cnt:    100 sum: 472922 average: 4729.2200
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-04-01 03:15:23  -  cnt:    101 sum: 478127 average: 4733.9307
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:01:21  -  cnt:     97 sum: 500889 average: 5163.8041
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:14:32  -  cnt:     96 sum: 487287 average: 5075.9063
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;id:  0 date: 2020-12-31 23:25:47  -  cnt:     97 sum: 492114 average: 5073.3402
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We would have to wrap all that into a dependent subquery to loop.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arista Type 7 Passwords</title>
      <link>https://blog.koehntopp.info/2021/11/22/arista-type-7-passwords.html</link>
      <pubDate>Sun, 21 Nov 2021 17:29:00 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/22/arista-type-7-passwords.html</guid>
      <description>&lt;p&gt;A friend of mine wanted to provision BGP passwords for their Arista switch configuration.&lt;/p&gt;
&lt;p&gt;So a config stanza such as&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;router bgp 65001
   router-id 10.1.1.1
   neighbor mydevices peer-group
   neighbor mydevices password 7 8kjYaye5DsQh0epELyKNe0oZ3E3zp39X
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;requires generation of the Password (actually &amp;ldquo;supersecretpassword&amp;rdquo;) in an encrypted form.&lt;/p&gt;
&lt;p&gt;Arista switches can do this using CLI tools, apparently.
They seem to have an onboard Linux, which seems to provide limited tooling, but is good enough to run a 32-bit Python 3.7.
Arista provides modules to help with handling their configuration.
&lt;a href=&#34;https://medium.com/@what_if/encrypting-decrypting-arista-bgp-bmp-ospf-passwords-ff2072460942&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ryan Gelobter&lt;/a&gt;


documented these in an article on Medium.&lt;/p&gt;
&lt;p&gt;Unfortunately, these modules are not well portable.
They have been implemented in a CPython module for Python 3.7 on i386 (32bit) Linux.
They also have a lot of dependencies to other shared objects that are not easily available except in the switch environment.&lt;/p&gt;
&lt;p&gt;So, if you wanted to provision switch configurations,
you would need to run some code on the switch to generate the passwords the way Ryan Gelobter documents,
or do the same in a virtual machine with a virtual switch running in it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;switch1# bash python -c &amp;#39;import DesCrypt;
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;print DesCrypt.encrypt(&amp;#34;BMP1_passwd&amp;#34;, &amp;#34;supersecretpassword&amp;#34;)&amp;#39;
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;JieKbldfLyl9IzUBJZRvKIcc1w5wWogI
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looking at the &lt;code&gt;DesCrypt.py&lt;/code&gt; is not particularly helpful:
The code in it does little more than&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;_DesCrypt&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;encryptedData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_DesCrypt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cbcEncrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and &lt;code&gt;_DesCrypt&lt;/code&gt; is actually &lt;code&gt;_Descrypt.cpython-37m-i386-linux-gnu.so&lt;/code&gt;.
Well, at least it is only 10 KB in size, so how hard can it be?&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s have a look:&lt;/p&gt;
&lt;h1 id=&#34;ghidra&#34;&gt;
    &lt;a href=&#34;#ghidra&#34;&gt;
	Ghidra
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When we drop the module into Ghidra, we get to see a &lt;code&gt;PyInit__DesCrypt(void)&lt;/code&gt; symbol.
The code in that function just calls out to &lt;code&gt;PyModuleCreate2(&amp;amp;PyModuleDef, 0x3f5)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Looking at the &lt;code&gt;PyModuleDef&lt;/code&gt; requires &lt;a href=&#34;https://docs.python.org/3/c-api/module.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the documentation&lt;/a&gt;

 to properly understand what is going on.
We identify two functions, &lt;code&gt;cbcEncrypt&lt;/code&gt; and &lt;code&gt;cbcDecrypt&lt;/code&gt; by their &lt;a href=&#34;https://docs.python.org/3/c-api/structures.html#c.PyMethodDef&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;PyMethodDef&lt;/code&gt;&lt;/a&gt;

 entries.
Two labels for entry points in a stripped binary identified.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-pymethoddef.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Python Method Definition Table for the _DesCrypt Module defines two functions, named &lt;code&gt;cbcEncrypt&lt;/code&gt; and &lt;code&gt;cbcDecrypt&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Looking at the &lt;code&gt;cbcEncrypt&lt;/code&gt; function shows us that it has a dependency on &lt;code&gt;cbc_crypt()&lt;/code&gt;,
and that seems to be a function from &lt;code&gt;libc&lt;/code&gt;, according to &lt;a href=&#34;https://linux.die.net/man/3/cbc_crypt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the manpage&lt;/a&gt;

.
So it is ancient DES, in CBC mode that is being used.
We should be able to do this in pure Python without many additional dependencies then.&lt;/p&gt;
&lt;p&gt;Using Ghidra more, we can decode &lt;code&gt;cbcEncrypt()&lt;/code&gt; and the &lt;code&gt;getHashedKey()&lt;/code&gt; function it calls.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getHashedKey&lt;/code&gt; generates the key the usual way, by xor-ing the incoming string with itself in an 8 bytes long ring buffer, but the starting value is not all zeroes, but some magic value (&lt;code&gt;238ad5f51ec9a8d5&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Also, &lt;code&gt;cbcEncrypt&lt;/code&gt; pads the data to an even 8 byte boundary as required by DES.
How much was padded needs to be embedded in the ciphertext.
There is a selection of standard methods for this, as offered for example by
&lt;a href=&#34;https://pycryptodome.readthedocs.io/en/latest/src/util/util.html#Crypto.Util.Padding.pad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crypto.Util.Padding.pad()&lt;/a&gt;


in pycryptodome (&amp;ldquo;pkcs7&amp;rdquo;, &amp;ldquo;iso7816&amp;rdquo; and &amp;ldquo;x923&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cbcEncrypt&lt;/code&gt; uses none of these standard methods, and implements its own method:
the padding is encoded in the high nibble of a fixed magic int.&lt;/p&gt;
&lt;p&gt;That magic int is always prepended, even if no padding was necessary:
We get &lt;code&gt;?ebb884c&lt;/code&gt;, with &lt;code&gt;?&lt;/code&gt; indicating the number of padbytes (&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;7&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-gethashedkey.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ghidra Output of the getHashedKey() function, with a bit of annotation and typing added to get a better view.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With this information, we should be able to recreate the function in our own C-code and check if it can recreate the examples Ryan Gelobter provided.&lt;/p&gt;
&lt;p&gt;Of course, it does not.&lt;/p&gt;
&lt;h1 id=&#34;debugging-the-original-code&#34;&gt;
    &lt;a href=&#34;#debugging-the-original-code&#34;&gt;
	Debugging the original code
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We need to debug, and in order to be able to do that we need to be able to load and isolate &lt;code&gt;getHashedKey()&lt;/code&gt; first.
The original version, to check what the actual hashed key should look like, and compare the result to our own.&lt;/p&gt;
&lt;p&gt;That should be easy:
An example &lt;a href=&#34;https://blog.koehntopp.info/2005/10/08/dynamisch-geladener-code.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;from 2005&lt;/a&gt;

 (german language article) shows&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to turn a function into a &lt;code&gt;libsomething.a&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;then into &lt;code&gt;libsomething.so&lt;/code&gt;, and&lt;/li&gt;
&lt;li&gt;then how to &lt;code&gt;dlopen()&lt;/code&gt; and &lt;code&gt;dlsym()&lt;/code&gt; that binary to call a single function in it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That final piece of code will serve us well:
We want to load the _DesCrypt module and call &lt;code&gt;getHashedKey()&lt;/code&gt; in an isolated context to see what a correct return value looks like.&lt;/p&gt;
&lt;h1 id=&#34;dependencies&#34;&gt;
    &lt;a href=&#34;#dependencies&#34;&gt;
	Dependencies
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Turns out, loading &lt;code&gt;_DesCrypt...so&lt;/code&gt; is not so easy, because of a dependency on &lt;code&gt;libtac.so.0&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;ldd _DesCrypt.cpython-37m-i386-linux-gnu.so
&lt;span class=&#34;go&#34;&gt;        linux-gate.so.1 (0xf7f7c000)
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        libtac.so.0 =&amp;gt; not found
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        libpython3.7m.so.1.0 =&amp;gt; not found
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        libstdc++.so.6 =&amp;gt; /lib32/libstdc++.so.6 (0xf7d81000)
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        libm.so.6 =&amp;gt; /lib32/libm.so.6 (0xf7c7d000)
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        libgcc_s.so.1 =&amp;gt; /lib32/libgcc_s.so.1 (0xf7c5e000)
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        libc.so.6 =&amp;gt; /lib32/libc.so.6 (0xf7a73000)
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;        /lib/ld-linux.so.2 (0xf7f7e000)```
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So we are missing two libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libpython3.7m.so.1.0&lt;/code&gt; and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libtac.so.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python bit is fixed by building a Python-3.7 in 32-bit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;apt install gcc-multilib
&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgz
&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;tar xzf Python-3.7.5.tgz
&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Python-3.7.5/
&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;./configure --build&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;i686-pc-linux-gnu &lt;span class=&#34;nv&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 &lt;span class=&#34;nv&#34;&gt;CXXFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 &lt;span class=&#34;nv&#34;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-m32 --enable-shared
&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;make -j6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A minor roadbump: We need to build for 32-bit, but on a 64-bit machine.
The compile-flag &lt;code&gt;-m32&lt;/code&gt; does that, but it will fail due to some missing includes until we install &lt;code&gt;gcc-multilib&lt;/code&gt; as shown above.
We can then download the old version of Python, and build it with the required flags for 32-bit support.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;libtac.so.0&lt;/code&gt; we could copy off the switch.
If we try, things escalate quickly .
That is, because that &lt;code&gt;.so&lt;/code&gt; in turn loads even more libraries, most of which we don&amp;rsquo;t have access to.
And if we had them, they might load even more dependencies.&lt;/p&gt;
&lt;p&gt;Looking into Ghidra again, we know that the code we are interested in does not really depend on &lt;code&gt;libtac,so.0&lt;/code&gt;.
&lt;code&gt;cbcEncrypt()&lt;/code&gt; itself does, but only if something goes wrong and an exception is being raised,
but at this stage of our investigation we only want &lt;code&gt;getHashedKey()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Following the guide from 16 years ago, we can quickly write some code to &lt;code&gt;dlopen()&lt;/code&gt; the library:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;mydevices_passwd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;supersecretpassword&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
 
    &lt;span class=&#34;n&#34;&gt;func_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
 
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;main start&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
 
    &lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dlopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LIBNAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RTLD_LAZY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dlopen(%s, RTLD_LAZY) failed: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;LIBNAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
    &lt;span class=&#34;c1&#34;&gt;// find func
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dlsym&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;_Z12getHashedKeyPKciPc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dlerror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dlsym(%p, &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;getHashedKey&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; failed: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;error_msg&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;gethashedKey %p&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
 
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keylen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dlclose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;libhandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
 
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;killing-dependencies&#34;&gt;
    &lt;a href=&#34;#killing-dependencies&#34;&gt;
	Killing Dependencies
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;That way we can inspect the output of the function (it overwrites the first 8 bytes of &lt;code&gt;data&lt;/code&gt;) and get a reference key value to debug against.
Or could, if that would work.
It does not, because the &lt;code&gt;.so&lt;/code&gt; we open still has listed &lt;code&gt;libtac.so.0&lt;/code&gt; as &lt;code&gt;NEEDED&lt;/code&gt; and we need to fix it.&lt;/p&gt;
&lt;p&gt;There are many ways to edit ELF binaries, but most are badly maintained.
An easy way is a web service such as &lt;a href=&#34;https://elfy.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;elfy.io&lt;/a&gt;

.
We upload the library, click &lt;code&gt;Load information&lt;/code&gt; -&amp;gt; &lt;code&gt;Loader directives&lt;/code&gt; and edit the first dependency (&lt;code&gt;libtac.so.0&lt;/code&gt;) (offset 0x270) to point to the second dependency (&lt;code&gt;libpython3.7m.so.1.0&lt;/code&gt; (offset 0x283) instead.
Downloading the code again, we can rename it to &lt;code&gt;libtest.so&lt;/code&gt; and load it with our test program from above, getting a reference key value.
So &lt;code&gt;mydevices_passwd&lt;/code&gt; in a non-broken implementation yields the raw key value of &lt;code&gt;4A 0E 5D 1A 70 4F 1F 23&lt;/code&gt; for DES.&lt;/p&gt;
&lt;p&gt;Having that, debugging can continue.
It turns out: math is hard and Intel is a little-endian architecture:
The seed byte sequence &lt;code&gt;D5 A8 ... 8A 23&lt;/code&gt; is of course the long &lt;code&gt;238A…A8D5&lt;/code&gt;.
I am definitively not doing these things often enough anymore to not make this kind of mistake.&lt;/p&gt;
&lt;h1 id=&#34;progress&#34;&gt;
    &lt;a href=&#34;#progress&#34;&gt;
	Progress!
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Having a working &lt;code&gt;getHashedKey()&lt;/code&gt; we can now look at &lt;code&gt;cbcEncrypt()&lt;/code&gt; and reverse that.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/arista-cbcencrypt.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The heart of &lt;code&gt;cbcEncrypt()&lt;/code&gt; fetches two Python &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; and works with them. The &lt;code&gt;key&lt;/code&gt; is processed with &lt;code&gt;getHashedKey()&lt;/code&gt;, then &lt;code&gt;cbc_crypt()&lt;/code&gt; is set up and called. The result returned to Python using &lt;code&gt;Py_BuildValue&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The moment we try to build this in C, it proves frustrating again:
&lt;code&gt;cbc_crypt()&lt;/code&gt; is no longer part of &lt;code&gt;libc&lt;/code&gt;.
It is outdated, legacy, but unfortunately still in use.
Not only by Arista, but also other companies and protocols.
Among them some ancient RPC protocols.
It has been removed from &lt;code&gt;libc&lt;/code&gt; and moved to &lt;code&gt;libtirpc3&lt;/code&gt;, it seems.
We need to install &lt;code&gt;libtirpc3&lt;/code&gt;, &lt;code&gt;libtirpc-dev&lt;/code&gt; and &lt;code&gt;libtirpc-common&lt;/code&gt; to be able to build code that calls &lt;code&gt;cbc_crypt()&lt;/code&gt;.
Even then we seem to be limited to static linking, because for some reason the shared objects do no longer export the symbol.&lt;/p&gt;
&lt;p&gt;Some more short short hiccups:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The padding value is a nibble, not a byte, and the long it is part of has to be little endian naturally.&lt;/li&gt;
&lt;li&gt;The padding needs itself to take the 4 bytes added by the padding itself into account.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the end we get code that reproduces the expected result.&lt;/p&gt;
&lt;h1 id=&#34;in-python&#34;&gt;
    &lt;a href=&#34;#in-python&#34;&gt;
	In Python
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;If, and that is important, &lt;code&gt;des_parity()&lt;/code&gt; is being called.
In Python that function is not available, and should not be necessary:
The legacy DES function in Python&amp;rsquo;s module supposedly ignores DES parity bits automatically.&lt;/p&gt;
&lt;p&gt;But the Python code produces a different result.
So what goes on here, and how do we get &lt;code&gt;des_parity()&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Turns out, &lt;code&gt;des_parity()&lt;/code&gt; is really weird code:
Look at it &lt;a href=&#34;https://github.com/alisw/libtirpc/blob/master/src/des_soft.c#L33-L50&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

.
It is supposed to make the 8 bytes of the DES code uneven parity by manipulating the low-value bits in the key.
But the actual code also effectively masks out the high order bit, so we do not get 56 bit of keyspace, but only 48 bit.
Yay, export crypto?&lt;/p&gt;
&lt;p&gt;Anyway, this is the code Arista runs for their key obfuscation, so we need to duplicate it to produce correct data.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/isotopp/arista_type_7/blob/main/pypoc.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here&lt;/a&gt;

 is a PoC in Python.&lt;/p&gt;
&lt;p&gt;With the poc provided, it should be possible to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;arista_descrypt&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_encrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_decrypt&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;encrypted&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cbc_encrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mydevices_passwd&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;supersecretpassword&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encrypted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and that should be sufficient to build an Ansible module for Arista config provisioning.
The code uses &lt;code&gt;cryptography&lt;/code&gt; or &lt;code&gt;pycryptodome&lt;/code&gt; automatically, one of the two is installed.
It is not dependent on the legacy &lt;code&gt;cbc_crypt()&lt;/code&gt; function that formerly was in &lt;code&gt;libc&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A01:2021 - Broken Access Control</title>
      <link>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html</link>
      <pubDate>Tue, 16 Nov 2021 11:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html</guid>
      <description>&lt;p&gt;Dieser Artikel wurde von Lenz Grimmer auch &lt;a href=&#34;https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html&#34;&gt;ins Englische&lt;/a&gt;

 übersetzt.&lt;/p&gt;
&lt;p&gt;In einem
&lt;a href=&#34;https://twitter.com/ChristianBasl/status/1459851276817158151&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Twitter-Thread von Christian Basl&lt;/a&gt;


ging es um die von
&lt;a href=&#34;https://zerforschung.org/posts/learnu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;zerforschte App &amp;ldquo;Learnu&amp;rdquo;&lt;/a&gt;

.
Basl schreibt:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Die Betreiber von Learnu sagen, sie hätten keine Fachkenntnisse in IT-Sicherheit und hätten sich auf externe Berater verlassen.
So kam Learnu unbekannterweise unsicher auf den Markt.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In der sich entwickelnden Diskussion vertrat &lt;a href=&#34;https://twitter.com/ardewes/status/1460240730698493957&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andreas Dewes&lt;/a&gt;

 den Standpunkt&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Die meisten Start-ups die ich kenne gehen durch eine Phase, in der IT-Sicherheit und Compliance eher im Hintergrund stehen.
Wenn sie größer werden fangen sie an sich darüber Gedanken zu machen u.a. weil Kunden oder Partner Zertifizierungen verlangen, z.B. SOC 2 oder ISO-27001.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist angesichts von &lt;a href=&#34;https://owasp.org/Top10/A01_2021-Broken_Access_Control/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP A01:2021 - Broken Access Control&lt;/a&gt;

 eine lustige Aussage.
&lt;a href=&#34;https://de.wikipedia.org/wiki/Open_Web_Application_Security_Project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP&lt;/a&gt;

 ist eine NGO, die die Sicherheit von Anwendungen und Diensten im Internet verbessern will.
OWASP gibt dazu eine jedes Jahr aktualisierte Top-10 Liste von Sicherheitsproblemen bei Anwendungen heraus.&lt;/p&gt;
&lt;p&gt;Für 2021 hat es im Vergleich zu 2017 die folgenden Änderungen gegeben:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/owasp-mapping.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Broken Access Control war 2017 auf Platz 5 und ist jetzt Problem #1. 94 % der getesteten Anwendungen hatten irgendeine Form von defekter Zugangskontrolle. Der ehemalige #1 Dauerbrenner Injection ist nur noch auf Platz 3.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wir sehen ein klassisches Beispiel dafür in einer anderen Schul-Anwendung, die das Team von Zerforschung getestet hat:
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;

 wurde aufgemacht, indem die Zerforschis&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ein Endpunkt der Schnittstelle (Application Programming Interface, API) ist uns dabei sofort ins Auge gefallen: &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt;.
…
Wenn wir spannnende API-Endpunkte finden, die über eine Versionskomponente verfügen (hier &lt;code&gt;/v3/&lt;/code&gt;), versuchen wir gerne mal, diese zu verändern.
Also wurde in unserem Fall aus &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt; zu &lt;code&gt;/api/v2/Profile/{ProfileID}&lt;/code&gt;.
Und tada: Noch viel mehr Daten!
Aber unsere eigenen Daten sind langweilig – die kennen wir ja schon.
Also haben wir auch probiert, eine fremde Profil-ID einzugeben.
Und zu unserer geringen Verwunderung, aber großen Genervtheit, konnten wir natürlich auf diese detaillierten Daten der fremden ID zugreifen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist ein klassisches &amp;ldquo;A01:2021 - Broken Access Control&amp;rdquo; Beispiel.
Die Anwendung kennt die Identität des Benutzers, denn sie ist in der App eingetragen.
Sie nutzt diese Information nicht, um die Verbindung zum Server zu authentisieren und autorisieren.
Und entsprechend kann die API genutzt werden, um auf beliebige User-Records zuzugreifen, statt nur auf den eigenen.&lt;/p&gt;
&lt;h1 id=&#34;identität-authentisierung-autorisierung-auditing-und-accounting&#34;&gt;
    &lt;a href=&#34;#identit%c3%a4t-authentisierung-autorisierung-auditing-und-accounting&#34;&gt;
	Identität, Authentisierung, Autorisierung, Auditing und Accounting
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Ein paar Begriffe:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identität:&lt;/strong&gt; Ich bin ich.
Aber ich kann nicht auf das Web oder eine API zugreifen.
Eine Anwendung muss das an meiner statt tun.
Diese Anwendung verwendet dazu eine eindeutige Benutzerkennung, die &amp;ldquo;mich&amp;rdquo; im Kontext der Anwendung repräsentiert.
Eine Identität mit einem eindeutigem Identifier (einem &amp;ldquo;Principal&amp;rdquo;) der mich repräsentiert ist aber zunächst einmal eine Behauptung.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentisierung:&lt;/strong&gt; Ich kann das auch beweisen.
Wenn ich die behauptete Identität beweisen kann, dann bin ich authentisch ich.
Ich bestätige meine Identität meist mit einem Passwort und oft auch mit einem 2. Faktor (etwa einer vom einem Google Authenticator abgetippten wechselnden Geheimnummer).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Die behauptete und bestätigte Identität muss für einige Zwecke auch noch &lt;strong&gt;verankert&lt;/strong&gt; werden, etwa wenn diese Identität an andere Rechte oder Verhältnisse in der realen Welt gebunden werden soll.
Wenn ich zum Beispiel in einer Schul-App eine Schulzugehörigkeit und Klassenzugehörigkeit haben soll, dann ist es unter Umständen gut, wenn ich mir nicht einfach einen Account machen kann.
Stattdessen sollte eine Lehrperson sich das ansehen, mich fragen, ob ich das war und mich dann der Schule und der Klasse zuordnen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Einer behaupteten, bestätigten und in der realen Welt verankerten Identität werden dann Zugriffsrechte zugeordnet.
Das ist eine &lt;strong&gt;Autorisierung&lt;/strong&gt;, sie bestimmt, was diese Identität im Kontext der Anwendung sehen, schreiben, verändern und löschen darf.
Dazu werden wir unten noch ein wenig mehr reden.&lt;/li&gt;
&lt;li&gt;Was ich dann in der Anwendung tu muss unter Umständen beweiskräftig mitgeschnitten werden.
Etwa dann, wenn die Daten, auf die ich zugreife, besonders schützenswert sind, oder ihre Änderungshistorie dokumentiert werden muss.
Das kann zum Beispiel im Schulkontext meine Ansammlung von Leistungsnachweisen sein.
Ein Logbuch, bei dem Zugriffe zwingend und nicht abschaltbar mit Personenidentitäten verknüpft werden nennt man ein &lt;strong&gt;Audit-Log&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Wenn ich Dienstleistungen in Anspruch nehme, die Geld kosten, dann muss eine besondere Form von Audit-Log geführt werden.
Dieses Audit-Log ist die Grundlage der Rechnungslegung und zeigt, welche Person wann welche kostenpflichtige Dienstleistung in Anspruch genommen hat.
Dieses Logbuch ist Bestandteil des &lt;strong&gt;Accounting&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Man kann zu jedem dieser Themen viel schreiben, aber uns soll hier in erster Linie &lt;em&gt;Autorisierung&lt;/em&gt; beschäftigen, eben weil es Thema #1 bei der aktuellen OWASP Liste ist.
Und weil es nicht nur bei den Zerforschis im
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;


Artikel auftaucht, sondern noch einmal im
&lt;a href=&#34;https://zerforschung.org/posts/meinschnelltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mein Schnelltest&lt;/a&gt;


Artikel:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Eine der ersten Anfragen, die uns auffällt, geht an &lt;code&gt;https://corona-api.de/persons/owner/{USER_ID}&lt;/code&gt;, wobei &lt;code&gt;USER_ID&lt;/code&gt; natürlich die Nummer unseres Accounts ist – z.B. &lt;code&gt;612341213acab23425251e21&lt;/code&gt;.
… [Wir verkürzen die URL]…
Einen Versuch wagen wir noch und entfernen das / am Ende der URL. Und tada:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET https://corona-api.de/persons
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Uns fällt eine Liste mit den Personen, die auf der Plattform registriert sind, entgegen.
Insgesamt fast 400.000 mit allen Daten, die bei einem Corona-Test eben so erfasst werden.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zerforschung demonstriert dann auch noch, daß sie in beiden Fällen lustig ihre Identität oder ihre Verankerung (die Schulzugehörigkeit) ändern können (und vermutlich ohne daß das in einem Audit-Log landet), und daß sie nach Belieben Daten schreiben können, indem sie dem 177-jahre alten Robert Koch ein Corona-Testergebnis ausstellen.&lt;/p&gt;
&lt;h1 id=&#34;autorisierung&#34;&gt;
    &lt;a href=&#34;#autorisierung&#34;&gt;
	Autorisierung
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;verben-und-subjekt-prädikat-objekt-wer-tut-was-mit-wem&#34;&gt;
    &lt;a href=&#34;#verben-und-subjekt-pr%c3%a4dikat-objekt-wer-tut-was-mit-wem&#34;&gt;
	Verben und Subjekt-Prädikat-Objekt (Wer tut was mit wem?)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Eine Anwendung hat eine Außenseite.
Das ist eine Liste aller URLs, die aufrufbar sind.
Damit meine ich nicht nur die HTML Webseiten (von denen ja einige auch interaktiv sind und Parameter haben können), sondern auch die API, die den Server für eine App auf einem Telefon oder in einem Browser repräsentiert.
Die Liste aller dieser URLs ist wie eine Liste von Verben:
Tu-Worte, mit denen man der Anwendung Befehle erteilen kann - &amp;ldquo;zeige mir&amp;rdquo;, &amp;ldquo;finde mir&amp;rdquo;, &amp;ldquo;ändere mir&amp;rdquo;, &amp;ldquo;lösche mir&amp;rdquo;.
Wie in jedem Satz gibt es ein Subjekt - wer befiehlt? - und ein Objekt - was wird von dem Verb manipuliert?&lt;/p&gt;
&lt;p&gt;Wir können das in Deutsch aufschreiben:
&amp;ldquo;Kris will alle Schüler der Heinrich-Heine-Schule in Heikendorf finden.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Oder als Tripel:
(Kris, &amp;ldquo;finde alle&amp;rdquo;, &amp;ldquo;Heinrich-Heine-Schule (Heikendorf)&amp;quot;)&lt;/p&gt;
&lt;p&gt;Oder als Tabelle, mit den Subjekten als Zeilen, den Objekten als Spalten und den Verben da, wo die betreffende Aktion erlaubt ist.
Das ist dann eine Matrix von &amp;ldquo;Wer darf was tun?&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;role-based-access-control&#34;&gt;
    &lt;a href=&#34;#role-based-access-control&#34;&gt;
	Role Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Wir sehen dann, daß die Tabelle schnell umfangreich wird, und werden anfangen, die Subjekte zu gruppieren.
Subjekte mit gleichen Rechten gruppieren wir zusammen, in einer &lt;em&gt;Role&lt;/em&gt;, und benennen diese (zum Beispiel &lt;em&gt;Schüler der HHS&lt;/em&gt;).
Objekte kann man ebenso gruppieren.
Wir bekommen &lt;em&gt;Role Based Access Control&lt;/em&gt;, &lt;em&gt;RBAC&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;Wir können so bestimmten Subjekten, oder Rollen, feste Rechte geben.
Wir müssen aber immer noch viele Relationen erlauben:
&amp;ldquo;Schüler der HHS können mit anderen Schülern der HHS Kontakte anbandeln.&amp;rdquo;
und extra, und verschieden davon
&amp;ldquo;Schüler der Max-Planck-Schule, Kiel können mit anderen Schülern der MPS Kontakte anbandeln.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Offenbar reicht das in diesem Kontext nicht - aber für viele Anwendungen ist das schon ausreichend.
Nämlich immer dann, wenn die interne Struktur innerhalb der Anwendung nicht weiter segmentiert werden muss.&lt;/p&gt;
&lt;h2 id=&#34;attribute-based-access-control&#34;&gt;
    &lt;a href=&#34;#attribute-based-access-control&#34;&gt;
	Attribute Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Oft will man Regeln formulieren, die Eigenschaften von Subjekten und Objekten abgleichen.
Ich kann die Zugangsregeln für Schülerkontakte zum Beispiel so vereinfachen, daß ich die Kontakte zulasse, wenn der aufrufende Schüler und der aufgerufenen Schüler dieselbe Schule besuchen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Schüler der HHS können mit anderen Schülern der HHS Kontakte anbandeln.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Schüler der MPS können mit anderen Schülern der MPS Kontakte anbandeln.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;alle diese RBAC-Regeln werden zu&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Schüler A kann mit Schüler B Kontakt aufnehmen, wenn &lt;code&gt;A.schule_id == B.schule_id&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;also wenn Schüler A und B denselben Wert im Attribut &lt;code&gt;schule_id&lt;/code&gt; stehen haben.&lt;/p&gt;
&lt;p&gt;Die Zugriffsrechte werden nun also durch Attribute von Subjekten definiert und können so stark vereinfacht werden.
Das setzt natürlich voraus, daß ich die sicherheitsrelevanten Attribute identifiziere und Änderungen an denen kontrolliere, denn sonst ist der Schutz wirkungslos.&lt;/p&gt;
&lt;p&gt;Beispiel: Wenn ein Schüler seine &lt;code&gt;schule_id&lt;/code&gt; nach Belieben unkontrolliert ändern kann, dann ist ein Vergleich &lt;code&gt;A.schule_id == B.schule_id&lt;/code&gt; wirkungslos.&lt;/p&gt;
&lt;h1 id=&#34;was-heißt-das-für-anwendungsentwickler&#34;&gt;
    &lt;a href=&#34;#was-hei%c3%9ft-das-f%c3%bcr-anwendungsentwickler&#34;&gt;
	Was heißt das für Anwendungsentwickler?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Als Anwendungsentwickler verwende ich ein Toolkit, um Webanwendungen und APIs zu schreiben.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ich muss wissen, welche Außenfläche meine Anwendung hat, also welche URLs mit welchen Parametern zugelassen werden.
Das ist nicht schwer.
Mein Toolkit hat fast sicher eine Funktion, die mir das sagt (&lt;code&gt;flask routes&lt;/code&gt; oder ähnliche Funktionen sind überall vorhanden).
Dies ist die Liste meiner Verben.&lt;/li&gt;
&lt;li&gt;Die Liste der Parameter jeder dieser aufrufbaren Seiten sind die Objekte in meinem Security-Modell.&lt;/li&gt;
&lt;li&gt;Ich muss meine Anwender identifizieren (ihnen also eindeutige Identifier zuweisen) und authentisieren (sie müssen die behauptete Identität also beweisen).&lt;/li&gt;
&lt;li&gt;Die Liste dieser Anwender ist dann die Liste meiner Subjekte.&lt;/li&gt;
&lt;li&gt;Ich muss nun ACL, RBAC oder ABAC Regeln die definieren, &amp;ldquo;Wer was mit wem&amp;rdquo; machen kann und dies im Access Control Framework meiner Anwendung ausdrücken.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Das ist nicht schwer, und es ist vor allen Dingen eine notwendige Arbeit.
Nicht nur aus rechtlichen und compliance Gründen, sondern auch, weil dies zu einem Datenmodell einer Anwendung gehört:
Als Nebenergebnis fällt dabei nämlich ein Transaktionsmodell heraus, also ein Diagramm, wie sich die Datensätze meiner Anwendung durch die Aufrufe von Methoden ändern lassen.
Ich erschlage also nicht nur alle Compliance-, viele Datenschutz und alle Security-Pflichten, sondern ich habe den kompletten Data Lifecycle meiner Anwendung mit einem Zustandsübergangsdiagramm dokumentiert,
das sowohl Entwicklern als auch Business Analysts allgemeinverständlich zeigt, was zum Teufel wir hier eigentlich tun und wie wir das modellieren.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A01:2021 - Broken Access Control (en)</title>
      <link>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html</link>
      <pubDate>Tue, 23 Nov 2021 23:34:33 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control-en.html</guid>
      <description>&lt;p&gt;Translation by Lenz Grimmer, German version &lt;a href=&#34;https://blog.koehntopp.info/2021/11/16/a01-2021-broken-access-control.html&#34;&gt;here&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;A
&lt;a href=&#34;https://twitter.com/ChristianBasl/status/1459851276817158151&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;twitter thread by Christian Basl&lt;/a&gt;


discussed the
&lt;a href=&#34;https://zerforschung.org/posts/learnu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dissection of the &amp;ldquo;Learnu&amp;rdquo; app&lt;/a&gt;

.
Basl wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Learnu operators say they have no expertise in IT security and have relied on outside consultants.
As a result, Learnu came to market insecurely, unbeknownst to them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the discussion that developed, &lt;a href=&#34;https://twitter.com/ardewes/status/1460240730698493957&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andreas Dewes&lt;/a&gt;

 took the view that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most startups I know go through a phase where IT security and compliance tend to take a back seat.
As they get bigger, they start to think about it, partly because customers or partners demand certifications, e.g. SOC 2 or ISO-27001.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That&amp;rsquo;s a funny statement in light of &lt;a href=&#34;https://owasp.org/Top10/A01_2021-Broken_Access_Control/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP A01:2021 - Broken Access Control&lt;/a&gt;

.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Web_Application_Security_Project&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP&lt;/a&gt;

 is an NGO that aims to improve the security of applications and services on the Internet.
To this end, OWASP publishes a top 10 list of application security problems that is updated every year.&lt;/p&gt;
&lt;p&gt;For 2021, compared to 2017, there have been the following changes:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/owasp-mapping.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Broken Access Control was #5 in 2017 and is now problem #1. 94% of the applications tested had some form of broken access control. The former #1 perennial problem Injection is now only #3.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We see a classic example of this in another school application tested by the Zerforschung team:
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;

 was opened up by the researchers as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One endpoint of the application programming interface (API) immediately caught our attention: &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt;.
…
When we find exciting API endpoints that have a version component (here &lt;code&gt;/v3/&lt;/code&gt;), we like to try to change it sometimes.
So in our case &lt;code&gt;/api/v3/Profile/{ProfileID}&lt;/code&gt; became &lt;code&gt;/api/v2/Profile/{ProfileID}&lt;/code&gt;.
And tada: much more data!
But our own data is boring - we already know it.
So we also tried to enter a foreign ProfileID.
And to our little amazement, but great annoyance, we were of course able to access the detailed data of that foreign ID.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a classic &amp;ldquo;A01:2021 - Broken Access Control&amp;rdquo; example.
The application knows the identity of the user because it is registered in the app.
It does not use this information to authenticate and authorize the connection to the server.
And accordingly, the API can be used to access arbitrary user records instead of just its own.&lt;/p&gt;
&lt;h1 id=&#34;identity-authentication-authorization-auditing-and-accounting&#34;&gt;
    &lt;a href=&#34;#identity-authentication-authorization-auditing-and-accounting&#34;&gt;
	Identity, authentication, authorization, auditing and accounting
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A few terms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identity:&lt;/strong&gt; I am me.
But I can&amp;rsquo;t access the web or an API.
An application has to do that on my behalf.
To do this, that application uses a unique user identifier that represents &amp;ldquo;me&amp;rdquo; in the context of the application.
But an identity with a unique identifier (a &amp;ldquo;principal&amp;rdquo;) that represents me is first of all an assertion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Authentication:&lt;/strong&gt; I can also prove this.
If I can prove the claimed identity, then I am authentically me.
I usually confirm my identity with a password and often with a 2nd factor (such as a changing secret number typed from a Google Authenticator).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The asserted and confirmed identity must also be &lt;strong&gt;anchored&lt;/strong&gt; for some purposes, such as when that identity is to be tied to other rights or relationships in the real world.
For example, if I&amp;rsquo;m supposed to have a school affiliation and class affiliation in a school app, then it may be good if I can&amp;rsquo;t just make an account for myself.
Instead, a teacher should look at it, ask me if I did it, and then assign me to the school and class.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An asserted, confirmed identity anchored in the real world is then granted access rights.
This is an &lt;strong&gt;authorization&lt;/strong&gt;, it determines what this identity is allowed to see, write, modify and delete in the context of the application.
We&amp;rsquo;ll talk a little more about that below.&lt;/li&gt;
&lt;li&gt;What I then do in the application may have to be recorded for evidentiary purposes.
For example, if the data I am accessing requires special protection, or if its change history needs to be documented.
In a school context, for example, this could be my collection of performance records.
A logbook in which accesses are linked to personal identities in a mandatory way that cannot be switched off is called an &lt;strong&gt;audit log&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If I use services that cost money, then a special form of audit log must be kept.
This audit log is the basis of accounting and shows which person has used which chargeable service and when.
This log is part of &lt;strong&gt;accounting&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Much can be written on each of these topics, but we are to be primarily concerned here with &lt;em&gt;authorization&lt;/em&gt; precisely because it is Topic #1 on the current OWASP list.
And because it does not only appear in the Zerforschis&#39;
&lt;a href=&#34;https://zerforschung.org/posts/scoolio/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scoolio&lt;/a&gt;


article, but once again in the
&lt;a href=&#34;https://zerforschung.org/posts/meinschnelltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My Quick Test&lt;/a&gt;


article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the first requests we notice is to &lt;code&gt;https://corona-api.de/persons/owner/{USER_ID}&lt;/code&gt;, where &lt;code&gt;USER_ID&lt;/code&gt; is of course the number of our account - e.g. &lt;code&gt;612341213acab23425251e21&lt;/code&gt;.
… [We shorten the URL]…
We dare to try one more time and remove the / at the end of the URL. And tada:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET https://corona-api.de/persons
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A list of people registered on the platform drops down to us.
A total of almost 400,000 with all the data that is collected during a Corona test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zerforschung then goes on to demonstrate that they can merrily change their identity or anchoring (the school affiliation) in either case (and presumably without it ending up in an audit log), and that they can write data at will by issuing a Corona test result to 177-year-old Robert Koch.&lt;/p&gt;
&lt;h1 id=&#34;authorization&#34;&gt;
    &lt;a href=&#34;#authorization&#34;&gt;
	Authorization
    &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;verbs-and-subject-predicate-object-who-does-what-to-whom&#34;&gt;
    &lt;a href=&#34;#verbs-and-subject-predicate-object-who-does-what-to-whom&#34;&gt;
	Verbs and subject-predicate-object (Who does what to whom?)
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;An application has an outside page.
This is a list of all URLs that are callable.
By this I mean not only the HTML web pages (some of which are interactive and can have parameters), but also the API that represents the server for an app on a phone or in a browser.
The list of all these URLs is like a list of verbs:
Do words that can be used to give commands to the application - &amp;ldquo;show me&amp;rdquo;, &amp;ldquo;find me&amp;rdquo;, &amp;ldquo;change me&amp;rdquo;, &amp;ldquo;delete me&amp;rdquo;.
As in any sentence, there is a subject - who commands? - and an object - what is being manipulated by the verb?&lt;/p&gt;
&lt;p&gt;We can write this down in German:
&amp;ldquo;Kris wants to find all the students at the Heinrich Heine School in Heikendorf.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Or as a triplet:
(Kris, &amp;ldquo;find all&amp;rdquo;, &amp;ldquo;Heinrich-Heine-Schule (Heikendorf)&amp;quot;)&lt;/p&gt;
&lt;p&gt;Or as a table, with the subjects as rows, the objects as columns, and the verbs where the action in question is allowed.
This is then a matrix of &amp;ldquo;Who may do what?&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;role-based-access-control&#34;&gt;
    &lt;a href=&#34;#role-based-access-control&#34;&gt;
	Role Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We then see that the table quickly becomes large, and will start grouping the subjects.
Subjects with the same rights we group together, in a &lt;em&gt;role&lt;/em&gt;, and name them (for example &lt;em&gt;students of HHS&lt;/em&gt;).
Objects can be grouped in the same way.
We get &lt;em&gt;Role Based Access Control&lt;/em&gt;, &lt;em&gt;RBAC&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;We can thus give fixed rights to certain subjects, or roles.
However, we still need to allow many relations:
&amp;ldquo;Students of HHS can make contacts with other students of HHS.&amp;rdquo;
and extra, and different from it
&amp;ldquo;Students of the Max-Planck-Schule, Kiel can make contacts with other students of the MPS.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Obviously, this is not enough in this context - but for many applications it is already sufficient.
Namely, whenever the internal structure within the application does not need to be segmented further.&lt;/p&gt;
&lt;h2 id=&#34;attribute-based-access-control&#34;&gt;
    &lt;a href=&#34;#attribute-based-access-control&#34;&gt;
	Attribute Based Access Control
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Often one wants to formulate rules that match properties of subjects and objects.
For example, I can simplify the access rules for student contacts to allow contacts if the calling student and the called student attend the same school.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;HHS students can make contacts with other HHS students.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;MPS students can make contacts with other MPS students.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;all these RBAC-Rules become&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Student A can make contact with Student B, if &lt;code&gt;A.school_id == B.school_id&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so if student A and B have the same value in the attribute &lt;code&gt;school_id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, access rights are now defined by attributes of subjects and can thus be greatly simplified.
Of course, this requires that I identify the security-relevant attributes and control changes to those, because otherwise the protection is ineffective.&lt;/p&gt;
&lt;p&gt;Example: If a student can change his &lt;code&gt;school_id&lt;/code&gt; at will without control, then a comparison &lt;code&gt;A.school_id == B.school_id&lt;/code&gt; is ineffective.&lt;/p&gt;
&lt;h1 id=&#34;what-does-this-mean-for-application-developers&#34;&gt;
    &lt;a href=&#34;#what-does-this-mean-for-application-developers&#34;&gt;
	What does this mean for application developers?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;As an application developer, I use a toolkit to write web applications and APIs.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I need to know what my application&amp;rsquo;s outer surface is, i.e. which URLs are allowed with which parameters.
This is not difficult.
My toolkit almost certainly has a function that tells me this (&lt;code&gt;flask routes&lt;/code&gt; or similar functions are present everywhere).
This is my list of verbs.&lt;/li&gt;
&lt;li&gt;The list of parameters of each of these callable pages are the objects in my security model.&lt;/li&gt;
&lt;li&gt;I need to identify my users (i.e., assign them unique identifiers) and authenticate them (i.e., they need to prove the claimed identity).&lt;/li&gt;
&lt;li&gt;The list of these users is then the list of my subjects.&lt;/li&gt;
&lt;li&gt;I now need ACL, RBAC or ABAC rules that define &amp;ldquo;who can do what to whom&amp;rdquo; and express this in my application&amp;rsquo;s access control framework.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is not hard, and it is, above all, necessary work.
Not only for legal and compliance reasons, but also because this is part of an application&amp;rsquo;s data model:
As a side result, this produces a transaction model, i.e. a diagram of how the records of my application can be changed by calling methods.
So not only am I slaying all compliance, many data protection, and all security obligations, but I&amp;rsquo;ve documented the entire data lifecycle of my application with a state transition diagram,
that shows both developers and business analysts in a generally understandable way what the heck we&amp;rsquo;re actually doing here and how we&amp;rsquo;re modeling it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Die kommende Kündigungswelle</title>
      <link>https://blog.koehntopp.info/2021/11/12/die-kommende-kuendigungswelle.html</link>
      <pubDate>Sun, 07 Nov 2021 11:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/12/die-kommende-kuendigungswelle.html</guid>
      <description>&lt;p&gt;Ein guter Freund sinnierte gestern mit anderen Freunden von mir über die Situation auf der Arbeit und schrieb mir heute:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wie man es auch dreht und wendet: Corona ist auch ein Lackmustest für Unternehmen in ihrer Rolle als Arbeitgeber.
Anhand der vierten Welle lässt sich das hervorragend nachvollziehen.&lt;/p&gt;
&lt;p&gt;Denn Unternehmen und Organisationen, denen am Wohl ihrer Mitarbeiter/-innen etwas liegt, haben schon vor Wochen überall dort, wo es möglich ist, ihre Leute kategorisch wieder ins Homeoffice geschickt und Präsenzveranstaltungen untersagt.
Das hat selten etwas damit zu tun, dass diese Unternehmen herausragend schlau wären.
Viel mehr schauen diese Unternehmen sich ausgehend vom Wunsch, die eigenen Leute nicht zu gefährden, ihr Corona-Handling dort ab, wo es funktioniert.&lt;/p&gt;
&lt;p&gt;Unternehmen beispielsweise, die sich an Israel orientieren, werden ihre Leute frühestens bei flächendeckender Booster-Impfung der eigenen Belegschaft wieder in die Büros rufen, falls überhaupt.
Unternehmen hingegen, die sich an den Richtlinien der deutschen Bundesregierung orientieren, pochen oft seit Wochen schon darauf, in die sich aufbauende vierte Welle hinein die Anwesenheitszeiten in den Büros zu erhöhen.&lt;/p&gt;
&lt;p&gt;Das ist tragisch, weil es so vorhersehbar katastrophale wie vermeidbare Folgen haben wird.
Wer Leute notlos in den ÖPNV zwingt, obwohl sie nicht geboostert sind, exponiert sie unnötig einem erhöhten Risiko.
Wer Leute notlos ins Büro ruft, obwohl diese nicht impfbare Familienmitglieder im selben Haushalt haben, exponiert sie unnötig einem erhöhten Risiko.
Unternehmen, die so agieren, machen sich schuldig.&lt;/p&gt;
&lt;p&gt;Die Menschen in diesen Unternehmen sollten das Corona-Handling ihres Arbeitgebers jedenfalls genau beobachten.
Wer die Belegschaft unabhängig vom Impfstatus wieder ins Büro ruft, betreibt das Geschäft der Impfgegner.
Denn dann entsteht der Eindruck, der Impfstatus sei im Wesentlichen egal.
Wer nur geimpfte Menschen notlos ins Büro ruft, schafft dadurch indirekt sogar Incentives für Impfgegner, weil Homeoffice dann zu einem Privileg für diese wird.&lt;/p&gt;
&lt;p&gt;Beides wäre unerträglich.
Und Menschen in diesen Firmen sollten ihren AG durchaus wissen lassen, dass das unerträglich ist.
Falls alle Stricke reißen:
Kündigen und Namen der Manager notieren, damit man in deren Fängen sicher nie mehr landet.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Bei den Amis heißt das &lt;a href=&#34;https://en.wikipedia.org/wiki/Great_Resignation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Great Resignation&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The COVID-19 pandemic has allowed workers to rethink their careers, work conditions, and long-term goals.
As many workplaces attempted to bring their employees in-person, workers desired the freedom to work from home given during the pandemic.
With telecommuting also came schedule flexibility, which was the primary reason to look for a new job of the majority of those studied by Bankrate in August 2021.
Additionally, many workers, particularly in younger cohorts, are seeking to gain a better work–life balance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist die mildeste Formulierung, die ich gefunden habe.&lt;/p&gt;
&lt;p&gt;Tatsächlich arbeiten &amp;ldquo;wir&amp;rdquo; im März 2022 seit 2 Jahren von zu Hause und/oder unter Pandemie-Bedingungen, und außerhalb der traditionellen Bürostrukturen und -hierarchien.
Einige Firmen haben sich anpassen können.
Von denen hat keine ein Problem mit Churn oder Hiring, also damit, Personal halten zu können und neues anzuwerben.&lt;/p&gt;
&lt;p&gt;Es sind die Läden, die die Realität der vergangenen 2 Jahre negieren, die jetzt bluten, und zwar vom Kopfe her.
Und Mitarbeiter, die seit 2 Jahren bewiesen haben, daß sie sehr gut und erfolgreich arbeiten können,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ohne daß sie jeden Tag 2 Stunden im Berufsverkehr verschwenden,&lt;/li&gt;
&lt;li&gt;ohne daß das Kind als Schlüsselkind nach Hause kommen muss,&lt;/li&gt;
&lt;li&gt;ohne daß ihnen das Management auf die Bildschirme glotzt,&lt;/li&gt;
&lt;li&gt;und ohne daß sie 3 von 8 Stunden pro Tag in Meetings zu bringen, von denen für sie maximal 20 Minuten relevant sind,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;solche Leute brechen jetzt auf - in Firmen, die anders arbeiten, in Berufe, die das nicht notwendig machen oder in ein Umfeld, das weniger dem späten 19. Jahrhundert verhaftet ist. Die Zukunft der Arbeit ist gerade angekommen, und die Leute ziehen um.&lt;/p&gt;
&lt;p&gt;Gerade bei den Wissensarbeitern ist das so:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ich habe 5 Jahre studiert und danach 3 Jahre Projekte gemacht und Dir jetzt gerade 2 Jahre lang bewiesen, daß ich mich selbst organisieren kann, und jetzt willst Du mich im Büro haben, damit Du Dich nicht so alleine fühlst?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kann man machen. Nicht schlau. So gar nicht.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; Nachtrag.&lt;/p&gt;
&lt;p&gt;Jemand schickt mir diesen &lt;a href=&#34;https://www.sueddeutsche.de/wirtschaft/overemployed-home-office-usa-1.5461910&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paywalled link zur SZ&lt;/a&gt;

, von dem eh nur der Anreißer interessant ist. Der Artikel beschreibt unter dem Begriff &amp;ldquo;Overemployed&amp;rdquo; Personen, die im Homeoffice so effizient sind, daß sie zwei bezahlte Vollzeitstellen besetzen, ohne Wissen der jeweiligen Arbeitgeber.&lt;/p&gt;
&lt;p&gt;Das geht natürlich nur mit &lt;a href=&#34;https://en.wikipedia.org/wiki/Bullshit_Jobs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;David Graeber&amp;rsquo;s Bullshit Jobs&lt;/a&gt;

, aber es ist natürlich auch ein Zeichen dafür, daß die Arbeit, die diese Personen ausführen weder produktiv, noch notwendig noch sinnstiftend ist.&lt;/p&gt;
&lt;p&gt;Ich antwortete mit&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ich kann nur den Teaser lesen, aber das ist das, was wir im Informatik-Studium Semester 2 (und 4) gemacht haben.
Also 3 Leute in die Inf 2 Vorlesung schicken, parallel 3 Leute in Inf 4.
Mit dem Rest (gut 20 Leute, Rotationssystem) die Vorlesungen von 2x 90 Minuten in 45 Minuten durchziehen, und dann in 45 Minuten die Aufgaben machen.
Das hat sehr, sehr böses Blut gegeben&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Die Antwort war:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dafür hatten wir [bei uns] die Mitschriften AG. Etwas anderer Studienablauf bei Nicht-Informatikern.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; Nachtrag.&lt;/p&gt;
&lt;p&gt;Einige Arbeitgeber insistieren dringend, daß &amp;ldquo;Mitarbeiter wenigstens einen Tag in der Woche im Büro sind&amp;rdquo;, ohne das näher zu begründen.&lt;/p&gt;
&lt;p&gt;Bohrt man unauffällig und inoffiziell nach, heißt es &amp;ldquo;Wir haben sehr viele Expats, und wenn die statt von hier von ihrem Heimatland aus arbeiten, dann kommen wir von der Unternehmenssteuer her in Teufels Küche.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Unter Umständen sollte man hier offener kommunizieren, und dann versuchen, kooperativ Lösungen zu finden, denn unerklärliches blockierendes Verhalten eines Arbeitgebers ist in diesem Zusammenhang nicht produktiv und führt wieder zur Kündigungswelle.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AMD und 128 cores</title>
      <link>https://blog.koehntopp.info/2021/11/08/amd-und-128-cores.html</link>
      <pubDate>Mon, 08 Nov 2021 13:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/08/amd-und-128-cores.html</guid>
      <description>&lt;p&gt;Wir sprachen in
&lt;a href=&#34;https://blog.koehntopp.info/2021/09/30/software-defined-silicon.html&#34;&gt;Software Defined Silicon&lt;/a&gt;


darüber, wie die CPU-Bedürfnisse von Hyperscalern und normalen Kunden divergieren.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hyperscaler haben Interesse an immer größeren CPUs mit immer mehr Kernen, und immer höherer Dichte in ihren Rechenzentren. [&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Normale Kunden sehen das nicht so: man kann in einer 64C/128T-Core-Single-Socket-Konfiguration mit 2-4 TB RAM unter Umständen den gesamten Serverbedarf einer kleineren Firma in einer einzelnen physikalischen Maschine in VMs unterbringen.
Das Problem dabei: Explosionsradius, wenn mal etwas ausfällt.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Und das passiert:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=AMD-Zen-4-Genoa-Bergamo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AMD Shares Early Details Of Zen 4 Genoa, Bergamo&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Heute hat AMD einen Ausblick auf die kommenden Zen 4 CPUs geliefert:
Die normale &amp;ldquo;Genoa&amp;rdquo; wird 96 Cores pro Socket liefern, also 192C/384T in einem 2P-Board.&lt;/p&gt;
&lt;p&gt;Es wird jedoch von dieser CPU auch eine &amp;ldquo;Bergamo&amp;rdquo;-Variante geben, und das ist eine
&amp;ldquo;high-core count compute engine designed for cloud-native workloads&amp;rdquo;.
Das sind dann 256C/512T in einem 2P-Board.&lt;/p&gt;
&lt;p&gt;Das ist nicht nur zu viel Maschinerie in einer einzelnen Kiste, sondern auch in einem normalen Rechenzentrums-Rack vermutlich nicht mehr so einfach zu kühlen.
Wenn man sich als Hyperscaler jedoch seine Rechenzentren nach Maß bauen lässt, sollte das alles nicht weiter weh tun.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Wozu der 4K-Monitor, fragst Du?
Na, damit die &amp;lsquo;htop&amp;rsquo; Anzeige auf den Bildschirm passt.&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL: Parallel Replication</title>
      <link>https://blog.koehntopp.info/2021/11/08/mysql-parallel-replication.html</link>
      <pubDate>Mon, 08 Nov 2021 13:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/08/mysql-parallel-replication.html</guid>
      <description>&lt;p&gt;At work, &lt;a href=&#34;https://blog.koehntopp.info/2020/11/27/backups-and-replication.html&#34;&gt;replication&lt;/a&gt;

 is a central feature in our MySQL Standard Architecture.&lt;/p&gt;
&lt;p&gt;But until MySQL 5.6, replication was strictly sequential:
Even if transactions happened in parallel on a primary, they would be downloaded to the replica by the IO_THREAD into the relay log.
From there, a single SQL_THREAD would apply them, one after the other in strict binlog order.
That can lead to Replication Delay.&lt;/p&gt;
&lt;p&gt;We had a monitor for that, &lt;a href=&#34;https://blog.koehntopp.info/2012/09/28/mysql-replication-load-monitor.html&#34;&gt;courtesy of Dennis Kaarsemaker&lt;/a&gt;

.
That code looked at the time consumption in the SQL_THREAD, and counted the percentage of idle time over time, visualizing it in Graphite or Grafana.&lt;/p&gt;
&lt;p&gt;This was the amount of runway we had.
If the write-load to a specific replication hierarchy threatened to overwhelm a hierarchy, it was a candidate for a schema split.&lt;/p&gt;
&lt;h1 id=&#34;execution-model&#34;&gt;
    &lt;a href=&#34;#execution-model&#34;&gt;
	Execution Model
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;About a decade ago, MySQL as a company started to work on that problem.
The execution part of that is easy, and roughly looks like this:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/parallel-replication.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;As before, the IO_THREAD logs into the primary and downloads the binlog, then saves it to the local disk of the replica.
This is called the relay log.&lt;/p&gt;
&lt;p&gt;Unlike before, the single SQL_THREAD is replaced with a coordinator thread which picks up the relay log for consumption.
It then schedules work to a number of worker threads.
These apply the binlog to local tables in parallel.&lt;/p&gt;
&lt;p&gt;The complicated part is to find what can be executed in parallel.
This happens in the Primary, which will mark up the binlog for parallel execution on the replicas.&lt;/p&gt;
&lt;h1 id=&#34;splitting-the-work-by-schema&#34;&gt;
    &lt;a href=&#34;#splitting-the-work-by-schema&#34;&gt;
	Splitting the work by schema
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The low-hanging fruit is splitting work by schema.
We assume there are different schemata &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt; on the Primary, and they are isolated from each other by permissions, in such way that write transactions are guaranteed to modify data only in exactly one schema.&lt;/p&gt;
&lt;p&gt;It would allow two different write operations to different schemas on the primary to be applied in parallel, independent worker threads on the replica.&lt;/p&gt;
&lt;p&gt;This was &lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html#sysvar_replica_parallel_type&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;replica-parallel-type=DATABASE&lt;/code&gt;&lt;/a&gt;

, and while it is enormously useful with webhosters, the use-case did not fit our environment.&lt;/p&gt;
&lt;p&gt;Newer versions of MySQL got replica-parallel-type=LOGICAL_CLOCK, which can handle parallel execution of compatible statements within a single schema.&lt;/p&gt;
&lt;h1 id=&#34;splitting-the-work-with-logical_clocks&#34;&gt;
    &lt;a href=&#34;#splitting-the-work-with-logical_clocks&#34;&gt;
	Splitting the work with LOGICAL_CLOCKS
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Originally, MySQL would assign each transaction in the binlog a number, starting with 1 for each binlog, the &lt;code&gt;sequence_number&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All transactions that were executed concurrently obviously were legal to execute in parallel, because they just did on the primary.
MySQL would choose a sequence number from that group and assign it to all of these concurrently executed transactions, the commit group number.&lt;/p&gt;
&lt;p&gt;On the replica, transactions with the same commit group number could be executed in parallel, because they did successfully do that on the primary.&lt;/p&gt;
&lt;p&gt;While simple and fast, this method has a number of drawbacks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The degree of parallelism is variable, and workload dependent.
On a mostly idle primary, few transactions would be marked up as &amp;ldquo;able to run in parallel&amp;rdquo;, because they would not run in parallel on an idle machine.
While that would not be a disadvantage per se (low load on the primary also means low load on the replicas), it makes it really hard to calculate the runway that you still have on your replication hierarchy.&lt;/li&gt;
&lt;li&gt;On an intermediate primary in a multilevel replication hierarchy, the degree of parallelism cannot go up, but can go down when things that happened concurrently in the primary did not in the intermediate.
Execution times and parallelism in the leaf replicas would degrade.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Crude hacks were invented to improve the situation with regard to the first problem:
We could artificially delay commit on the primary using a config variable, and hope for other transactions to accumulate in the time window.
From their locking interaction we would see if they were good to be executed in parallel, and hopefully get larger parallel execution batches.&lt;/p&gt;
&lt;p&gt;Thus, we would slow down the primary in order to speed up the replicas.&lt;/p&gt;
&lt;h1 id=&#34;logical-clocks-with-dependency-trees&#34;&gt;
    &lt;a href=&#34;#logical-clocks-with-dependency-trees&#34;&gt;
	Logical Clocks with Dependency Trees
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;More modern logical clocks still number transactions in the binlog with a consecutive &lt;code&gt;sequence_number&lt;/code&gt; or &lt;code&gt;sn&lt;/code&gt;.
They will also assign a second number, the sequence number of an earlier transaction, &lt;code&gt;last_committed&lt;/code&gt; or &lt;code&gt;lc&lt;/code&gt;,  which is the most recent earlier transaction in this binary log that might be conflicting (at least that is what the server that generated the binary log assumed).&lt;/p&gt;
&lt;p&gt;So given a binary log that looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;T1: sn=5 lc=4
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;T2: sn=6 lc=5
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;T3: sn=7 lc=5
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;T4: sn=8 lc=6
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;T5: sn=9 lc=4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;we have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;T2&lt;/code&gt; (&lt;code&gt;sn=6&lt;/code&gt;) depending on &lt;code&gt;T1&lt;/code&gt; (&lt;code&gt;T1&lt;/code&gt; has &lt;code&gt;sn=5&lt;/code&gt;, and &lt;code&gt;T2&lt;/code&gt;&amp;rsquo;s &lt;code&gt;lc&lt;/code&gt; is 5),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T3&lt;/code&gt; also depending on &lt;code&gt;T1&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;and &lt;code&gt;T4&lt;/code&gt; depending on &lt;code&gt;T2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T6&lt;/code&gt; is much later in the log, but is dependent &lt;code&gt;lc=4&lt;/code&gt;, just like &lt;code&gt;T1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The scheduler can schedule &lt;code&gt;T1&lt;/code&gt;, then must wait for &lt;code&gt;T1&lt;/code&gt; to commit.
After that, it schedules &lt;code&gt;T2&lt;/code&gt; and &lt;code&gt;T3&lt;/code&gt; in parallel, because they do not conflict.
&lt;code&gt;T4&lt;/code&gt; must wait for &lt;code&gt;T2&lt;/code&gt; to complete before it can run.&lt;/p&gt;
&lt;p&gt;The transaction &lt;code&gt;T5&lt;/code&gt; can in theory be scheduled in parallel already with &lt;code&gt;T1&lt;/code&gt;, but due to a limitation of the scheduler can&amp;rsquo;t: The scheduler does not look ahead - any dependency boundary will act as a block. Thus, &lt;code&gt;T2&lt;/code&gt; and &lt;code&gt;T4&lt;/code&gt; are barriers that require everything before them to commit before the scheduler can proceed.&lt;/p&gt;
&lt;h2 id=&#34;splitting-the-work-with-commit_order&#34;&gt;
    &lt;a href=&#34;#splitting-the-work-with-commit_order&#34;&gt;
	Splitting the work with COMMIT_ORDER
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;To generate such a dependency tree, for each transaction we look at the end of the transaction, the time interval after the last statement and before the commit.
At this point in time all locks the transaction can have taken actually are taken, and they are being released at the end of the commit.&lt;/p&gt;
&lt;p&gt;Two transactions are non-conflicting (can be run in parallel), when their time windows with all locks being taken do actually overlap - if they had overlapping, conflicting locks, that would not be possible.&lt;/p&gt;
&lt;p&gt;These transactions are assigned the same &lt;code&gt;lc&lt;/code&gt; number.&lt;/p&gt;
&lt;p&gt;Again, this is a short time window and the degree of parallelism is suboptimal, but at least it always works.&lt;/p&gt;
&lt;h2 id=&#34;splitting-the-work-with-writeset&#34;&gt;
    &lt;a href=&#34;#splitting-the-work-with-writeset&#34;&gt;
	Splitting the work with WRITESET
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The introduction of Group Replication required the definition of Write Sets, the sets of primary keys that make up a transaction.
They can also be used to improve parallel replication markup of the binlog:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Two transactions with non-overlapping primary key sets can be executed in parallel.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wait, what?
That is actually wrong, in more than one way, but it is a useful simplification for many cases.&lt;/p&gt;
&lt;p&gt;Two transactions are actually capable of running in parallel if their &lt;strong&gt;lock sets&lt;/strong&gt; are compatible and non-overlapping.&lt;/p&gt;
&lt;p&gt;In a transaction, each primary key of any row that we write to gets an X-lock, and thus these two things (primary key set and lock set) are almost, but not quite the same.&lt;/p&gt;
&lt;p&gt;When are they not the same?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We may theoretically have tables without a primary key.
That&amp;rsquo;s bad, and basically while we can lock rows, we can still have two identical rows, one locked and not.
We cannot handle WRITESET things for tables without primary keys (but any sensible DBA will require your tables to always have a primary key defined anyway, so that should never be an issue).&lt;/li&gt;
&lt;li&gt;We may have tables with foreign key constraints, and the foreign key constraints may generate S-locks on REFERENCED rows.
These locks in other tables may prevent other writes from proceeding.
We cannot handle WRITESET things in the presence of foreign key constraint definitions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;with Write Sets, we can create maximally parallel dependency trees for a large number of cases, and&lt;/li&gt;
&lt;li&gt;with COMMIT_ORDER, we have a fallback plan when we can&amp;rsquo;t.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;how-parallel-is-our-workload&#34;&gt;
    &lt;a href=&#34;#how-parallel-is-our-workload&#34;&gt;
	How parallel is our workload?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s write a bit of code to find that out.
You can follow along &lt;a href=&#34;https://github.com/isotopp/mysql-dev-examples/blob/master/mysql-binlog-parallel/mysql-binlog-parallel.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;

.&lt;/p&gt;
&lt;p&gt;Using the &lt;code&gt;mysqlbinlog&lt;/code&gt; program, we can read a MySQL binlog and extract the &lt;code&gt;lc&lt;/code&gt;/&lt;code&gt;sn&lt;/code&gt; pairs.
The following &lt;code&gt;mysqlbinlog | grep&lt;/code&gt; will produce lines that look like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;mysqlbinlog -vvv binlog.654321 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;s2&#34;&gt;&amp;#34;last_committed=&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -3
&lt;span class=&#34;go&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;211102&lt;/span&gt;  8:44:24 server id &lt;span class=&#34;m&#34;&gt;210015197&lt;/span&gt;  end_log_pos &lt;span class=&#34;m&#34;&gt;475&lt;/span&gt; CRC32 0x61436ace 	
&lt;span class=&#34;go&#34;&gt;    GTID	last_committed=0	sequence_number=1	rbr_only=yes
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt; 	original_committed_timestamp=1635839064507445
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt; 	immediate_commit_timestamp=1635839064507445	transaction_length=501
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;211102&lt;/span&gt;  8:44:24 server id &lt;span class=&#34;m&#34;&gt;210015197&lt;/span&gt;  end_log_pos &lt;span class=&#34;m&#34;&gt;976&lt;/span&gt; CRC32 0xb28c4330 	
&lt;span class=&#34;go&#34;&gt;    GTID	last_committed=1	sequence_number=2	rbr_only=yes
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    original_committed_timestamp=1635839064507452	
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    immediate_commit_timestamp=1635839064507452	transaction_length=501
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;211102&lt;/span&gt;  8:44:24 server id &lt;span class=&#34;m&#34;&gt;210015197&lt;/span&gt;  end_log_pos &lt;span class=&#34;m&#34;&gt;1477&lt;/span&gt; CRC32 0xca77099e
&lt;span class=&#34;go&#34;&gt;    GTID	last_committed=2	sequence_number=3	rbr_only=yes
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    original_committed_timestamp=1635839064507455
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;    immediate_commit_timestamp=1635839064507455	transaction_length=505
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our code will need to grab the &lt;code&gt;lc&lt;/code&gt;/&lt;code&gt;sn&lt;/code&gt; pairs and store them into value objects of the Transaction type we create.
We then add the transactions to the commit scheduler:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Transaction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sched&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Adding a transaction with &lt;code&gt;sched.add(t)&lt;/code&gt; checks if the transaction is blocked by a still open conflicting transaction.
If that is the case, it first forces the open transactions to be committed, before it adds the new transaction to the (now empty) list of open transactions.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Transaction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;wait_for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lc&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wait_for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;blocker&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;=}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; is blocked by &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blocker&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;=}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;adding &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;=}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ldquo;Committing&amp;rdquo; is simple: We just clear the list.
Before we do that, we collect a number of statistics.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;incremental&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Commit: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;=}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;=}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; Avg=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;avg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Doing that, each time there is a conflict we collect the length of the list of parallel transactions, for a global average and also in a histogram.
If incremental is on, we emit a running update with the current degree of parallelism.&lt;/p&gt;
&lt;h2 id=&#34;actual-data&#34;&gt;
    &lt;a href=&#34;#actual-data&#34;&gt;
	Actual data
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;We have some very low traffic hierarchies such as data archives, that have an extremely low degree of parallelism - mostly because they are idle most of the time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;# &lt;/span&gt;mysqlbinlog -vvv binlog.000058 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;s2&#34;&gt;&amp;#34;last_committed=&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; ./binlog.py
&lt;span class=&#34;go&#34;&gt;1: 631546
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;2: 481
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;3: 552
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;4: 300
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;5: 222
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;6: 423
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;7: 381
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;8: 184
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;9: 31
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;10: 13
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;11: 18
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;12: 9
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;13: 4
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;14: 1
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;15: 3
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;16: 3
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Avg = 1.0155383957954558
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Max = 16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output is a histogram, so for this binlog, we had 3 instances where the open queue was 16 deep, and so on.
On the average, degree of parallelism was 1.02, and the maximum was 16.&lt;/p&gt;
&lt;p&gt;Others, showing a more normal workload, look a bit better:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;# &lt;/span&gt;mysqlbinlog -vvv binlog.000165 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;s2&#34;&gt;&amp;#34;last_committed=&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; ./binlog.py
&lt;span class=&#34;go&#34;&gt;1: 78255
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;2: 69955
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;3: 46694
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;4: 30747
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;5: 21162
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;6: 15942
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;7: 12431
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;8: 9465
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;9: 7580
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;10: 6059
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;11: 4984
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;12: 4155
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;13: 3583
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;14: 3018
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;15: 2565
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;16: 2218
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;17: 1960
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;18: 1635
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;19: 1406
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;20: 1196
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;62: 1
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Avg = 4.569389646418146
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Max = 62
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we end up with an average degree of parallelism of 4.6, and a maximum of 62.&lt;/p&gt;
&lt;p&gt;For an internal control plane state storage, we get ~2.&lt;/p&gt;
&lt;p&gt;And for our legacy central database, we get a whopping 18.
That makes a lot of sense if you think about it - this is a shared database with a number of independent sets of tables that will never block each other.
That&amp;rsquo;s why we are able to split it into individual smaller databases in the first place, which is what currently happens.&lt;/p&gt;
&lt;h1 id=&#34;tldr&#34;&gt;
    &lt;a href=&#34;#tldr&#34;&gt;
	TL;DR
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;MySQL has made great progress in being able to run parallel replication, and the work on Write Sets for Group Replication has helped tremendously with that.&lt;/p&gt;
&lt;p&gt;Still, the degree of exploitable parallelism is workload dependent and varies a lot (20x!), depending on replication chain and also, unfortunately, time of day and month.&lt;/p&gt;
&lt;p&gt;There are legit use-cases that have very extremely low degrees of exploitable parallelism, and any SLO on replication performance always must be made with the assumption of a &amp;ldquo;degree of parallelism=1&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;If, and how much parallelism there is, is entirely dependent on the database owner and the workload they have.
It cannot be controlled by the database operators.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>This Blog is now Hugo powered</title>
      <link>https://blog.koehntopp.info/2021/11/07/this-blog-is-now-hugo-powered.html</link>
      <pubDate>Sun, 07 Nov 2021 11:28:27 +0100</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/11/07/this-blog-is-now-hugo-powered.html</guid>
      <description>&lt;p&gt;I started blogging almost 20 years ago, because a piece of software I was using to manage calendars and discussion boards to organize the &amp;ldquo;Dienstag&amp;rdquo; also offered blogging functionality.
That software was very buggy and full of HTML injections.
My patches to fix things touched almost all files, and were rejected, because they&amp;hellip; touched too many files.&lt;/p&gt;
&lt;p&gt;So I was looking around for something better, and the good people on &lt;code&gt;ircnet:#php.de&lt;/code&gt; recommended &lt;a href=&#34;https://docs.s9y.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Serendipity&lt;/a&gt;

.
I have been using this for many years, contributed a few improvements and sponsored a few others.
Unfortunately, when Mobile became a thing, I had no theme that went well with that.
I also needed 2FA for obvious reasons.&lt;/p&gt;
&lt;p&gt;So for a time, I used Google+ a lot, but we all know how that went.
After that I installed WordPress, but not only was that slow, but the constant patching and  the Antispam became a drag.&lt;/p&gt;
&lt;p&gt;I revived the blog by moving all my content to Markdown, and putting it up as a
&lt;a href=&#34;https://github.com/isotopp/isotopp.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git repository&lt;/a&gt;


hosted as GitHub Pages.
GitHub Pages has a default workflow, which requires you to do nothing more than to push Markdown, which is very convenient.
Internally it uses &lt;a href=&#34;https://jekyllrb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jekyll&lt;/a&gt;

, a static site generator, which converts Markdown together with a set of templates to HTML in the &lt;code&gt;_site&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Jekyll is nice enough, and provided useful importers for Serendipity and WordPress.
Also, I was able to extend it a bit to also create dedicated additional RSS feeds for the &lt;code&gt;MySQL&lt;/code&gt; and &lt;code&gt;Review&lt;/code&gt; tags.
Unfortunately, though, it is written in Ruby and the theme also uses a lot of npm.
The consequence of that are frequent module updates - again! - and a build time for the entire blog of approximately 120 seconds.&lt;/p&gt;
&lt;p&gt;I tried alternatives, and there are many.
They are all either slow (Pelican and other Python based stuff), or have hardly any community (e.g. Rust-based Zola).
Also, the themes offered are all worse than the really awesome &lt;a href=&#34;https://github.com/sylhare/Type-on-Strap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Type-on-Strap&lt;/a&gt;

 I was using in Jekyll.
Especially they all offer no or bad on-site search.&lt;/p&gt;
&lt;p&gt;I tried to experiment with Hugo, a Go-based site generator, and that is when I realized that I know nothing about frontend anymore, at all.
I mean, I did PHP and made websites, but that was in and around 2000.
That is &lt;em&gt;checks calendar&lt;/em&gt; more than 20 years ago, and would  you believe it, technology has changed.&lt;/p&gt;
&lt;p&gt;I tried to get things to work, but I failed, and gave up:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/isotopp/status/1451565659066978306&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/frontend.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/a&gt;

&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Okay, ich geb es auf. Ich bin ja bekennender Frontend-Analphabet und habe zuletzt Webkram gemacht als wir noch ein anderes Jahrtausend hatten.&lt;/p&gt;
&lt;p&gt;Mein Blog verwendet Jekyll, und &lt;a href=&#34;https://github.com/sylhare/Type-on-Strap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/sylhare/Type-on-Strap&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Das ist lahm, und ich will Hugo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Ich verwende das Theme, weil es light und text-freundlich ist, und weil es eine gute Suche mitbringt (JS basierend, aber funktioniert leidlich).&lt;/p&gt;
&lt;p&gt;Gibt es dieses Theme oder was Vergleichbares für Hugo, oder mag jemand das portieren.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Original ist MIT License.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Bin Privatperson, Blog nicht monetarisiert, kann nur symbolisch zahlen, wenn es jemand es für Geld tun will, sollte das Resultat ebenfalls MIT oder frei verfügbar sein.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/darixzen/status/1451567686484467723&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@Darixzen&lt;/a&gt;

 as a member of the &lt;a href=&#34;https://pixls.us/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pixls.us&lt;/a&gt;

 project then made contact with me, and recommended &lt;a href=&#34;https://github.com/patdavid&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pat David&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;rsquo;m a member of the GIMP team, occasional photographer, digital dabbler, and lover of Free Software. Started @pixlsus &lt;a href=&#34;https://pixls.us&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pixls.us&lt;/a&gt;

&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;who took it upon himself to create a foundation for me to build on, and this weekend I was able to provisionally move over things from Jekyll to Hugo.
There are still many visual and other bugs, but this is on GitHub: You can open issues, and even better, provide PRs.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/frontend-rebuild.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;When running &lt;code&gt;hugo serve&lt;/code&gt;, the website is built in memory and served from &lt;code&gt;http://localhost:1313&lt;/code&gt;. A file watcher detects changes, and &amp;ldquo;on save&amp;rdquo; rebuilds the minimal change set, then triggers an automatic reload in the browser.
I have the browser open on the left, WebStorm on the right, and whenever I hit &lt;code&gt;Ctrl-S&lt;/code&gt; or change tabs, the article I am looking automatically refreshes. Build time is 0.272s, approximately human reaction time - it&amp;rsquo;s instant.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The build time for &lt;code&gt;hugo --cleanDestinationDir&lt;/code&gt; is down from 120s to 8s, for the entire site.
&amp;ldquo;Thanks, @patdavid!&amp;rdquo; and &amp;ldquo;Thanks, Hugo!&amp;rdquo;, I&amp;rsquo;d say!&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/11/frontend-build.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The new build time for the entire site is down to 8s.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Also, using this and the Bootstrap and GitHub workflow documentation, I am even learning things now, and actually was able to fix &lt;a href=&#34;https://github.com/isotopp/isotopp.github.io/commit/869c4962fbbc24c8ae9c3343bcaa25c140241f6b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the first bug&lt;/a&gt;

 on my blog on my own. Kris doing frontend, take cover. 😄&lt;/p&gt;
&lt;p&gt;Ah, and JetBrains. I have the all-in subscription, and started using WebStorm with this setup.
I am constantly amazed how fast and incredibly useful their stuff is.
If you do stuff with software for a living, and are not using their products, you are doing it wrong.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL: Python and WHERE ... IN ()</title>
      <link>https://blog.koehntopp.info/2021/10/28/python-where-in.html</link>
      <pubDate>Thu, 28 Oct 2021 14:06:51 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/28/python-where-in.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;As a developer using Python, I want to be able to hand
a &lt;code&gt;list&lt;/code&gt; to an SQL statement with a
&lt;code&gt;WHERE id IN (…)&lt;/code&gt; clause, and it should do the right thing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, that is not how it started, because it was asked on the  internal no-work-channel, so it kind of escalated more.&lt;/p&gt;
&lt;h1 id=&#34;a-question&#34;&gt;
    &lt;a href=&#34;#a-question&#34;&gt;
	A question
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The original question was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dev&amp;gt; Why is it 2021, and SQL prepared statements still can&amp;rsquo;t deal with IN?  Or have I missed some exciting development?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After a quick detour through Java (which we won&amp;rsquo;t discuss any further in this article), we established that this was a Python problem in this particular instance.
And we touched on several other interesting things on our way.&lt;/p&gt;
&lt;p&gt;But first, the solution:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/env python3&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;click&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;MySQLdb&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;MySQLdb.cursors&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DebugCursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DictCursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Debug: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;db_config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;passwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;secret&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kris&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cursorclass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DebugCursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Making WHERE IN great again.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;make_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sql1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;drop table if exists insert_test&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sql2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;create table insert_test ( id serial, d varchar(200) )&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sql3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;insert into insert_test values ( NULL, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(value)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; )&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;eins&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;zwei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;drei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;zw&amp;#34;ei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;dr\ei&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@sql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ary&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;eins&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;zwei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;drei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;zw&amp;#34;ei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;dr\ei&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;select d from insert_test where d in &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(ary)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ary&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In case you didn&amp;rsquo;t spot it: you can safely generate the &lt;code&gt;WHERE d IN …&lt;/code&gt; clause by supplying a string placeholder and then handing it a &lt;code&gt;list&lt;/code&gt;.
Do not provide parens, the list will bring its own: It is &lt;code&gt;select d from t where id in %s&lt;/code&gt; and &lt;em&gt;not&lt;/em&gt; &lt;code&gt;select d from t where id in ( %s )&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&#34;why-is-that-safe&#34;&gt;
    &lt;a href=&#34;#why-is-that-safe&#34;&gt;
	Why is that safe?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We are calling &lt;code&gt;cursor.execute(sql, args)&lt;/code&gt; to run the SQL.
&lt;code&gt;cursor&lt;/code&gt; is from &lt;code&gt;MySQLdb&lt;/code&gt;, which is the package &lt;code&gt;mysqlclient&lt;/code&gt;, obviously.&lt;/p&gt;
&lt;h2 id=&#34;wait-what&#34;&gt;
    &lt;a href=&#34;#wait-what&#34;&gt;
	Wait, what?
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In Python 2, there was a MySQL database class called &lt;code&gt;MySQLdb&lt;/code&gt; in the package &lt;code&gt;MySQLdb&lt;/code&gt;, which was not Python 3 compatible, and the maintainer vanished.
Also, Python 3 wanted to do away with upper case letters in package names, anyway.&lt;/p&gt;
&lt;p&gt;So somebody took over the package, renamed it &lt;code&gt;mysqlclient&lt;/code&gt; and made it Python 3 compatible, and kept the old class names in order to, uncharacteristically for Python, not break compatibility.
Hence, you install the dependency &lt;code&gt;mysqlclient&lt;/code&gt; to get the &lt;code&gt;MySQLdb&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;Remember this the next time a Python person makes fun of your PHP needles and haystacks, or your Perl anything.&lt;/p&gt;
&lt;h2 id=&#34;anyway&#34;&gt;
    &lt;a href=&#34;#anyway&#34;&gt;
	Anyway…
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;In any case, the cursors are in &lt;code&gt;cursors.py&lt;/code&gt;, hopefully somewhere in your venv.
And &lt;a href=&#34;https://github.com/PyMySQL/mysqlclient/blob/143129be8f57d3a0667f01c989b9776bd80c28d3/MySQLdb/cursors.py#L171-L207&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;cursor.execute()&lt;/code&gt;&lt;/a&gt;

 looks something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;mi&#34;&gt;171&lt;/span&gt;     &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;190&lt;/span&gt;         &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;191&lt;/span&gt;             &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;192&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;nargs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;193&lt;/span&gt;                 &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;194&lt;/span&gt;                     &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;195&lt;/span&gt;                         &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;196&lt;/span&gt;                     &lt;span class=&#34;n&#34;&gt;nargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;literal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;197&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nargs&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;198&lt;/span&gt;             &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;199&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;literal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;             &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;201&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;202&lt;/span&gt;             &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;TypeError&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;203&lt;/span&gt;                 &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ProgrammingError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;204&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;205&lt;/span&gt;         &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytearray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;206&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;207&lt;/span&gt;         &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So in line 201, the replacement is a simple old style Python string formatting, &lt;code&gt;query % args&lt;/code&gt;.
This is then handed to &lt;code&gt;self._query()&lt;/code&gt; in line 206.&lt;/p&gt;
&lt;p&gt;Before that, in 190ff, the args are massaged.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;args&lt;/code&gt; is not a &lt;code&gt;dict&lt;/code&gt;, we &lt;code&gt;map(db.literal, args)&lt;/code&gt;, which happens to be defined in
&lt;a href=&#34;https://github.com/PyMySQL/mysqlclient/blob/5c04abf87d32a3254dd481c03740a8c56520bc3a/MySQLdb/connections.py#L266-L287&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;connections.py:266&lt;/code&gt;&lt;/a&gt;

.
The function escapes the arg using the proper encoding required.
It ends up using
&lt;a href=&#34;https://github.com/PyMySQL/mysqlclient/blob/204fb123683454cdb670e0065f09e50d425b94c8/MySQLdb/_mysql.c#L964-L1011&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;string_literal()&lt;/code&gt;&lt;/a&gt;

,
which is defined in &lt;code&gt;_mysql&lt;/code&gt;, a C-language wrapper that links against &lt;code&gt;libmysqlclient.so&lt;/code&gt;, the C language client protocol library.
And that in turn ends up being a call to
&lt;a href=&#34;https://github.com/PyMySQL/mysqlclient/blob/204fb123683454cdb670e0065f09e50d425b94c8/MySQLdb/_mysql.c#L1000&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;mysql_real_escape_string_quote()&lt;/code&gt;&lt;/a&gt;

,
which is the appropriate function for this.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;dicts&lt;/code&gt;, similarly, the items are being enumerated and then &lt;code&gt;db.literal()&lt;/code&gt; is applied.&lt;/p&gt;
&lt;p&gt;So this is proven to work, and it uses the recommended escape function on parameters for MySQL.&lt;/p&gt;
&lt;h1 id=&#34;debugging&#34;&gt;
    &lt;a href=&#34;#debugging&#34;&gt;
	Debugging
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;We do hand the query off to
&lt;a href=&#34;https://github.com/PyMySQL/mysqlclient/blob/143129be8f57d3a0667f01c989b9776bd80c28d3/MySQLdb/cursors.py#L316-L323&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;self._query()&lt;/code&gt;&lt;/a&gt;


in the end. And that does the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_get_db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_do_get_result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_post_get_result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_executed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rowcount&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That it, it fetches the existing database connection db, sends off the query and fetches and processes the result (so that you can call &lt;code&gt;cursor.fetchall()&lt;/code&gt; or similar on it).
It also remembers the query string in &lt;code&gt;cursor._executed&lt;/code&gt;, but only after the query ran without error.
And finally, it returns the rowcount.&lt;/p&gt;
&lt;p&gt;We could debug by printing &lt;code&gt;cursor._executed&lt;/code&gt;, but only if we don&amp;rsquo;t need to debug and the query actually ran.
That is, because the assignment happens only after the &lt;code&gt;db.query()&lt;/code&gt;, which in turn will throw an exception if there is a problem with our SQL.&lt;/p&gt;
&lt;p&gt;So in order to actually debug, we need to do better:
We can specify a &lt;code&gt;cursorclass=&lt;/code&gt; anyway, as a connection parameter.&lt;/p&gt;
&lt;p&gt;We make our own cursorclass, &lt;code&gt;DebugCursor&lt;/code&gt;, which we let inherit from our cursor class of choice.
I happen to be partial to &lt;code&gt;DictCursor&lt;/code&gt;, so I inherit from that.&lt;/p&gt;
&lt;p&gt;In my &lt;code&gt;DebugCursor&lt;/code&gt;, I simply override &lt;code&gt;_query()&lt;/code&gt;, log the query string and hand off things otherwise unchanged to the superclass.
Because I do that before everything else, I get my log sent before stuff catches fire and my code burns to the ground.&lt;/p&gt;
&lt;p&gt;That way I get to see the replaced SQL before it runs, even it if is gibberish.
So I can actually see that&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;select d from insert_test where d in ( &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(ary)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; )&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ary&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;in which I supply my own parens, turns into&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;python3 prep.py query
&lt;span class=&#34;go&#34;&gt;[&amp;#39;eins&amp;#39;, &amp;#39;zwei&amp;#39;, &amp;#39;drei&amp;#39;, &amp;#39;zw&amp;#34;ei&amp;#39;, &amp;#39;dr\\ei&amp;#39;]
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Debug: b&amp;#39;select d from insert_test where d in ( (\&amp;#39;eins\&amp;#39;,\&amp;#39;zwei\&amp;#39;,\&amp;#39;drei\&amp;#39;,\&amp;#39;zw\\&amp;#34;ei\&amp;#39;,\&amp;#39;dr\\\\ei\&amp;#39;) )&amp;#39;
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Traceback (most recent call last):
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;  File &amp;#34;prep.py&amp;#34;, line 54, in &amp;lt;module&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;while without those extra parens I get&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;python3 prep.py query
&lt;span class=&#34;go&#34;&gt;[&amp;#39;eins&amp;#39;, &amp;#39;zwei&amp;#39;, &amp;#39;drei&amp;#39;, &amp;#39;zw&amp;#34;ei&amp;#39;, &amp;#39;dr\\ei&amp;#39;]
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Debug: b&amp;#39;select d from insert_test where d in (\&amp;#39;eins\&amp;#39;,\&amp;#39;zwei\&amp;#39;,\&amp;#39;drei\&amp;#39;,\&amp;#39;zw\\&amp;#34;ei\&amp;#39;,\&amp;#39;dr\\\\ei\&amp;#39;)&amp;#39;
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;{&amp;#39;d&amp;#39;: &amp;#39;eins&amp;#39;}
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;{&amp;#39;d&amp;#39;: &amp;#39;zwei&amp;#39;}
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;{&amp;#39;d&amp;#39;: &amp;#39;drei&amp;#39;}
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;{&amp;#39;d&amp;#39;: &amp;#39;zw&amp;#34;ei&amp;#39;}
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;{&amp;#39;d&amp;#39;: &amp;#39;dr\\ei&amp;#39;}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and so I get to actually see that all is fine and well, and properly escaped.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metaverse (en)</title>
      <link>https://blog.koehntopp.info/2021/10/27/metaverse-en.html</link>
      <pubDate>Wed, 27 Oct 2021 17:10:21 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/27/metaverse-en.html</guid>
      <description>&lt;p&gt;I &lt;a href=&#34;https://twitter.com/isotopp/status/1450739310546886657&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wrote on Twitter&lt;/a&gt;

 something about the term &amp;ldquo;Metaverse&amp;rdquo;.
That led to a contact with &lt;a href=&#34;https://twitter.com/michacarl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Michael Carl&lt;/a&gt;

, who wanted to make an episode for his &lt;a href=&#34;https://carls-zukunft.de/folge-58-how-to-build-a-metaversum-in-three-simple-steps/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Podcast&lt;/a&gt;

 with me.
My &lt;a href=&#34;https://docs.google.com/document/d/1_OIl_bcrjVczLQrMrVnt5IoYbitp1504mb2GbQK0EM4/edit#heading=h.wbe6wnc7fg59&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;german notes and talk prep&lt;/a&gt;

 are now also available here:&lt;/p&gt;
&lt;h1 id=&#34;metaverse&#34;&gt;
    &lt;a href=&#34;#metaverse&#34;&gt;
	Metaverse
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The term &amp;ldquo;Metaverse&amp;rdquo; was initially coined by Neal Stephenson in 1992, but in the context of the current discussion it was defined as in &lt;a href=&#34;https://www.matthewball.vc/all/themetaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Metaverse: What It Is, Where to Find it, Who Will Build It, and Fortnite&lt;/a&gt;

 by Matthew Ball. Ball later &lt;a href=&#34;https://www.matthewball.vc/the-metaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wrote a lot more about the same&lt;/a&gt;

, and that led to the current Valley Hype around it.&lt;/p&gt;
&lt;p&gt;We are starting with games, who no longer are what they started out as, but somehow transcended:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fortnite by Epic Games, which now also hosts non-Fortnite events,&lt;/li&gt;
&lt;li&gt;Roblox, a platform to make and host low-end games, and&lt;/li&gt;
&lt;li&gt;Minecraft in the Java and Bedrock editions, to show how both fail differently.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fortnite&#34;&gt;
    &lt;a href=&#34;#fortnite&#34;&gt;
	Fortnite
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Fortnite originally was a Battle Royale game, but is now also a platform that can host events. You can also buy skins for your characters or items, often in a partnership with other IP, for example Marvel/DC super heroes.
People gave concerts in there, or hosting other events.
Epic likes to do this, openly, because it establishes Fortnite with people who are not originally interested in Battle Royale or part of gaming culture.&lt;/p&gt;
&lt;p&gt;Epic Games also makes the Unreal Engine, and the associated pipelines for creating and editing in-game assets, hosts a market to sell these things, and is building a living infrastructure to produce games, and market them.
They are in a way the invisible back-cover of many games.&lt;/p&gt;
&lt;h2 id=&#34;roblox&#34;&gt;
    &lt;a href=&#34;#roblox&#34;&gt;
	Roblox
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Similarly, but way more casual, Roblox operates a platform to create, host and market low-end games, &amp;ldquo;making games as a game&amp;rdquo;, and matching this, they also have assets, and an asset and game marketing outlet.
Roblox is mostly a thing with young and very young people, and vastly underrated with older people.&lt;/p&gt;
&lt;h2 id=&#34;minecraft-in-two-flavors&#34;&gt;
    &lt;a href=&#34;#minecraft-in-two-flavors&#34;&gt;
	Minecraft in two flavors
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft is a classic: The original game is written in Java, and meanwhile completely replaceable with third party components. There are alternative clients, alternative servers, and alternative assets.
The game is bad: It is a sandbox without much story, an ill-defined goal and primitive graphics, the original servers are slow and buggy.&lt;/p&gt;
&lt;p&gt;But the graphics are simple enough that even old potato computers can render it.
It is written in Java, which can be easily reversed and extended without cooperation from the vendor.
And thus there is an extremely rich community of modders, server and client plugins, and many other extensions.
As such, Minecraft is a gateway drug into Java programming with young people, because it has unlimited potential for self-motivation and initiates undirected and unprompted learning in many people.&lt;/p&gt;
&lt;p&gt;None of that leads to monetization that the current owner, Microsoft, can hook on.
As an IP asset, Minecraft Java is an utter failure, because after the initial purchase Microsoft is no longer part of the value chain.&lt;/p&gt;
&lt;p&gt;That is why there is &amp;ldquo;Minecraft Bedrock Edition&amp;rdquo;, more performant, better designed and from the ground up with an asset marketplace.
You can buy Bedrock extensions in that marketplace, and only there.
As a maker of extensions, you will have to license IP from Microsoft, and pay percentages, as a customer anyway.
With gamers, it is not very popular, sterile, and without its own subculture.
Compared to the Java Edition, an even bigger failure.&lt;/p&gt;
&lt;p&gt;The Bedrock model is comparable to the Apple Developer mode, but smaller in scope:
You can&amp;rsquo;t seriously develop for Apple machines without having an Apple-ID, a developer license, support for Apple Cloud for handover, and without leaving percentages to the Apple Store.
Bedrock copies that model, but not as a Computer-Tablet ecosystem, only as a game, and that did not take off.&lt;/p&gt;
&lt;h1 id=&#34;metaverse-a-first-definition&#34;&gt;
    &lt;a href=&#34;#metaverse-a-first-definition&#34;&gt;
	Metaverse: A first definition.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The definition of &amp;ldquo;Metaverse&amp;rdquo; is hence less 3D goggles, and more &amp;ldquo;Integration of the gaming industry with the value chain of the entertainment industry for an open digital asset market&amp;rdquo;.
Or more open: siphoning off percentages along the gaming value chain during production, marketing and usage, and improving the value of gaming assets by partnering with entertainment properties and using their IP in gaming contexts.&lt;/p&gt;
&lt;p&gt;The objective is to get more lifetime consumer budget out of a person, without bothering them too much by investing actual time.
We want to extend the scope of &amp;ldquo;sellable media&amp;rdquo; in the widest sense.&lt;/p&gt;
&lt;h2 id=&#34;attention-and-time-budgets&#34;&gt;
    &lt;a href=&#34;#attention-and-time-budgets&#34;&gt;
	Attention and time budgets
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;People have monetary limits, &lt;a href=&#34;https://en.wikipedia.org/wiki/Disposable_and_discretionary_income&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the consumption part of disposable income&lt;/a&gt;

.
They also have time limits, an attention budget.
Both are convertible, but that is media dependent.&lt;/p&gt;
&lt;p&gt;Assuming a useful lifetime of 60 years for media consumption, during that time I could read for example one book per week, for a total of 40 books per year.
In a total lifetime, that are 2400 books, at - say - 30 Euros each.&lt;/p&gt;
&lt;p&gt;With AAA games, one can do around 4-6 of them per year, 240-300 in a lifetime, at a value of around 60 Euros each.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s a total lifetime value of around 70k Euro in books, or 20k Euro in games per person.&lt;/p&gt;
&lt;p&gt;We can see that games are too cheap compared to their production cost, but a higher price than 60 Euro is unrealistic even for AAA titles.
That is one reason why each and every game has additional ways of spending money after purchase.&lt;/p&gt;
&lt;p&gt;In general with both media types, there is a lot of my lifetime attention span bound for comparatively little money:
We need to up the burn rate.
Books, movies and especially AAA games are much too valuable per time and their consume binds too much attention for the business to scale up.
We need a different way to extract money that does not bind as many minutes of person-lifetime and attention.&lt;/p&gt;
&lt;p&gt;That is critically important, because there is also a lot of free content which competes for attention with our paid for assets, and which often is &amp;ldquo;good enough&amp;rdquo; to bind time which we then cannot monetize.&lt;/p&gt;
&lt;h2 id=&#34;a-sidebar-death-and-inheritances&#34;&gt;
    &lt;a href=&#34;#a-sidebar-death-and-inheritances&#34;&gt;
	A sidebar: death and inheritances
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;With an aging population there is the sidebar &amp;ldquo;boomers die, their children inherit&amp;rdquo;.
For example, right now I have around 600 Steam titles, and around 1000 Kindle books.
When I die this represents multiple 10k Euro of value.
How can my son inherit this?
Politics has no answers, and the vendors say &amp;ldquo;he won&amp;rsquo;t&amp;rdquo;.
I can only leave my Steam login to my son, and crack the DRM of my Kindle titles.&lt;/p&gt;
&lt;p&gt;Economically, Kindle and Steam inheritances are largely irrelevant, or would be even be positive, and it is unclear why vendors are blocking this.&lt;/p&gt;
&lt;p&gt;When I am inheriting a villa at the lake, I can go in, open the veranda, walk down through the park to the shore and enjoy the asset within minutes.
It does not take much time.&lt;/p&gt;
&lt;p&gt;Inheriting my Kindle and Steam library, my son will need to invest a lot of time to enjoy that:
With 1200 books that will bind 30 years of lifetime,  and with an inheritance of 1000 games there will be titles from 2002 that look like drawn with crayons today.
I am inheriting &amp;ldquo;Skyrim&amp;rdquo;, but I will have to purchase the &amp;ldquo;VR&amp;rdquo; and &amp;ldquo;Remastered&amp;rdquo; editions of that myself.&lt;/p&gt;
&lt;p&gt;We can see immediately that this will hardly lead to a loss in revenue for vendors, in some cases it is more like a kind of advertisement, actually.&lt;/p&gt;
&lt;h2 id=&#34;assets-high-budget-little-time&#34;&gt;
    &lt;a href=&#34;#assets-high-budget-little-time&#34;&gt;
	Assets: high budget, little time
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Even today, games offer loot boxes, pay-to-win and pay-to-skip purchases, and they sell cosmetics. Unlike the first three, the last one is hardly controversial.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay-to-Win: to finish the game successfully you have to buy equipment with real money. Ideally this becomes apparent only of tou already are invested in the game emotionally and with lifetime.&lt;/li&gt;
&lt;li&gt;Pay-to-Skip: gameplay is often interrupted with annoying delays in which you can&amp;rsquo;t play, except you purchase immediate continuations with real money.&lt;/li&gt;
&lt;li&gt;Lootboxes: The game sells containers with &amp;ldquo;random&amp;rdquo; in-game assets to you, some of which are very important in the context of the game. The actual game is just a wrapper for an addictive (and usually rigged) game of chance. The practice is already illegal as unregulated gambling in several EU countries.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contrary to this, cosmetics are widely accepted: These are assets that change the way the character or their equipment looks like, without affecting gameplay. Also, virtual houses and house furnishings that have no effect on gameplay.&lt;/p&gt;
&lt;p&gt;For example, in &amp;ldquo;Elder Scrolls Online&amp;rdquo; as a player you can get easily and early in-game houses which are spectacularly located, and have a lot of empty space for decorations.
Furnishings to decorate the house can be gotten as trophies in-game, but every day things can only be gotten by using real money and purchase from the shop.&lt;/p&gt;
&lt;p&gt;This has many desirable properties for the vendor:
The player can spend a lot of money (without limits!) in-game, and hardly has to invest time or attention to make use of these assets.
We are no longer revenue-bound by the players&#39; attention budget.
This is a much better thing to sell than books, films or the games themselves.
The game only provides context and reason for the cosmetics to exist, and defines their visuals.&lt;/p&gt;
&lt;h2 id=&#34;epic-games&#34;&gt;
    &lt;a href=&#34;#epic-games&#34;&gt;
	Epic Games
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This is precisely the operating model of Epic Games:
With the Unreal Engine the company owns a platform for the fast and efficient design and rendering of really good-looking games.
This also includes the tooling for making in-game assets, but also a market to sell these to other game developers.
With the Epic Launcher and the integrated shop this is also a platform for game sales, and to collect meta and usage data for Epic, which again (for money) are sold back to the developer as analytics.
Epic operates a payment system, which pipes money from the customer to the developer, not only for games, but also for extensions, DLC and in-game purchases.&lt;/p&gt;
&lt;p&gt;With Fortnite, Epic has their own game, which at the same time can also sell 3D assets to players as equipment, cosmetics and other things.&lt;/p&gt;
&lt;p&gt;Fortnite is a special kind of game - player vs. player, battle royal - players play against each other and last man standing wins the round.
This kind of game is not interesting for all target demographics, but the engine of Fortnite is flexible and can be repurposed.
This enables other use-cases, among them also as a &amp;ldquo;virtual event platform&amp;rdquo;, which also keeps the interest up through media tie-ins and licensed IP.&lt;/p&gt;
&lt;p&gt;The interpretation of &amp;ldquo;The Metaverse&amp;rdquo; as a value chain for digital assets, specifically 3D assets, is too short-sighted:
As an ecosystem with a controlled number of large market operators and a very large numbers of content creators and customers the foundations will look better and have better longevity.
It is entirely possible to allow third parties to operate in this &amp;ldquo;virtual world&amp;rdquo;, trade with each other, especially if the market operators at all times get a tiny share from each transaction.
This is the idea of the &amp;ldquo;Microsoft tax&amp;rdquo;, revitalized.&lt;/p&gt;
&lt;h1 id=&#34;players-in-this-market&#34;&gt;
    &lt;a href=&#34;#players-in-this-market&#34;&gt;
	Players in this market
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Different parties have different starting positions and strengths:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Epic Games/Fortnite - weak in IP, but some original IP, even if niche. Unreal Engine and other things on the &amp;ldquo;games invisible back-cover&amp;rdquo; as a big strength.&lt;/li&gt;
&lt;li&gt;Roblox - original IP, very young customers, grooms them into future customers, wait 10 years.&lt;/li&gt;
&lt;li&gt;Microsoft - Minecraft, MS Store et al., too enterprise for success? But Halo, MSFS.&lt;/li&gt;
&lt;li&gt;Apple (sic!) - no IP, but platform/chain.&lt;/li&gt;
&lt;li&gt;Disney (sic!) - only IP, but weak marketing outside of films/merchandise. Knows the game very well in the real world: Imagine Disneyland principles applied to a Metaverse.&lt;/li&gt;
&lt;li&gt;Facebook - wants in at all costs, &amp;ldquo;pivot our enterprise&amp;rdquo;: If &amp;ldquo;social&amp;rdquo; of the future is &amp;ldquo;here&amp;rdquo;, we need to be &amp;ldquo;here&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Google - all of this is a reason why Stadia still exists, despite being a flop.&lt;/li&gt;
&lt;li&gt;Amazon - this is where the gaming strategy of Amazon is anchored. Amazon would like to be the AWS of the gaming world, instead of Epic.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tech-maturity-cycle-and-standards&#34;&gt;
    &lt;a href=&#34;#tech-maturity-cycle-and-standards&#34;&gt;
	Tech Maturity Cycle and standards
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cynefin_framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cynefin&lt;/a&gt;

 as a Market Maturity Model.&lt;/p&gt;
&lt;p&gt;We are in the chaotic phase of market maturity:
Nobody has a business model for this.
It is unclear what the market will look like, what the standards are.&lt;/p&gt;
&lt;p&gt;This is the landgrab phase, building market share in a new and emerging market.
Interop is secondary, because the future standards are not yet visible.
Player try to differentiate themselves with features, also to find out which features matter.
All players grow in a growing market.&lt;/p&gt;
&lt;p&gt;As soon as a business model and stable feature lists exists and there is a system for money extraction the market can consolidate.
As always, 3-5 companies will dominate the market, which is dropping out of hypergrowth.
The dominating companies acknowledge their respective existence and roles, and compete semi-cooperatively:
It is more important to erect barriers to entry for disruptors than to destroy the existing competition, and hence there will be complex, hard to implement standards with expensive compliance tests.
This will then, against all wishes, lead to interoperability.&lt;/p&gt;
&lt;h1 id=&#34;metaverse-revised-definition&#34;&gt;
    &lt;a href=&#34;#metaverse-revised-definition&#34;&gt;
	Metaverse, revised definition
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So we get:
The Metaverse is an integration of the gaming industry with the entertainment industry, and the merging of their value chains, optionally extracting a transactional tax at any point of the value chain.
The objective is to monetize the lifetime intellectual consumption budget of any person, and extending the market of products relevant to that person, decoupling spend from attention.&lt;/p&gt;
&lt;p&gt;A main result is that books, films and games bind too much time to consume and limit spend.
3D assets are a better sale binding for less time.&lt;/p&gt;
&lt;p&gt;This is also the backdrop to read &amp;ldquo;Epic vs. Apple and Google&amp;rdquo; properly:
This is about opening the monopolistic markets these companies have for their hardware products, and allow other companies to monetize their walled gardens with their own offerings directly.&lt;/p&gt;
&lt;p&gt;The german outlook is dreary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lacking highspeed, low latency infrastructure for gaming.&lt;/li&gt;
&lt;li&gt;lacking a German company with identity platforms (&amp;ldquo;Login with x&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;lacking resources and companies with 3D asset tooling, production, marketplaces.&lt;/li&gt;
&lt;li&gt;lacking German film/tv/literature IP that can be integrated with any of this, especially on a global scale.&lt;/li&gt;
&lt;li&gt;German companies and culture looks inward, into the own country, not towards a global cultural base.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Compare with Korea: Korean production chains in K-Pop; Korean &amp;ldquo;cultural technology&amp;rdquo; that integrated other cultures styles and art and integrates it into K-Pop; production and grooming pipelines for stars and starlets; emerging similar chains for IP.&lt;/p&gt;
&lt;p&gt;In comparison, Germany counts as unarmed.&lt;/p&gt;
&lt;h2 id=&#34;toxic-dystopic-interpretation&#34;&gt;
    &lt;a href=&#34;#toxic-dystopic-interpretation&#34;&gt;
	Toxic-dystopic interpretation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Property&amp;rdquo; in a simulated reality looks like property, but is virtual and can be duplicated easily.
Virtualization removes resource constraints in production, but &amp;ldquo;value&amp;rdquo; is only created by uniqueness in consumption.&lt;/p&gt;
&lt;p&gt;The platform operators and &amp;ldquo;tax&amp;rdquo; authorities have full market transparency and can meter the time spent and consumption habits of everybody.
They know what you look at and listen to, what you are using, which styles you like and can sell this data for money to creators. They will also sell access to you to creators.&lt;/p&gt;
&lt;p&gt;A friend of mine:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HHOS: in the future at birth of child, you will first have to decide which corporate tribe it joins and then find a name compliant with that tribes rules. Switching between tribes is as complicated as an emigration to or from North Korea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A central building block is also DRM, here under the marketing name of &amp;ldquo;NFT&amp;rdquo;. NFT is the blockchain word for DRM, only with added destruction of the planet.&lt;/p&gt;
&lt;p&gt;Unique things are only possible with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;locking the machine&lt;/li&gt;
&lt;li&gt;TPM,&lt;/li&gt;
&lt;li&gt;in-game only licensed assets and mods usable, and&lt;/li&gt;
&lt;li&gt;NFT Laser Eyes crypto bullshit that burns the planet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this context also the current engagement of Epic in the NFT bull.
Proper standards will be important, and &amp;ldquo;identity&amp;rdquo; is central for &amp;ldquo;property&amp;rdquo;.
This does not need blockchain, and will work better without - the platforms are central anyway.&lt;/p&gt;
&lt;p&gt;My friend, commenting further:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is important to bind these people into this universe (&amp;ldquo;Hyperinclusion&amp;rdquo;).
They buy in the metaverses store, date their partners in metaverse locations, watch ads for products only available in the metaverse, and can hardly formulate metaverse critical thinking.
There is no public space anymore, everything is part of the gated community (cf loss of the almende).&lt;/p&gt;
&lt;p&gt;There may be competition between a small number of metaverses, but within one metaverse there is only managed competition.
That is, the metaverse monopolizes a life in its totality.&lt;/p&gt;
&lt;p&gt;That is a lot like mining towns in the US in the late 19th century.
The shop was owned by the mine, the priest was employed by the mine, and the sheriff and mayor were mine employees.&lt;/p&gt;
&lt;p&gt;Effectively the FB strategy is to make their social media monopoly permanent.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This leads us to&lt;/p&gt;
&lt;h2 id=&#34;currency&#34;&gt;
    &lt;a href=&#34;#currency&#34;&gt;
	Currency
    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Cryptocurrencies have demonstrated to large players that money creation is now &amp;ldquo;up for grabs&amp;rdquo;.
A metaverse is a very good environment to realize that &amp;ldquo;en passant&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again, watch the Epic engagement in crypto for details.
This is problematic:
Metaverse and production in it takes resources from the real world, but does not produce value for the real world.
The real world is getting poorer, but that is where we live.
What does that mean long term for the creation of value and money?&lt;/p&gt;
&lt;h1 id=&#34;material&#34;&gt;
    &lt;a href=&#34;#material&#34;&gt;
	Material
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;URL collection&lt;/p&gt;
&lt;h2 id=&#34;golem-auf-der-suche-nach-dem-wal&#34;&gt;
    &lt;a href=&#34;#golem-auf-der-suche-nach-dem-wal&#34;&gt;
	Golem &amp;ldquo;Auf der Suche nach dem Wal&amp;rdquo;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.golem.de/news/geschaeftsethik-bei-videospielen-auf-der-suche-nach-dem-wal-2110-160163.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Auf der Suche nach dem Wal&lt;/a&gt;

&amp;rdquo;, a video game growth manager (German article).&lt;/p&gt;
&lt;h2 id=&#34;colorado-law-review-dark-patterns&#34;&gt;
    &lt;a href=&#34;#colorado-law-review-dark-patterns&#34;&gt;
	Colorado Law Review Dark Patterns
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Link from the above.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.google.com/url?q=https://lawreview.colorado.edu/printed/when-the-cats-away-techlash-loot-boxes-and-regulating-dark-patterns-in-the-video-game-industrys-monetization-strategies/%23IV_Broad_Guidance_for_Crafting_Effective_Dark_Pattern_Regulation_in_the_Video_Game_Industry&amp;amp;sa=D&amp;amp;source=docs&amp;amp;ust=1635284752797000&amp;amp;usg=AOvVaw30IDuuhFqtcvDbNj32joER&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;When the Cat’s Away: Techlash, Loot Boxes, and Regulating “Dark Patterns” in the Video Game Industry’s Monetization Strategies&lt;/a&gt;

&amp;rdquo;,
Sektion &amp;ldquo;IV. Broad Guidance for Crafting Effective Dark Pattern Regulation in the Video Game Industry&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;matthew-ballhttpstwittercomballmatthew&#34;&gt;
    &lt;a href=&#34;#matthew-ballhttpstwittercomballmatthew&#34;&gt;
	&lt;a href=&#34;https://twitter.com/ballmatthew&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matthew Ball&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.matthewball.vc/all/themetaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Metaverse: What It Is, Where to Find it, Who Will Build It, and Fortnite&lt;/a&gt;

: Original Metaverse Article&lt;/p&gt;
&lt;p&gt;Media side:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the time Netflix launched its streaming service, much of Hollywood knew that the future of television was online (IP TV had been deployed in the late 1999s). The challenge was timing and how to package such a service (it took another 10 years for Hollywood to accept all of their channels, genres and content needs to be collapsed into a single app/brand).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ball writes:&lt;/p&gt;
&lt;p&gt;The Metaverse, we think, will be &amp;hellip;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Persistent.&lt;/li&gt;
&lt;li&gt;Synchronous and live.&lt;/li&gt;
&lt;li&gt;Be without any cap to concurrent users, while also providing each user with an individual sense of “presence”&lt;/li&gt;
&lt;li&gt;Be a fully functioning economy&lt;/li&gt;
&lt;li&gt;Be an experience that spans both the digital and physical worlds, private and public networks/experiences, and open and closed platforms&lt;/li&gt;
&lt;li&gt;Offer unprecedented interoperability of data, digital items/assets, content, and so on across each of these experiences&lt;/li&gt;
&lt;li&gt;Be populated by “content” and “experiences” created and operated by an incredibly wide range of contributors&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Metaverse is not…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A “virtual world”&lt;/li&gt;
&lt;li&gt;A “virtual space”  (2nd life)&lt;/li&gt;
&lt;li&gt;“Virtual reality”&lt;/li&gt;
&lt;li&gt;A “digital and virtual economy”&lt;/li&gt;
&lt;li&gt;A &amp;ldquo;game&amp;rdquo;&lt;/li&gt;
&lt;li&gt;A “virtual theme park or Disneyland”&lt;/li&gt;
&lt;li&gt;A “new app store”&lt;/li&gt;
&lt;li&gt;A “new UGC platform”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That is, of course, nonsense, it will be all of these things, &lt;em&gt;too&lt;/em&gt;.
This is Valley Hype to make the Next Internet sellable, and to have a common tale to tell.
But in the end this is all about the things it is supposedly NOT.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.matthewball.vc/the-metaverse-primer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nine newer longer articles&lt;/a&gt;

 on this.&lt;/p&gt;
&lt;h2 id=&#34;fortnite-loyalty-programhttpstwittercomduddyalan233status1391884040547049473&#34;&gt;
    &lt;a href=&#34;#fortnite-loyalty-programhttpstwittercomduddyalan233status1391884040547049473&#34;&gt;
	&lt;a href=&#34;https://twitter.com/DuddyAlan233/status/1391884040547049473&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fortnite Loyalty Program&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Keep up engagement and interest.
A problem for any MMO:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People don&amp;rsquo;t live in the metaverse, the live here.&lt;/li&gt;
&lt;li&gt;Primary consumption is casual, not high-end gamer.&lt;/li&gt;
&lt;li&gt;That is the weakness of the concept, esp Facebook.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It can only become a Metaverse if it becomes a permanent place.
That&amp;rsquo;s still a long road to travel.&lt;/p&gt;
&lt;p&gt;My VR goggles are sitting around, idle (sold the Oculus because mandatory FB account).
That is, because &amp;ldquo;entering VR&amp;rdquo; is an act (set things up, calibrate), and the goggles isolate (when I put them on, I am &amp;ldquo;gone&amp;rdquo;), and because it is used only by very few games.&lt;/p&gt;
&lt;h2 id=&#34;epic-and-facebook-the-race-called-metaversehttpstwittercomthegamespodcaststatus1450468392952115233&#34;&gt;
    &lt;a href=&#34;#epic-and-facebook-the-race-called-metaversehttpstwittercomthegamespodcaststatus1450468392952115233&#34;&gt;
	&lt;a href=&#34;https://twitter.com/thegamespodcast/status/1450468392952115233&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Epic and Facebook: The Race called Metaverse&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;h2 id=&#34;pastry-eth-threadhttpstwittercompastryethstatus1423803492314009606&#34;&gt;
    &lt;a href=&#34;#pastry-eth-threadhttpstwittercompastryethstatus1423803492314009606&#34;&gt;
	&lt;a href=&#34;https://twitter.com/PastryEth/status/1423803492314009606&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pastry Eth Thread&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Crypto bullshit with a few good ideas, but also illusions/lies about what will happen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;1/5 of FB now working on AR&amp;rdquo;, FB looks at Metaverse as &amp;ldquo;Oculus&amp;rdquo;, &amp;ldquo;VR&amp;rdquo;. That&amp;rsquo;s dangerous tunnel vision.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The &amp;ldquo;Metaverse&amp;rdquo; is a virtual space created by the convergence of virtually enhanced physical reality, AR &amp;amp; the Internet: Our current 2D search based version of the Internet is giving way to a fully 3D immersive reality&amp;rdquo;: bullshit, unless consumption becomes casual. 3D Assets in Pancake Games are easier to sell &amp;ldquo;Cosmetics&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The Metaverse is always “on” &amp;amp; is beyond the control of any individual. It exists in real time, can host any size audience, has a functioning economy, spans across platforms, provides interoperability for digital assets, &amp;amp; consists of the content and experiences its users create.&amp;rdquo; That is 2nd 2nd life as a concept, and  &amp;ldquo;3D Shoppingmalls&amp;rdquo; of the early 90ies revived. As a concept not wrong, and at the same time completely wrong.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;In the Metaverse, the earning power for young creators won’t be limited to the top 1%. There will be an entire new era of young entrepreneurs making a living in virtual worlds, earning real value and steady income quicker than ever imagined.&amp;rdquo; LOL. Mainly this is about a microsoft tax, that will siphon off money from creators along the way.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Creators who were once limited in their ability by technological constraints, lack of capital, time, or creativity, now have everything that is needed. What happens when physical objects are dematerialized? All formerly scarce materials become abundant.&amp;rdquo; LOL. DRM all the way is a requirement to make this work. Also, the permanent promise of creators paradise, when this is really about monopolization of the value chain.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;digital-twinshttpswwwdezeencom20210723digital-twins-metaverse-david-weir-mccall-epic-games&#34;&gt;
    &lt;a href=&#34;#digital-twinshttpswwwdezeencom20210723digital-twins-metaverse-david-weir-mccall-epic-games&#34;&gt;
	&lt;a href=&#34;https://www.dezeen.com/2021/07/23/digital-twins-metaverse-david-weir-mccall-epic-games/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Digital Twins&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Digital twins will act as &amp;ldquo;foundations of the metaverse&amp;rdquo; and allow people to move between real and virtual spaces&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again &amp;ldquo;2nd 2nd Life&amp;rdquo;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Skeuomorph&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Skeumorphism&lt;/a&gt;

 is what we do with new tech that does not yet have its own design language. The first cars looked like coaches, and the first Apple applications mimicked Rolodexes and Moleskines. &amp;ldquo;Digital Twins&amp;rdquo; is the same thing.&lt;/p&gt;
&lt;p&gt;Core idea:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;In April 2020, music artist Travis Scott staged a virtual concert inside the game that was attended live by 12.3 million people. It was a global phenomenon that sent the American rapper to the top of all music charts and earned him a reported $20 million.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Read: &amp;ldquo;OMG, somebody has used a children&amp;rsquo;s battle royale to earn money without shooting players, but with traditional media work.&amp;rdquo;, and we are back to &amp;ldquo;all the ideas of 2nd life we know are problematic may still be valid again&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;If the metaverse is an equivalent reality that coexists next to the physical reality, there needs to be a connection,&amp;rdquo; said Weir-McCall.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Does not need that at all. If, then more likely as AR than as 3D models, because connections to the real world is what you lose with 3D VR goggles. Casual is king.&lt;/p&gt;
&lt;h2 id=&#34;facebook-glasshttpswwwreuterscomtechnologyfacebook-unveils-its-first-smart-glasses-2021-09-09-and-acceptance&#34;&gt;
    &lt;a href=&#34;#facebook-glasshttpswwwreuterscomtechnologyfacebook-unveils-its-first-smart-glasses-2021-09-09-and-acceptance&#34;&gt;
	&lt;a href=&#34;https://www.reuters.com/technology/facebook-unveils-its-first-smart-glasses-2021-09-09/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Facebook Glass&lt;/a&gt;

 and acceptance
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Google Goggle were identifiable and their users vilified as glassholes.
Facebook is using Ray Bay to cover that.
There is no technical relationship between Oculus and AR.
This is about hiding the tech in the goggles to make it acceptable, and prevent a Facebook glasshole effect.
Also, AR is more casual than VR.
Fashion also allows easier re-sales of the same item, see also Apple Watch accessories.&lt;/p&gt;
&lt;h2 id=&#34;laser-eyeshttpstwittercomcryptomarsmoonstatus1448249433573904384&#34;&gt;
    &lt;a href=&#34;#laser-eyeshttpstwittercomcryptomarsmoonstatus1448249433573904384&#34;&gt;
	&lt;a href=&#34;https://twitter.com/Cryptomarsmoon/status/1448249433573904384&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Laser Eyes&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s gonna be epic to bring the squid game to the metaverse. Salute to your team! I am a big fan of the TV series. I am super excited to have a chance to participate in this game! LFG!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More Laser Eyes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metaverse</title>
      <link>https://blog.koehntopp.info/2021/10/26/metaverse.html</link>
      <pubDate>Tue, 26 Oct 2021 20:55:51 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/26/metaverse.html</guid>
      <description>&lt;p&gt;Ich &lt;a href=&#34;https://twitter.com/isotopp/status/1450739310546886657&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;schrieb auf Twitter&lt;/a&gt;

 was zum aktuellen Begriff &amp;ldquo;Metaverse&amp;rdquo;.
Das hat zu einem Kontakt mit &lt;a href=&#34;https://twitter.com/michacarl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Michael Carl&lt;/a&gt;

 geführt, der mich in seinem &lt;a href=&#34;https://carls-zukunft.de/folge-58-how-to-build-a-metaversum-in-three-simple-steps/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Podcast&lt;/a&gt;

 haben wollte.
Meine &lt;a href=&#34;https://docs.google.com/document/d/1_OIl_bcrjVczLQrMrVnt5IoYbitp1504mb2GbQK0EM4/edit#heading=h.wbe6wnc7fg59&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gesprächsnotizen und Vorbereitung&lt;/a&gt;

 habe ich nun auch hier:&lt;/p&gt;
&lt;h1 id=&#34;metaverse&#34;&gt;
    &lt;a href=&#34;#metaverse&#34;&gt;
	Metaverse
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Der Begriff &amp;ldquo;Metaverse&amp;rdquo; stammt ursprünglich von Neal Stephenson, aus dem Jahre 1992, aber er ist im aktuellen Kontext von Matthew Ball in &lt;a href=&#34;https://www.matthewball.vc/all/themetaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Metaverse: What It Is, Where to Find it, Who Will Build It, and Fortnite&lt;/a&gt;

 mit Sinn gefüllt worden. Ball hat dann später &lt;a href=&#34;https://www.matthewball.vc/the-metaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mehr zum Thema&lt;/a&gt;

 geschrieben, und so den aktuellen Silicon Valley Hype erzeugt.&lt;/p&gt;
&lt;p&gt;Die Überlegung beginnt mit Spielen, die nicht mehr sind, was sie mal waren, sondern irgendwie mehr geworden sind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fortnite von Epic Games, in der nun auch Nicht-Fortnite-Aktivitäten stattfinden,&lt;/li&gt;
&lt;li&gt;Roblox, eine Plattform zur spielerischen Generierung von Computerspielen, und&lt;/li&gt;
&lt;li&gt;Minecraft in der Java- und der Bedrock-Edition, um zu zeigen, wie beides auf seine Weise unternehmerische Fehlschläge sind.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fortnite&#34;&gt;
    &lt;a href=&#34;#fortnite&#34;&gt;
	Fortnite
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Fortnite war mal Battle Royale, aber ist inzwischen auch eine &amp;ldquo;Veranstaltungsplattform&amp;rdquo;, man kann dort Skins kaufen, Partnerschaften mit anderem IP, zum Beispiel Marvel/DC Super Heroes.
Leute haben dort Konzerte gegeben oder andere Veranstaltungen durchgeführt.
Epic unterstützt das, recht offen, weil es Fortnite so auch bei Leuten bekannt macht, die an Battle Royal und Gamer-Kultur nicht primär interessiert sind.&lt;/p&gt;
&lt;p&gt;Epic Games macht auch die Unreal Engine, und die dazu gehörenden Pipelines zum Erstellen und Editieren von digitalen Game-Assets, betreibt einen Markt für diese Dinge und baut auch sonst eine lebendige Infrastruktur zur Spielerzeugung und zur Vermarktung auf.
Gewissermaßen ist dies die unsichtbare &amp;ldquo;Rückseite&amp;rdquo; von Spielen.&lt;/p&gt;
&lt;h2 id=&#34;roblox&#34;&gt;
    &lt;a href=&#34;#roblox&#34;&gt;
	Roblox
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Ganz ähnlich, aber viel mehr casual betreibt Roblox sowieso eine Plattform zur Erzeugung von Spielen, und macht so Assets, aber auch einen Markt für Assets.
Roblox ist vor allen Dingen bei jungen und sehr jungen Menschen populär, und wird bei älteren Menschen weit unterschätzt.&lt;/p&gt;
&lt;h2 id=&#34;minecraft-in-zwei-geschmacksrichtungen&#34;&gt;
    &lt;a href=&#34;#minecraft-in-zwei-geschmacksrichtungen&#34;&gt;
	Minecraft in zwei Geschmacksrichtungen
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Minecraft ist ein Klassiker: Das originale Minecraft ist in Java geschrieben und inzwischen komplett durch Komponenten von Drittherstellern ersetzbar. Es gibt alternative Clients, alternative Server, alternative Assets.
Das Spiel ist schlecht: Es ist eine Sandbox ohne viel Story und ohne Spielziel mit primitiver Grafik, die originalen Server sind langsam und fehlerhaft.&lt;/p&gt;
&lt;p&gt;Aber die Grafik ist simpel, sodass das Spiel auch auf abgelegten Kartoffelcomputern funktioniert.
Es ist alles in Java geschrieben, das sich leicht reversen und dann unkooperativ erweitern lässt, und so gibt es eine reichhaltige Community mit Moddern, Server- und Client-Plugins, und vielen anderen Erweiterungen.
Das macht das Spiel populär und zu einer &amp;ldquo;Einstiegsdroge&amp;rdquo; in die Java-Programmierung bei jungen Menschen, weil es ein unglaubliches Potenzial für Selbstmotivation bietet.&lt;/p&gt;
&lt;p&gt;Nichts davon ist durch den derzeitigen Eigentümer Microsoft monetarisierbar.
Als IP ist Minecraft für Microsoft gescheitert, weil Microsoft nach dem Kauf des Spiels nicht mehr Teil der Verwertungskette ist.&lt;/p&gt;
&lt;p&gt;Daher gibt es von Microsoft &amp;ldquo;Minecraft Bedrock Edition&amp;rdquo;, performanter und besser designt, und von Grund auf mit einem Asset-Markt integriert.
Erweiterungen für Bedrock sind im Laden kaufbar, und nur dort.
Man muss als Anbieter IP von Microsoft lizenzieren und dann Prozente zahlen, als Kunde sowieso.
Bei den Spielern ist es deswegen kaum populär, steril und ohne eigene Kultur.
Im Vergleich zu Java Edition noch ein größerer Fehlschlag.&lt;/p&gt;
&lt;p&gt;Das Bedrock-Modell ist vergleichbar mit dem Apple Entwicklermodell, aber kleiner im Scope:
Man kann nicht ernsthaft für Apple entwickeln ohne Apple-ID, Entwickler-Lizenz, Cloud-Nutzung für Handover und Storage und ohne Prozente im Apple Store zu bezahlen.
Bedrock ist danach modelliert, aber halt kein Computer-Tablet-ökosystem, sondern nur ein Spiel.&lt;/p&gt;
&lt;h1 id=&#34;metaverse-eine-erste-definition&#34;&gt;
    &lt;a href=&#34;#metaverse-eine-erste-definition&#34;&gt;
	Metaverse: Eine erste Definition
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Die tatsächliche Definition von &amp;ldquo;Metaverse&amp;rdquo; sind also nicht 3D-Brillen, sondern &amp;ldquo;die Integration der Computerspieleindustrie mit der Wertschöpfungskette der Unterhaltungsindustrie für einen offenen, digitalen Assetmarkt&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Oder offener: Das Anzapfen der Spieleverwertungskette an jeder Stelle im Produktionsfluß, und das Aufwerten der Spieleverwertungskette durch Integration mit Intellectual Property aus Filmen und Büchern.&lt;/p&gt;
&lt;p&gt;Es geht also darum, aus dem Lebenszeit-Konsum-Budget einer Person mehr Geld herauszuziehen, ohne zu viel Lebenszeit bei dieser Person zu verbrauchen, also um eine Aufweitung von Ausgaben für &amp;ldquo;Medien&amp;rdquo; im aller weitesten Sinne.&lt;/p&gt;
&lt;h2 id=&#34;budgets-für-aufmerksamkeit-und-geld&#34;&gt;
    &lt;a href=&#34;#budgets-f%c3%bcr-aufmerksamkeit-und-geld&#34;&gt;
	Budgets für Aufmerksamkeit und Geld
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Menschen haben Geldlimits für ihre Freizeit, der &lt;a href=&#34;https://de.wikipedia.org/wiki/Verf%C3%BCgbares_Einkommen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Konsumanteil des verfügbaren Einkommens&lt;/a&gt;

.
Sie haben auch Zeitlimits für ihre Freizeit, ein Budget für Aufmerksamkeit.
Beides ist konvertibel, aber das hängt am Medium.&lt;/p&gt;
&lt;p&gt;Nimmt man eine nützliche Lebenszeit, in der ich &amp;ldquo;Lesen&amp;rdquo; kann von 60 Jahren an, und unterstellt man einem fleißigen Leser 40 Bücher (eines pro Woche) im Jahr, dann wird diese Person in ihrem Leben 2400 Bücher lesen, im Wert von sagen wir ~30 Euro pro Stück.&lt;/p&gt;
&lt;p&gt;Arbeitet man mit Computerspielen der AAA-Klasse, dann schafft man eventuell 4-6 Spiele im Jahr sinnvoll durchzuspielen, also im Leben 240-300 Titel, im Wert von ~60 Euro pro Stück.&lt;/p&gt;
&lt;p&gt;Das setzt eine Größenordnung von Lebensumsatz pro Person für diese Dinge, also ~70k Euro in Büchern oder 20k Euro in Spielen pro Personenleben.&lt;/p&gt;
&lt;p&gt;Wir sehen insbesondere, daß Spiele im Vergleich zu ihrem Produktionsaufwand viel zu billig sind, aber ein höherer Preis als 60 Euro ist auch für einen AAA-Titel nicht durchsetzbar.
Das ist einer der Gründe, warum in jedem einzelnen dieser Spiele weitere Möglichkeiten zum Geldausgeben enthalten sind.&lt;/p&gt;
&lt;p&gt;Generell ist es aber bei beiden Medien so, daß das Geldausgeben im Vergleich zu der aufgewendeten Zeit zu langsam ist:
Die Burnrate muss hoch.
Bücher, aber auch Filme und insbesondere AAA-Titel von Computerspielen sind viel zu werthaltig, und ihr Konsum ist zu aufwendig.
Wir suchen was anderes, bei dem nicht so viele Minuten Lebenszeit pro ausgegebenem Euro aufgewendet werden müsse.&lt;/p&gt;
&lt;p&gt;Das ist kritisch, weil es ja auch noch viele freie Inhalte gibt, die auch um Aufmerksamkeit buhlen und &amp;ldquo;gut genug&amp;rdquo; sind, um bezahlte Inhalte zu verdrängen.
Sie kosten Minuten Aufmerksamkeit, ohne Geld zu verdienen.&lt;/p&gt;
&lt;h2 id=&#34;nebenschauplatz-sterben-und-erben&#34;&gt;
    &lt;a href=&#34;#nebenschauplatz-sterben-und-erben&#34;&gt;
	Nebenschauplatz: Sterben und Erben
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Angesichts der alternden Bevölkerung gibt es auch noch den Nebenschauplatz &amp;ldquo;Boomer sterben, Kinder erben&amp;rdquo;.
Ich habe zum Beispiel genau jetzt ca. 600 Steam Titel und 1000 Kindle Books.
Wenn ich sterbe, sind das einige 10k Euro Wert.
Wie vererbe ich die meinem Sohn?
Die Politik hat keine Antworten, und die Hersteller lassen das nicht zu.
Ich kann meinem Kind also nur mein Steam Login vermachen und von meinen Kindle-Büchern das DRM knacken.&lt;/p&gt;
&lt;p&gt;Wirtschaftlich sind Kindle und Steam-Erbschaften für die Hersteller weitgehend irrelevant, oder wären sogar positiv, und es ist unklar, wieso man sich so sträubt:&lt;/p&gt;
&lt;p&gt;Wenn ein Haus am See erbe, kann ich da hereingehen, die Veranda aufschließen, in den Park gehen und so das Asset genießen.
Das kostet mich nicht viel Zeit.&lt;/p&gt;
&lt;p&gt;Erbe ich dagegen eine Kindle- oder Steam-Library, kostet mich das viel Zeit in der Erschließung:
Wenn ich 1200 Bücher erbe, sind das 30 Jahre Lebenszeit, die ich investieren muss, um das Erbe zu verarbeiten.
Wenn ich 1000 Spiele erbe, sind da Titel von 2002 bei, die heute wie Dreck aussehen.
Ich erbe &amp;ldquo;Skyrim&amp;rdquo;, muss aber &amp;ldquo;Skyrim VR&amp;rdquo; und &amp;ldquo;Skyrim Remastered&amp;rdquo; selbst kaufen.&lt;/p&gt;
&lt;p&gt;Wir sehen sofort: Erben ist für den Hersteller kein relevanter Umsatzverlust, sondern eher noch ein Mittel zur Verkaufsförderung.&lt;/p&gt;
&lt;h2 id=&#34;assets-hoher-geldaufwand-geringer-zeitaufwand&#34;&gt;
    &lt;a href=&#34;#assets-hoher-geldaufwand-geringer-zeitaufwand&#34;&gt;
	Assets: hoher Geldaufwand, geringer Zeitaufwand
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bereits heute ist in Spielen neben Lootboxen und Pay-to-Win und Pay-to-Skip Modellen der Verkauf von Cosmetics eine der größten Einnahmequellen, und im Gegensatz zu den anderen Geldquellen weitgehend unumstritten.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay-to-Win: Das Spiel ist nicht erfolgreich zu beenden, außer man kauft Ausrüstungsgegenstände für Echtgeld dazu. Idealerweise wird das erst sichtbar, wenn man bereits eine Menge Zeit und Emotion in das Spiel investiert hat.&lt;/li&gt;
&lt;li&gt;Pay-to-Skip: Das Spiel wird immer wieder durch ärgerliche Wartepausen unterbrochen, in denen man nicht weiterspielen kann, außer man kauft die Pause durch Echtgeld weg.&lt;/li&gt;
&lt;li&gt;Lootboxen: Das Spiel verkauft einem Container einem zufälligen Inhalt an Spielgegenständen, bei denen selten wertvolle Dinge enthalten sind. Das eigentliche Spiel ist also eine Verpackung für ein Glücksspiel im Inneren. Diese Praxis ist mittlerweile in einigen EU-Ländern verboten.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Im Gegensatz dazu sind Cosmetics weitgehend unumstritten: Das sind Gegenstände, die der Spielfigur und ihrer Ausrüstung ein anderes Aussehen geben, ein virtuelles Haus und seine Einrichtung, die auf das Spiel keine wesentliche Auswirkung haben und ähnliches.&lt;/p&gt;
&lt;p&gt;Im Spiel &amp;ldquo;Elder Scrolls Online&amp;rdquo; zum Beispiel bekommt man als Spieler leicht und zu geringen Kosten virtuelle Wohnhäuser in der Spielwelt, die sehr spektakulär liegen und aussehen und viel leeren Platz bieten.
Gegenstände zum Einrichten kann man sich als Trophäen erspielen, aber wesentliche Alltagsgegenstände zur Einrichtung sind nur via Echtgeld-Einsatz im Shop zu kaufen.&lt;/p&gt;
&lt;p&gt;Das für den Hersteller wunderbare dabei:
Der Spieler kann in den Kauf von Cosmetics beliebig viel Geld reinpumpen und wird dabei kaum Lebenszeit oder Aufmerksamkeit aufbringen müssen.
Limitierend kann also nur die Geldbörse des Kunden wirken, nicht aber sein Zeitbudget.
Das macht so etwas zu einem viel besseren Geschäftsfeld als Bücher, Filme oder die Spiele selbst.
Das Spiel liefert nur den Kontext und Anlass für die Cosmetics zu existieren und bestimmt ihr Aussehen.&lt;/p&gt;
&lt;h2 id=&#34;epic-games&#34;&gt;
    &lt;a href=&#34;#epic-games&#34;&gt;
	Epic Games
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Dies ist genau die Geschäftsgrundlage von Epic Games:
Mit der Unreal Engine bietet die Firma eine Plattform zum schnellen und effizienten Design von sehr gut aussehenden Videospielen.
Dazu gehören auch Werkzeuge zum Erzeugen der Ingame-Assets, aber auch der Betrieb einer Verkaufsplattform für solche Assets an Spielhersteller.
Mit dem Epic Launcher und dem darin integrierten Shop auch eine Plattform zum Verkauf von Spielen, und zum Erfassen von Meta- und Nutzungsdaten an Epic, die dann wiederum (gegen Geld) dem Spielhersteller als Analytics angeboten werden.
Das von Epic betriebene Payment-System ist die Pipeline, über die Geld vom Kunden zum Spielhersteller fließen kann, und über die nicht nur die Spiele, sondern auch Erweiterungen, In-Game Käufe und andere Geldausgaben abgewickelt werden können.&lt;/p&gt;
&lt;p&gt;Mit Fortnite hat man aber auch ein eigenes Spiel am Start, das zugleich auch 3D Assets an Endkunden als Ausrüstungsgegenstände, Cosmetics oder sonst wie verkaufen kann.&lt;/p&gt;
&lt;p&gt;Fortnite ist eine bestimmte Sorte Spiel - Player vs. Player, im Battle Royal Modus, Spieler treten gegeneinander an und der letzte Überlebende gewinnt.
Diese Sorte Spiel ist nicht für alle Zielgruppen interessant, aber die Engine von Fortnite lässt sich auch anderweitig nutzen.
Entsprechend weckt man Interesse durch Nutzung von Fortnite als &amp;ldquo;virtuelle Veranstaltungsplattform&amp;rdquo; und hält das Interesse durch Media Tie-Ins und Licensed IP aufrecht.&lt;/p&gt;
&lt;p&gt;Die Interpretation von Metaverse als Verwertungskette von digitalen Assets, speziell 3D Assets, als &amp;ldquo;Online-Merchandise&amp;rdquo; greift jedoch zu kurz:
Als Ökosystem mit einer kontrollierten Anzahl von großen Marktbetreibern und einer großen Anzahl von Kunden und Kreativen steht man viel besser und vor allen Dingen dauerhafter da.
Man kann Dritten auf diese Weise erlauben, untereinander Handel zu treiben, aber dabei laufend einen geringen Anteil an allen Transaktionen abgreifen.
Gewissermaßen will man die Idee der &amp;ldquo;Microsoft-Tax&amp;rdquo; in einem anderen Kontext wieder aufleben lassen.&lt;/p&gt;
&lt;h1 id=&#34;spieler-am-markt&#34;&gt;
    &lt;a href=&#34;#spieler-am-markt&#34;&gt;
	Spieler am Markt
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Unterschiedliche Ausgangspositionen bei&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Epic Games/Fortnite - schwach bei IP, aber original IP, wenn auch Nische, Unreal Engine und die anderen Dinge auf der &amp;ldquo;Rückseite&amp;rdquo; der Spiele als große Stärke.&lt;/li&gt;
&lt;li&gt;Roblox - original IP, sehr junge Kundschaft, erzieht sich gerade Kinder, 10 Jahre warten, groß unterschätzt.&lt;/li&gt;
&lt;li&gt;Microsoft - Minecraft, MS Store et al, zu Enterprise um erfolgreich zu sein? Aber Halo, MSFS.&lt;/li&gt;
&lt;li&gt;Apple (sic!) - kein IP, aber Plattform/Kette.&lt;/li&gt;
&lt;li&gt;Disney (sic!) - nur IP, aber schwach in Verwertung außerhalb von Filmen/offline Merchandise.&lt;/li&gt;
&lt;li&gt;Facebook - will da unbedingt rein, &amp;ldquo;Enterprise Pivot&amp;rdquo;: wenn Social in Zukunft &amp;ldquo;hier&amp;rdquo; stattfindet, dann muss Facebook &amp;ldquo;hier&amp;rdquo; sein.&lt;/li&gt;
&lt;li&gt;Google - insbesondere der Grund, wieso Google Stadia nicht wirklich einstellen kann, selbst wenn es ein Flop wird/ist.&lt;/li&gt;
&lt;li&gt;Amazon - hier ist auch die Spiele Strategie von Amazon mit einordnen. Amazon wäre gerne das AWS der Spielewelt anstelle von Epic.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tech-maturity-cycle-und-standards&#34;&gt;
    &lt;a href=&#34;#tech-maturity-cycle-und-standards&#34;&gt;
	Tech Maturity Cycle und Standards
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cynefin_framework&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cynefin&lt;/a&gt;

 als Market Maturity Model.&lt;/p&gt;
&lt;p&gt;Wir sind derzeit in einer chaotischen Phase der Marktentwicklung:
Niemand hat ein Geschäftsmodell in diesem Markt, es ist unklar, wie dieser überhaupt aussehen wird.
Standards existieren noch nicht.&lt;/p&gt;
&lt;p&gt;Es geht um Landgrab, also um den Aufbau von Marktanteilen in einem entstehenden und wachsenden Markt.
Interop ist sekundär, weil noch keine Idee vorhanden ist, wie die Standards aussehen werden.
Man versucht sich vom Mitbewerb durch Features zu differenzieren, und dabei auch herauszufinden, was wichtig ist.
Alle Spieler wachsen in einem wachsenden, entstehenden Markt.&lt;/p&gt;
&lt;p&gt;Sobald es ein Geschäftsmodell, stabile Featurelisten und ein System zur Geldextraktion gibt, wird sich der Markt konsolidieren.
Dann beherrschen 3-5 Firmen den Markt, der auch aus dem Hyperwachstum heraus geht.
Die marktbeherrschenden Firmen erkennen einander an und konkurrieren semi-kooperativ miteinander:
Es ist wichtiger, den Marktzugang von Disruptoren zu erschweren, und es wird komplexe, schwierig zu implementierende Standards geben, mit Compliance Prüfungen und anderen Kostenfaktoren.
Das wird dann aber auch - zähneknirschend - zu Interoperabilität führen.&lt;/p&gt;
&lt;h1 id=&#34;metaverse-überarbeitete-definition&#34;&gt;
    &lt;a href=&#34;#metaverse-%c3%bcberarbeitete-definition&#34;&gt;
	Metaverse, überarbeitete Definition
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Das führt uns zur überarbeiteten Definition von Metaverse:
Die Integration der Spieleindustrie mit der Unterhaltungsindustrie und die Integration der Wertschöpfungsketten, mit der Möglichkeit die Verwertungskette an jeder Stelle im Produktionsfluß mit einer Art Steuer zu belegen.
Ein systematisches Anzapfen des Lifetime Intellectual Property-Konsumbudgets einer Person, und die Aufweitung des Marktes, der für einen Konsumenten relevant ist.&lt;/p&gt;
&lt;p&gt;Die Erkenntnis, daß Buch, Filme und Spiele zu zeitaufwendig zu erstellen und zu konsumieren sind.
3D Assets ist viel größere Verkaufsgelegenheit, ohne daß der Kunde so viel Lebenszeit investieren muss, um tatsächlich den Kauf zu konsumieren.&lt;/p&gt;
&lt;p&gt;Vor diesem Hintergrund ist auch die laufende Auseinandersetzung von Epic vs. Apple und Google vor Gericht zu lesen: Es geht darum, das Anzapf-Monopol von Apple und den von Apple dominierten Markt für andere zu Öffnen zu unterminieren.&lt;/p&gt;
&lt;p&gt;Besondere deutsche Probleme dabei:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;keine Infrastruktur für Highspeed, Low Latency wie man das für Spiele braucht.&lt;/li&gt;
&lt;li&gt;keine deutsche Firma mit nennenswerter Identity Plattform (web.de? T-Online? &amp;ldquo;Login mit x&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;keine deutschen Ressourcen im 3D-Asset Tooling, Produktion, &amp;hellip; Markt.&lt;/li&gt;
&lt;li&gt;keine deutsche Film/Fernseh/Lit Industrie zur Produktion von IP, Stories, die weltweit wiedererkennbare Kultur prägen, die man verkaufen kann.&lt;/li&gt;
&lt;li&gt;Deutscher Blick geht nach innen, ins eigene Land, nicht auf einen Weltmarkt.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vergleiche dabei Korea: koreanische Produktionsketten in K-Pop; die &amp;ldquo;cultural technology&amp;rdquo; die andere Stile und Kunstrichtungen aufgreift und in K-Pop integriert; Produktionspipelines für Stars und Sternchen, aber auch für IP (beginnend).
Im Vergleich ist Deutschland essenziell wehrlos und angehängt.&lt;/p&gt;
&lt;h2 id=&#34;toxisch-dystopische-interpretation&#34;&gt;
    &lt;a href=&#34;#toxisch-dystopische-interpretation&#34;&gt;
	Toxisch-dystopische Interpretation
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Das &amp;ldquo;Eigentum&amp;rdquo; in einer simulierten Realität sieht aus wie Eigentum, ist aber virtuell und kopierbar.
Es kommt im virtuellen zur einer Entfernung von Ressourcenknappheit bei der Produktion, aber &amp;ldquo;Wert&amp;rdquo; entsteht nur, wenn die Ware künstlich verknappt wird beim Konsum.&lt;/p&gt;
&lt;p&gt;Die Zollhaus-Stellen, Plattformbetreiber haben volle Markttransparenz, und können das Freizeit-Konsumverhalten jeder Person genau ausmessen.
Sie wissen, was Du siehst und hörst, was Du benutzt, welche Stile Dir zusagen und können diese Information gegen Geld an Kreative verkaufen, und verkaufen den Kreativen auch gegen Geld den Zugang zu Dir.&lt;/p&gt;
&lt;p&gt;Ein Freund von mir:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nur ein halber Witz: man muss in Zukunft bei Geburt eines Kindes als Erstes entscheiden muss, ob es Apple-, Google- oder Facebook-Angehöriger wird und der Name erst danach entsprechend den Regeln des Dienstes festgelegt wird. Wechsel zwischen den Services ist dann komplex wie eine Emigration nach Nordkorea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Zentraler Bestandteil bezüglich der Verknappung auch DRM, hier unter dem Modenamen &amp;ldquo;NFT&amp;rdquo; - &amp;ldquo;NFT&amp;rdquo; ist das Blockchain Wort für DRM, nur zusätzlich mit Umweltvergiftung durch Energieverschwendung.
Unikate gibt es nur mit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rechner zunageln,&lt;/li&gt;
&lt;li&gt;TPM,&lt;/li&gt;
&lt;li&gt;in-game nur lizenzierte Assets und Mods verwendbar, und&lt;/li&gt;
&lt;li&gt;NFT Laser Eyes Kryptoscheisse, die den Planeten verbrennt.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In diesem Kontext ist auch das aktuelle Engagement von Epic im NFT Misthaufen zu lesen sehen.
Daher: korrekte Standards sind wichtig, und Identität ist die Grundlage für &amp;ldquo;Eigentum&amp;rdquo;.
Das braucht nicht nur keine Blockchain, es funktioniert auch besser ohne - die Plattformen sind eh zentral.&lt;/p&gt;
&lt;p&gt;Der Freund kommentiert wieder:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Es geht darum, dass die Leute aus dem Universum nicht rauskommen können (Stichwort: Hyperinklusion).
Sie kaufen in Metaverse-Shops, daten ihre Partner in Metaverse-Locations, sehen nur noch Werbung für im Metaverse verfügbare Waren, können Metaverse-kritische Gedanken kaum noch formulieren.
Es gibt keinen Public-Space mehr im Leben, alles ist Teil der gated community (Vgl. Verlust der Almende).&lt;/p&gt;
&lt;p&gt;Du hast vielleicht noch einen Wettbewerb zwischen x Metaversen, aber innerhalb eines Metaversums gibt es dann einen oder nur noch einen gesteuerten Wettbewerb.
D.h. das Metaversum monopolisiert den Menschen in seiner Gesamtheit.&lt;/p&gt;
&lt;p&gt;Das ist ein bisschen wie die Minenstädte in den USA Ende des 19. Jhd.
Der Shop gehörte der Mine, der Pfarrer arbeitete für die Mine, die Mine stellte Sheriff und Bürgermeister.&lt;/p&gt;
&lt;p&gt;Effektiv will FB durch das Metaversum ihr gegenwärtiges Social-Media-Monopol verewigen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das führt thematisch zur Geldtheorie:&lt;/p&gt;
&lt;h2 id=&#34;currency&#34;&gt;
    &lt;a href=&#34;#currency&#34;&gt;
	Currency
    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Durch die CryptoCurrencies ist für die großen jetzt klar, dass die Geldschöpfung &amp;ldquo;up for the grabs&amp;rdquo; ist. Ein Metaversum wäre der perfekte Ansatz das &amp;ldquo;en passant&amp;rdquo; zu realisieren.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;An dieser Stelle kommt dann gleich wieder das Epic Engagement bei &amp;ldquo;Cryptocurrentcies&amp;rdquo; zum Tragen.
Das ist sehr problematisch:
Metaversum und Produktion dort nimmt nur Ressourcen aus der realen Welt, produziert dort aber nicht.
Am Ende wird die reale Welt ärmer, dort leben wir aber.
Was heißt das langfristig für Wertschöpfung und Geld?&lt;/p&gt;
&lt;h1 id=&#34;material&#34;&gt;
    &lt;a href=&#34;#material&#34;&gt;
	Material
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;URL-Sammlung&lt;/p&gt;
&lt;h2 id=&#34;unsortierte-seitenlinien&#34;&gt;
    &lt;a href=&#34;#unsortierte-seitenlinien&#34;&gt;
	Unsortierte Seitenlinien
    &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Immature Market, Geschäftsmodell existiert noch nicht als erprobter Business Plan (Cynefin Chaotic)&lt;/li&gt;
&lt;li&gt;Einzelne Firmen weiter (Liste oben), Cynefin Complex&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alle Firmen unvollständig aufgestellt. Akquise schwierig, wen kaufen? Und die zu kaufenden Firmen sind selbst noch nicht fertig: Integration auch schwierig.&lt;/p&gt;
&lt;h2 id=&#34;golem-auf-der-suche-nach-dem-wal&#34;&gt;
    &lt;a href=&#34;#golem-auf-der-suche-nach-dem-wal&#34;&gt;
	Golem &amp;ldquo;Auf der Suche nach dem Wal&amp;rdquo;
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.golem.de/news/geschaeftsethik-bei-videospielen-auf-der-suche-nach-dem-wal-2110-160163.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Auf der Suche nach dem Wal&lt;/a&gt;

&amp;rdquo;, Videospiele Growth Manager, ein Bericht. Richtige Richtung, zu kurz, erklärt aber die Kette.&lt;/p&gt;
&lt;p&gt;Im Gegensatz zu einem typischen Videospiel, bei dem man versucht, so viele Leute wie möglich dazu zu bringen, einmalig 60 Dollar für ein Spiel auszugeben, will ein Free-to-Play Spiel so viele Leute wie möglich zum Spielen zu animieren. Sobald sie spielen, bemüht sich das Unternehmen, so viele digitale Güter wie möglich an sie zu verkaufen. Es gibt zwar eine Obergrenze dafür, wie viel man für ein Spiel verlangen kann, aber es gibt keine Obergrenze für die Zahl an sinnlosen digitalen Tokens, die man verhökern kann.&lt;/p&gt;
&lt;p&gt;Metaverse: Industrialisiere diesen Prozess und mainstreame ihn. Aspekte: Spielen nach Termin, Pay to Skip, Pay to Win.&lt;/p&gt;
&lt;h2 id=&#34;colorado-law-review-dark-patterns&#34;&gt;
    &lt;a href=&#34;#colorado-law-review-dark-patterns&#34;&gt;
	Colorado Law Review Dark Patterns
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Link aus dem oa Golem Artikel.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.google.com/url?q=https://lawreview.colorado.edu/printed/when-the-cats-away-techlash-loot-boxes-and-regulating-dark-patterns-in-the-video-game-industrys-monetization-strategies/%23IV_Broad_Guidance_for_Crafting_Effective_Dark_Pattern_Regulation_in_the_Video_Game_Industry&amp;amp;sa=D&amp;amp;source=docs&amp;amp;ust=1635284752797000&amp;amp;usg=AOvVaw30IDuuhFqtcvDbNj32joER&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;When the Cat’s Away: Techlash, Loot Boxes, and Regulating “Dark Patterns” in the Video Game Industry’s Monetization Strategies&lt;/a&gt;

&amp;rdquo;,
Sektion &amp;ldquo;IV. Broad Guidance for Crafting Effective Dark Pattern Regulation in the Video Game Industry&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Es gibt eine Feedbackschleife zwischen den Spieldesignern und dem Wal (der Person, die sinnlos investiert):
Ungesund für beide Seiten, macht das Spiel schnell zu einem Spiel für wenige Vielzahler, und damit langfristig global schlecht; besondere Herausforderung beim Produktmanagement.&lt;/p&gt;
&lt;h2 id=&#34;matthew-ballhttpstwittercomballmatthew&#34;&gt;
    &lt;a href=&#34;#matthew-ballhttpstwittercomballmatthew&#34;&gt;
	&lt;a href=&#34;https://twitter.com/ballmatthew&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matthew Ball&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.matthewball.vc/all/themetaverse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Metaverse: What It Is, Where to Find it, Who Will Build It, and Fortnite&lt;/a&gt;

: Original Metaverse Article&lt;/p&gt;
&lt;p&gt;Medienseite:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the time Netflix launched its streaming service, much of Hollywood knew that the future of television was online (IP TV had been deployed in the late 1999s). The challenge was timing and how to package such a service (it took another 10 years for Hollywood to accept all of their channels, genres and content needs to be collapsed into a single app/brand).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ball schreibt:&lt;/p&gt;
&lt;p&gt;The Metaverse, we think, will be &amp;hellip;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Persistent.&lt;/li&gt;
&lt;li&gt;Synchronous and live.&lt;/li&gt;
&lt;li&gt;Be without any cap to concurrent users, while also providing each user with an individual sense of “presence”&lt;/li&gt;
&lt;li&gt;Be a fully functioning economy&lt;/li&gt;
&lt;li&gt;Be an experience that spans both the digital and physical worlds, private and public networks/experiences, and open and closed platforms&lt;/li&gt;
&lt;li&gt;Offer unprecedented interoperability of data, digital items/assets, content, and so on across each of these experiences&lt;/li&gt;
&lt;li&gt;Be populated by “content” and “experiences” created and operated by an incredibly wide range of contributors&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Metaverse is not…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A “virtual world”&lt;/li&gt;
&lt;li&gt;A “virtual space”  (2nd life)&lt;/li&gt;
&lt;li&gt;“Virtual reality”&lt;/li&gt;
&lt;li&gt;A “digital and virtual economy”&lt;/li&gt;
&lt;li&gt;A &amp;ldquo;game&amp;rdquo;&lt;/li&gt;
&lt;li&gt;A “virtual theme park or Disneyland”&lt;/li&gt;
&lt;li&gt;A “new app store”&lt;/li&gt;
&lt;li&gt;A “new UGC platform”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Das ist natürlich Unsinn, es wird alle diese Dinge &lt;em&gt;auch&lt;/em&gt; sein.
Das ist alles Valley Hype, um The Next Internet als Begriff zu etablieren und eine gemeinsame Erzählung zu haben.
Aber am Ende ist geht es genau um diese 8 Dinge die es angeblich NICHT sein soll.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.matthewball.vc/the-metaverse-primer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neuere Artikel Serie, 9 Artikel lang&lt;/a&gt;

 dazu.&lt;/p&gt;
&lt;h2 id=&#34;fortnite-loyalty-programhttpstwittercomduddyalan233status1391884040547049473&#34;&gt;
    &lt;a href=&#34;#fortnite-loyalty-programhttpstwittercomduddyalan233status1391884040547049473&#34;&gt;
	&lt;a href=&#34;https://twitter.com/DuddyAlan233/status/1391884040547049473&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fortnite Loyalty Program&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Es geht darum, User Engagement zu erhalten.
Das Problem muss jedes MMO lösen, denn&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Die Leute leben nicht im Metaverse, die leben hier.&lt;/li&gt;
&lt;li&gt;Primärer Konsum ist Casual, nicht High End Gamer.&lt;/li&gt;
&lt;li&gt;Das ist die Schwachstelle des Konzeptes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Erst wenn das Ding zu einem ständigen Ort wird, kann es ein Metaversum werden.
Das ist noch ein langer Weg:
Meine VR-Brille steht hier ungenutzt rum (Oculus verkauft, wegen FB Zwang).&lt;/p&gt;
&lt;p&gt;Das ist so, weil &amp;ldquo;in VR zu gehen&amp;rdquo; ein Akt ist (aufbauen, kalibrieren), und die Brille isoliert (ich bin dann weg), und weil es nicht viele Spiele gibt, die das sinnvoll nutzen (Elite Dangerous, MSFS-2020, Moss, selten auch Space Pirate Trainer).&lt;/p&gt;
&lt;h2 id=&#34;epic-and-facebook-the-race-called-metaversehttpstwittercomthegamespodcaststatus1450468392952115233&#34;&gt;
    &lt;a href=&#34;#epic-and-facebook-the-race-called-metaversehttpstwittercomthegamespodcaststatus1450468392952115233&#34;&gt;
	&lt;a href=&#34;https://twitter.com/thegamespodcast/status/1450468392952115233&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Epic and Facebook: The Race called Metaverse&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;h2 id=&#34;pastry-eth-threadhttpstwittercompastryethstatus1423803492314009606&#34;&gt;
    &lt;a href=&#34;#pastry-eth-threadhttpstwittercompastryethstatus1423803492314009606&#34;&gt;
	&lt;a href=&#34;https://twitter.com/PastryEth/status/1423803492314009606&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pastry Eth Thread&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Crypto Dummlall mit einigen guten Ideen, aber Illusionen über wie es laufen wird&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;1/5 of Facebook now working on AR&amp;rdquo;, für FB ist das Metaverse zur Zeit &amp;ldquo;Oculus&amp;rdquo;, &amp;ldquo;VR&amp;rdquo;. Das ist ein gefährlicher Tunnelblick (siehe oben &amp;ldquo;casual&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The &amp;ldquo;Metaverse&amp;rdquo; is a virtual space created by the convergence of virtually enhanced physical reality, AR &amp;amp; the internet: Our current 2D search based version of the internet is giving way to a fully 3D immersive reality&amp;rdquo;: Das ist Quatsch, solange 3D nicht komplett Casual konsumierbar wird, und eine 3D Brille ist derzeit isolierend, schwer und verkabelt. 3D Assets in Pancake Games sind leichter und direkt zu verkaufen, jetzt. &amp;ldquo;Cosmetics&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;The Metaverse is always “on” &amp;amp; is beyond the control of any individual. It exists in real time, can host any size audience, has a functioning economy, spans across platforms, provides interoperability for digital assets, &amp;amp; consists of the content and experiences its users create.&amp;rdquo; Das Konzept 2nd 2nd Life, und die &amp;ldquo;3D Shoppingmalls&amp;rdquo; der frühen 90er feiern fröhliche Urständ, als Konzept nicht falsch und gleichzeitig total falsch. 3D Events, die Presence ersetzen sind interessant, aber super hart.
Auch hier Korean Cultural Technology, K-POP Konsum während COVID-19 (Pancake, large Audiences, Gemeinschaftserlebnisse, &amp;ldquo;VR&amp;rdquo; Nebensache)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;In the Metaverse, the earning power for young creators won’t be limited to the top 1%. There will be an entire new era of young entrepreneurs making a living in virtual worlds, earning real value and steady income quicker than ever imagined.&amp;rdquo; LOL. In erster Linie geht es um Zollhäuschen entlang der Verwertungskette, mit dem durch Creators erschaffenen Mehrwert als Motor.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Creators who were once limited in their ability by technological constraints, lack of capital, time, or creativity, now have everything that is needed. What happens when physical objects are dematerialized? All formerly scarce materials become abundant.&amp;rdquo; LOL. DRM all the way ist notwendig, damit das funktioniert. Außerdem das Dauerversprechen vom Creators Paradise, wenn es tatsächlich um Monopolisierung der Wertschöpfungskette geht.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Danach: Thread degrades in Laser Eyes Nonsense&lt;/p&gt;
&lt;h2 id=&#34;digital-twinshttpswwwdezeencom20210723digital-twins-metaverse-david-weir-mccall-epic-games&#34;&gt;
    &lt;a href=&#34;#digital-twinshttpswwwdezeencom20210723digital-twins-metaverse-david-weir-mccall-epic-games&#34;&gt;
	&lt;a href=&#34;https://www.dezeen.com/2021/07/23/digital-twins-metaverse-david-weir-mccall-epic-games/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Digital Twins&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Digital twins will act as &amp;ldquo;foundations of the metaverse&amp;rdquo; and allow people to move between real and virtual spaces&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist &amp;ldquo;2nd 2nd Life&amp;rdquo; &lt;a href=&#34;https://en.wikipedia.org/wiki/Skeuomorph&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Skeumorphism&lt;/a&gt;

 ist, was wir machen, wenn wir noch nicht wissen, was die Design Language für eine neue Welt ist. Die ersten Autos sagen aus wie Kutschen, die ersten Apple Anwendungen haben Rolodexe und Moleskine imitiert. &amp;ldquo;Digital Twins&amp;rdquo; sind dasselbe Konzept, aber für ein Metaversum.&lt;/p&gt;
&lt;p&gt;Und die Kernidee:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In April 2020, music artist Travis Scott staged a virtual concert inside the game that was attended live by 12.3 million people. It was a global phenomenon that sent the American rapper to the top of all music charts and earned him a reported $20 million.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lies: &amp;ldquo;OMG, jemand hat in einem Kinder-Battle Royale Spiel Geld verdient ohne zu metzeln, sondern mit traditioneller Medienarbeit&amp;rdquo; führt sofort zu &amp;ldquo;Alle Ideen von 2nd Life, von denen wir schon wissen, dass sie problematisch sind, feiern Wiederauferstehung.&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;If the metaverse is an equivalent reality that coexists next to the physical reality, there needs to be a connection,&amp;rdquo; said Weir-McCall.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ist es nicht, muss es nicht. Wenn es dann doch muss, eventuell eher AR als 3D-Modelle, denn Connection zur realen Welt hat man mit einer vollen VR-Brille eben nicht. Was ich oben über Casual Konsum sage.&lt;/p&gt;
&lt;p&gt;Mein Freund merkt an:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Digital Twins / Digital Shadows sind übrigens auch Begriffe um den die Datenspur von Leuten zu bezeichnen.
Der Gesundheitsbereich versucht das ebenso zu etablieren, um anhand dieser Zwillinge Diagnostik betreiben zu können.
Das wird auch noch einmal spannend, wie das mit dem Metaverse verbunden wird.
Gerade aus Facebooks Sicht - welche Daten kann das Metaversum aus Deinem Avatar auslesen?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;facebook-glasshttpswwwreuterscomtechnologyfacebook-unveils-its-first-smart-glasses-2021-09-09-und-akzeptanz&#34;&gt;
    &lt;a href=&#34;#facebook-glasshttpswwwreuterscomtechnologyfacebook-unveils-its-first-smart-glasses-2021-09-09-und-akzeptanz&#34;&gt;
	&lt;a href=&#34;https://www.reuters.com/technology/facebook-unveils-its-first-smart-glasses-2021-09-09/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Facebook Glass&lt;/a&gt;

 und Akzeptanz
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Bei Google Brille waren die Träger erkennbar, der Begriff Glassholes entstand.
Mit Ray Ban ist das besser zu tarnen.
Ray Ban hat keinen technischen Beitrag zu Oculus und AR, es geht nur darum, den Markennamen und das Design als Tarnung für Oculus zu nehmen, um den Google Glass Effect zu vermeiden.
Außerdem ist AR mehr Casual als VR.
Mode erlaubt auch einfacheren Neuverkauf, siehe auch Apple Watch Zubehör.&lt;/p&gt;
&lt;h2 id=&#34;laser-eyeshttpstwittercomcryptomarsmoonstatus1448249433573904384&#34;&gt;
    &lt;a href=&#34;#laser-eyeshttpstwittercomcryptomarsmoonstatus1448249433573904384&#34;&gt;
	&lt;a href=&#34;https://twitter.com/Cryptomarsmoon/status/1448249433573904384&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Laser Eyes&lt;/a&gt;


    &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s gonna be epic to bring the squid game to the metaverse. Salute to your team! I am a big fan of the TV series. I am super excited to have a chance to participate in this game! LFG!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Noch mehr Laser Eyes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Understanding git</title>
      <link>https://blog.koehntopp.info/2021/10/12/understanding-git.html</link>
      <pubDate>Tue, 12 Oct 2021 17:50:52 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/12/understanding-git.html</guid>
      <description>&lt;p&gt;It occurred to me that I do not know nearly enough how git works, internally.
The contents of the .git directory seem to be accessible enough, so I am going on a Safari in the git repository of this blog.
You can follow along if you check out &lt;a href=&#34;https://github.com/isotopp/isotopp.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the blog&lt;/a&gt;

.&lt;/p&gt;
&lt;h1 id=&#34;refs&#34;&gt;
    &lt;a href=&#34;#refs&#34;&gt;
	Refs
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;All things git live in &lt;code&gt;.git&lt;/code&gt;.
The thing we are working with seem to live in &lt;code&gt;.git/refs&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;find .git/refs -type f
&lt;span class=&#34;go&#34;&gt;.git/refs/heads/main
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/remotes/github/main
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/remotes/origin/HEAD
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/remotes/origin/main
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/remotes/origin/master
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;.git/refs/stash
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s have a look at &lt;code&gt;.git/refs/heads/main&lt;/code&gt; and the &lt;code&gt;.git/refs/remotes&lt;/code&gt; here.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;cat .git/refs/heads/main
&lt;span class=&#34;go&#34;&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;cat .git/refs/remotes/github/main
&lt;span class=&#34;go&#34;&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;cat .git/refs/remotes/origin/main
&lt;span class=&#34;go&#34;&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;commits&#34;&gt;
    &lt;a href=&#34;#commits&#34;&gt;
	Commits
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So it appears that all these things reference the same &amp;ldquo;thing&amp;rdquo;, &lt;code&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a&lt;/code&gt;.
This appears to be a 40 character (40 * 4 bit = 160 bit) SHA-1 hash value.
git has low level commands to type this, and print it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -t daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;span class=&#34;go&#34;&gt;commit
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -p daad5e31926cdf8a3af0ecff517c4d5892b6f62a
&lt;span class=&#34;go&#34;&gt;tree ba5a4ceb371d42d766832dae545ecf00b9194ea2
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;parent 75077bc79697ea1e37da496b1210ca26f3c66c2c
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;parent b71d9463ad8c3b71bd279e88e74ce15e01de2aee
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;author Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;committer Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Merge remote-tracking branch &amp;#39;github/main&amp;#39; into main
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So this is a file of the type &lt;code&gt;commit&lt;/code&gt;, and it contains ASCII lines that describe the commit.
Attributes of the commit are a tree, zero or more parent commits, an author, and a committer, as well as a log-message.
The author and commit lines contain a name, a mail address, a Unix timestamp and a timezone.
We can &lt;a href=&#34;https://rachelbythebay.com/w/2021/10/05/cmd/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;convert that timestamp carefully&lt;/a&gt;

:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;date -d @1633513546
&lt;span class=&#34;go&#34;&gt;Wed Oct  6 11:45:46 CEST 2021
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also check out the things the commit points to:
We will find that the parent entries also reference commits (the two commits that precede this one), and the tree entry references a tree object.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -t 75077bc79697ea1e37da496b1210ca26f3c66c2c
&lt;span class=&#34;go&#34;&gt;commit
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -t b71d9463ad8c3b71bd279e88e74ce15e01de2aee
&lt;span class=&#34;go&#34;&gt;commit
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -t ba5a4ceb371d42d766832dae545ecf00b9194ea2
&lt;span class=&#34;go&#34;&gt;tree
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Graphically, the highlighted part of the structure:&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/git-tree-view.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The commit &lt;code&gt;daad5e31...&lt;/code&gt; has two parents: It is a merge commit of &lt;code&gt;b71d9463...&lt;/code&gt; and &lt;code&gt;75077bc7...&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;tree&#34;&gt;
    &lt;a href=&#34;#tree&#34;&gt;
	Tree
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;So a commit references a tree.
A tree is a list of files and other trees, which function as subdirectories.
Together they form a snapshot of the entire blog at this point in time (at this commit).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -p  bf447432a99b33174809dbe10d1df43576a032b3
&lt;span class=&#34;go&#34;&gt;100644 blob 199ea559714ed3569a88ab932476b11444244885    .gitignore
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;100644 blob 09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d    CNAME
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;040000 tree f7fe2d64de25404f660561f7cfbce8d78bf05c09    _drafts
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;040000 tree fe33a062dcb4406a5ecf836ddeb1cfcd9ba85e8b    _includes
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The important takeaway seems to be that git does not store changes made to a file, it stores full files.
That is less inefficient than it sounds, because unchanged files will have the same hash.
Things with the same  hash will exist only once in storage, no matter in how many commits (or trees) they are being referenced.&lt;/p&gt;
&lt;h1 id=&#34;blob&#34;&gt;
    &lt;a href=&#34;#blob&#34;&gt;
	Blob
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;And finally files: We can list their content, again, with the same tool.
Using the &lt;code&gt;-t&lt;/code&gt; and &lt;code&gt;-s&lt;/code&gt; options we can also see their type and size.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d&lt;/code&gt; for the &lt;code&gt;CNAME&lt;/code&gt; file from the tree above we get:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -t 09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d
&lt;span class=&#34;go&#34;&gt;blob
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -s 09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d
&lt;span class=&#34;go&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git cat-file -p 09e9c05d0fcf4a403addb0b2b8ee613bc4bd4b1d
&lt;span class=&#34;go&#34;&gt;blog.koehntopp.info
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;diffs&#34;&gt;
    &lt;a href=&#34;#diffs&#34;&gt;
	Diffs
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Diffs do not exist in git.
They are instead generated on the fly, by comparing two trees.
Again, this is less inefficient that one might think:
All unchanged files will have also unchanged hashes and therefore need no consideration for a diff.&lt;/p&gt;
&lt;p&gt;For objects with different hashes (but identical names), git then generates a diff.&lt;/p&gt;
&lt;h1 id=&#34;other-structures&#34;&gt;
    &lt;a href=&#34;#other-structures&#34;&gt;
	Other structures
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;When you &lt;code&gt;checkout&lt;/code&gt;, you ask git to construct a certain tree using a hash, a tag name, branch or anything else.
Every time, git records the checkout in the &lt;code&gt;reflog&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;daad5e3 (HEAD -&amp;gt; main, origin/main, github/main) HEAD@{0}: checkout: moving from 8a650853c5525013800c42f68c92b4d431b7b97c to main
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;8a65085 HEAD@{1}: checkout: moving from main to 8a650853c5525013800c42f68c92b4d431b7b97c
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;daad5e3 (HEAD -&amp;gt; main, origin/main, github/main) HEAD@{2}: merge github/main: Merge made by the &amp;#39;recursive&amp;#39; strategy.
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;75077bc HEAD@{3}: commit: fix 2021-10-06-empty-commits-and-other-wrong-tools-for-the-job.md
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;72ab462 HEAD@{4}: commit: fix 2021-10-06-empty-commits-and-other-wrong-tools-for-the-job.md
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can use this list of commit hashes to reconstruct what you did, where known good locations are, and of course to return to them.
This is essential to repair a git repository that somehow was changed unintentionally and that still contains important salvageable data.&lt;/p&gt;
&lt;p&gt;We find the original data git uses in &lt;code&gt;.git/logs/HEAD&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;tail -4 .git/logs/HEAD
&lt;span class=&#34;go&#34;&gt;72ab462c4d134b02da1e474d3edb9db201e7aecb 75077bc79697ea1e37da496b1210ca26f3c66c2c Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633508667 +0200      commit: fix 2021-10-06-empty-commits-and-other-wrong-tools-for-the-job.md
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;75077bc79697ea1e37da496b1210ca26f3c66c2c daad5e31926cdf8a3af0ecff517c4d5892b6f62a Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200      merge github/main: Merge made by the &amp;#39;recursive&amp;#39; strategy.
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;daad5e31926cdf8a3af0ecff517c4d5892b6f62a 8a650853c5525013800c42f68c92b4d431b7b97c Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1634064444 +0200      checkout: moving from main to 8a650853c5525013800c42f68c92b4d431b7b97c
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;8a650853c5525013800c42f68c92b4d431b7b97c daad5e31926cdf8a3af0ecff517c4d5892b6f62a Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1634064654 +0200      checkout: moving from 8a650853c5525013800c42f68c92b4d431b7b97c to main
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;object-storage&#34;&gt;
    &lt;a href=&#34;#object-storage&#34;&gt;
	Object storage
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;git stores all things with a hashed name in .git/objects.
The first byte (the first two letters) of the SHA-1 name make up a directory name, the rest goes into a file name.
File content is stored compressed, using zlib.&lt;/p&gt;
&lt;p&gt;We can check that using any programming language that supports zlib.
Here in Python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# $ git log | head -1&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# commit daad5e31926cdf8a3af0ecff517c4d5892b6f62a&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# $ python3&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Python 3.8.10 (default, Jun  2 2021, 10:49:15)&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;zlib&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.git/objects/da/ad5e31926cdf8a3af0ecff517c4d5892b6f62a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;rb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;fi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decompress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;commit 333tree ba5a4ceb371d42d766832dae545ecf00b9194ea2
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;parent 75077bc79697ea1e37da496b1210ca26f3c66c2c
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;parent b71d9463ad8c3b71bd279e88e74ce15e01de2aee
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;author Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;committer Kristian Koehntopp &amp;lt;kris-git@koehntopp.de&amp;gt; 1633513546 +0200
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Merge remote-tracking branch &amp;#39;github/main&amp;#39; into main
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We see the file has a header, &lt;code&gt;commit 333&lt;/code&gt;, terminated by a NULL byte.
This assists in reconstruction a &lt;code&gt;.git&lt;/code&gt; directory from fragments, if any structures are lost.&lt;/p&gt;
&lt;p&gt;It is followed by the actual file contents, which in this case is a commit, in ASCII.&lt;/p&gt;
&lt;p&gt;Things in gits object storage can get orphaned or grow without size.
Maintenance procedures exist that walk the various structures, identify orphaned objects and clean up things.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Empty commits and other wrong tools for the job</title>
      <link>https://blog.koehntopp.info/2021/10/06/empty-commits-and-other-wrong-tools-for-the-job.html</link>
      <pubDate>Wed, 06 Oct 2021 09:46:10 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/06/empty-commits-and-other-wrong-tools-for-the-job.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/akrey/status/1445656529877680129&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This&lt;/a&gt;

 is how you can make an empty commit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git commit --allow-empty -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Kick it&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This has the disadvantage of also generating a commit message.
&lt;a href=&#34;https://twitter.com/akrey/status/1445656529877680129&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Another way&lt;/a&gt;

 to achieve this seems to be&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$ &lt;/span&gt;git commit --amend --no-edit &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push -f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;but that will make people hate you in other ways.&lt;/p&gt;
&lt;p&gt;So lets stop and ask:
Why would you want to make an empty commit?&lt;/p&gt;
&lt;p&gt;Most people want this because they attached a server-side action to a commit, a CI/CD activity.&lt;/p&gt;
&lt;h1 id=&#34;this-is-wrong&#34;&gt;
    &lt;a href=&#34;#this-is-wrong&#34;&gt;
	This is wrong
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This is wrong in the same way &lt;a href=&#34;https://blog.koehntopp.info/2021/01/05/using-python-to-bash.html&#34;&gt;writing Shell Scripts&lt;/a&gt;

 is wrong:
It kind of works, but now you have another, worse problem and still no solution to the original problem.&lt;/p&gt;
&lt;p&gt;You need to stop and question your life choices, and most importantly, wake up the engineer in you.&lt;/p&gt;
&lt;h2 id=&#34;but-i-need-to-debug-my-cicd-pipeline&#34;&gt;
    &lt;a href=&#34;#but-i-need-to-debug-my-cicd-pipeline&#34;&gt;
	But I need to debug my CI/CD pipeline
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Kick it off using the tooling provided to you.
Your environment has an API that is specifically built to enable you to do that.
Use it.&lt;/p&gt;
&lt;p&gt;In Gitlab:
&lt;a href=&#34;https://docs.gitlab.com/ee/ci/triggers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Triggering pipelines through the API &lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;In GitHub:
&lt;a href=&#34;https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow#running-a-workflow-using-the-rest-api&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Running a workflow using the REST API&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;This not only works reliably, you can get proper error messages.
On top of that, you just did &lt;em&gt;not&lt;/em&gt; pee into your commit history.&lt;/p&gt;
&lt;h2 id=&#34;but-i-need-to-redeploy-because-i-need-a-terraform-run-after-i-just-lost-an-instance&#34;&gt;
    &lt;a href=&#34;#but-i-need-to-redeploy-because-i-need-a-terraform-run-after-i-just-lost-an-instance&#34;&gt;
	But I need to redeploy, because I need a Terraform run after I just lost an instance
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This is fractally broken, there is breakage in your breakage.&lt;/p&gt;
&lt;p&gt;The proper solution is a reconciliation loop of the kind Kubernetes has: Measure the existing state and compare it to the desired state. Then execute the actions necessary to transform the measured state into the desired state, in a loop.&lt;/p&gt;
&lt;p&gt;So if you are not on K8s, you need to move to K8s or re-invent K8s for your environment, badly.
Yes, Terraform, Harness and friends have it all wrong.&lt;/p&gt;
&lt;p&gt;Erecting infrastructure quickly and portably across backends surely is nice, but assumes a properly functioning declarative environment.
That is an environment where you describe the desired state of the infrastructure and the platform takes care of maintaining that desired state for you.&lt;/p&gt;
&lt;p&gt;Most platforms do not work that way.
Some fake it, badly.
For example, nobody uses AWS autoscalers to autoscale, but they surely are useful to protect your instance count.&lt;/p&gt;
&lt;h2 id=&#34;the-problem-inside-this-problem&#34;&gt;
    &lt;a href=&#34;#the-problem-inside-this-problem&#34;&gt;
	The problem inside this problem
    &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;And since we are talking about CI/CD pipelines:
Don&amp;rsquo;t YAML them. Don&amp;rsquo;t JSON them. Don&amp;rsquo;t XML them.&lt;/p&gt;
&lt;p&gt;All of these things surely are nice to describe static objects that have static properties.
You can successfully use any of them to express the desired state of a thing in a declarative way.&lt;/p&gt;
&lt;p&gt;If you see anything that looks like &amp;ldquo;foreach&amp;rdquo;, &amp;ldquo;when&amp;rdquo;, &amp;ldquo;unless&amp;rdquo; or similar, it&amp;rsquo;s procedural.
These are control structures.
They are part of programming languages.
Which any of these three are decidedly not.&lt;/p&gt;
&lt;p&gt;Programming in any of these three is wrong use of tooling, and you should not do it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;YAML, JSON and XML are for declarative things.&lt;/li&gt;
&lt;li&gt;Python, Go and Rust are for procedural things.&lt;/li&gt;
&lt;li&gt;Bash is for interactive use only.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use the proper tooling for the job.
Be an engineer.&lt;/p&gt;
&lt;p&gt;Otherwise, you&amp;rsquo;ll just get your old bash rsync deployment scripts back, in a harder to debug packaging, and wrapped in conditionals and loops in YAML &amp;ldquo;syntax&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;That is not what progress looks like.
At all.
Shoddy engineering begets pager calls, outages and suffering.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>99% secure</title>
      <link>https://blog.koehntopp.info/2021/10/02/99-secure.html</link>
      <pubDate>Sat, 02 Oct 2021 19:17:00 +0000</pubDate>
      
      <guid>https://blog.koehntopp.info/2021/10/02/99-secure.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/Linuzifer/status/1443880403211857922&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linus Neumann zitiert Prof. Norbert Pohlmann&lt;/a&gt;

:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ich glaube, das ist so.
Diese 100%ige Sicherheit wird es nicht geben, und wenn der Chaos Computer Bild was findet, dann findet er das, und dann sagen wir, das ist gut.
Und dann überlegen wir uns, wie wir das wieder schließen können und dann ist es wieder besser.
Und dann können sie auch weiter suchen.&lt;/p&gt;
&lt;p&gt;Also, ich glaube, wir brauchen auch eine andere Grundhaltung und es geht nicht immer um 100 %, sondern die 99 %, die reichen und wir müssen mit den Restrisiken umgehen.
Neben ganz schnell reagieren auch natürlich auch Versicherungen oder wer übernimmt die Verantwortung, wenn was passiert.
Das kennen wir ja alles.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist eine ganze Menge Stoff zum Entpacken und ich habe das &lt;a href=&#34;https://twitter.com/isotopp/status/1444182876677943299&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;auf Twitter&lt;/a&gt;

 mal getan. Dies ist die Volltextversion dieses Threads.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;99 % Sicherheit, was soll das bedeuten?&lt;/li&gt;
&lt;li&gt;Der CCC ist mein Sicherheitscheck&lt;/li&gt;
&lt;li&gt;Hackerterrorcybercyberversicherungen und der Umgang mit Restrisiken&lt;/li&gt;
&lt;li&gt;Wir werden sowieso gehackt, Aufgeben ist eine Option.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Aber der Reihe nach:&lt;/p&gt;
&lt;h1 id=&#34;99-sicherheit-was-soll-das-bedeuten&#34;&gt;
    &lt;a href=&#34;#99-sicherheit-was-soll-das-bedeuten&#34;&gt;
	99 % Sicherheit, was soll das bedeuten?
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://pluspora.com/posts/6bd0e460002a013a97e8002590c0bfb8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Auf Pluspora&lt;/a&gt;

 hat Rainer Sokoll einen Portscan von &lt;code&gt;www.digital-enabling.eu&lt;/code&gt; veröffentlicht, bevor der Server panisch vom Netz genommen worden ist:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;go&#34;&gt;~$ nmap -sT www.digital-enabling.eu.
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Starting Nmap 7.92 ( https://nmap.org ) at 2021-09-25 14:24 CEST
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Nmap scan report for www.digital-enabling.eu. (213.133.104.155)
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Host is up (0.037s latency).
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;rDNS record for 213.133.104.155: www155.your-server.de
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Not shown: 935 filtered tcp ports (no-response), 51 closed tcp ports (conn-refused)
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;PORT     STATE SERVICE
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;21/tcp   open  ftp
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;22/tcp   open  ssh
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;25/tcp   open  smtp
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;80/tcp   open  http
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;110/tcp  open  pop3
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;143/tcp  open  imap
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;222/tcp  open  rsh-spx
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;443/tcp  open  https
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;465/tcp  open  smtps
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;587/tcp  open  submission
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;993/tcp  open  imaps
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;995/tcp  open  pop3s
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;3306/tcp open  mysql
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;5432/tcp open  postgresql
&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;Nmap done: 1 IP address (1 host up) scanned in 55.71 seconds
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Wir sehen einen Server, der mehr Dienste produktiv ins Internet raushängt als ein übertrieben konfigurierter Honeypot, darunter &lt;code&gt;ftp&lt;/code&gt;, &lt;code&gt;mysql&lt;/code&gt; und &lt;code&gt;postgresql&lt;/code&gt;.
Das ist, wie man mir in der Kundenkommunikationsschulung beigebracht hat zu sagen, &amp;ldquo;keine empfohlene oder unterstützte Konfiguration&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Wenn wir also sagen, &amp;ldquo;Sicherheit ist relativ&amp;rdquo; und &amp;ldquo;perfekte Sicherheit gibt es nicht&amp;rdquo;, dann ist es doch so, daß man da differenzieren kann.
Es gibt eben besser und schlechter konfigurierte Systeme.&lt;/p&gt;
&lt;p&gt;Und es gibt sogar dokumentierte und allgemein anerkannte Best Practices, in englischer und deutscher Sprache.
Von denen wird erwartet, daß man sie umsetzt.&lt;/p&gt;
&lt;p&gt;Das nennt die deutsche Rechtsprechung nicht ohne Grund &amp;ldquo;Grundschutz&amp;rdquo; und &amp;ldquo;Stand der Technik&amp;rdquo;.
Der Grundschutz, wie vom &amp;ldquo;Bundesamt für Sicherheit in der Informationstechnik&amp;rdquo; (BSI) veröffentlicht, hat viele Spezialhandbücher für besondere Anwendungszwecke.
Der Grund-Grundschutz ist definiert in &amp;ldquo;SYS.1.1: Allgemeiner Server&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Wie grundlegend ist der?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Der Baustein &amp;ldquo;SYS.1.1 Allgemeiner Server&amp;rdquo; ist für alle Server-IT-Systeme mit beliebigem Betriebssystem anzuwenden.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist Amtsdeutsch für &amp;ldquo;Wenn Du das nicht machst, dann brauchst Du gar nicht weiter zu spielen&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Im Grund-Grundschutz SYS.1.1 gibt es Grund-Grund-Grundschutzanforderungen, im Kapitel 3.1 &amp;ldquo;Basis-Anforderungen&amp;rdquo;.
Dort wird in SYS.1.1.A2 &amp;ldquo;Benutzerauthentisierung an Servern&amp;rdquo;, gleich nach der geeigneten Aufstellung des Gerätes, gefordert:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Für die Anmeldung von Benutzern und Diensten am Server MÜSSEN Authentisierungsverfahren
eingesetzt werden, die dem Schutzbedarf der Server angemessen sind.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist Amtsdeutsch für &amp;ldquo;Benutzeraccounts ohne Passworte darf es nicht geben&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Danach kommen ein paar Anforderungen aus früheren Versionen des Dokumentes und eine, die für Angriffe nicht relevant ist, und dann gleich als nächstes SYS.1.1.A6 &amp;ldquo;Deaktivierung nicht benötigter Dienste&amp;rdquo;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alle nicht benötigten Dienste und Anwendungen MÜSSEN deaktiviert oder deinstalliert werden, vor
allem Netzdienste.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wir müssen den Portscan da oben im Licht dieser grundlegenden Grundanforderungen vom allergrundlegensten ersten Kapitel des Grundschutzes lesen, von dem es einleitend heißt&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Die folgenden Anforderungen MÜSSEN für den Baustein SYS.1.1 Allgemeiner Server vorrangig erfüllt
werden.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das war nicht der Fall.&lt;/p&gt;
&lt;p&gt;Damit ist auch die 99 %-Latte gerissen. Es geht stattdessen darum, dass überhaupt die allerersten grundlegenden Basisanforderungen nicht erfüllt werden, die man braucht, um überhaupt ernsthaft Security angehen zu können.&lt;/p&gt;
&lt;p&gt;Es ist üblicherweise nicht möglich eine Maschine in der von Rainer Sokoll dokumentierten Konfiguration produktiv zu betreiben, wenn irgendein Auditor einmal auch nur oberflächlich über eine Systemkonfiguration geguckt hat.
Wir können damit ausschließen, daß für dieses System und seine Betreiberorganisation ein Security-Review stattgefunden hat, und es ist wahrscheinlich, daß ein Sicherheitsprozess überhaupt nicht existiert.&lt;/p&gt;
&lt;p&gt;Wie dem auch sei: Prozente sind bei Security ein schwieriges Maß.
Ein kompromittiertes System ist ja nicht 43 % gehackt, sondern 100 % im Eimer.&lt;/p&gt;
&lt;p&gt;Ein besseres Bild: Raising the bar.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/this-tall.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Raising the bar&amp;rdquo; im Security-Sinne bedeutet üblicherweise, daß man den Personenkreis möglicher Angreifer verkleinern will, indem man versucht die Anforderungen höher zu schrauben, die ein erfolgreicher Angreifer an Ausbildung, finanzieller Ausstattung und Zeitaufwand mitbringen muss.&lt;/p&gt;
&lt;p&gt;Anders gesagt: &amp;ldquo;Unsere Systeme sind so konfiguriert, daß nicht jeder spaßorientierte Mensch auf Mate an einem langsamen Samstagabend in Quarantäne damit Karussell fahren kann.&amp;rdquo; wäre schon einmal ein guter Anfang.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;w99 % Sicherheit&amp;rdquo; würde in dieser Interpretation also bedeuten, daß 99 % der Population nicht in der Lage sind, die Installation im Vorübergehen mit dem Arsch einzureißen.
Aber wenn einer vom 1 % das tut, liegt das System dennoch 100 % am Boden. Das ist eine wichtige Beobachtung, über die wir weiter unten noch einmal reden müssen.&lt;/p&gt;
&lt;p&gt;So eine Konfiguration in der Produktion im öffentlichen Internet sagt aber auch etwas über die allgemeine Prozessreife in einer Organisation. Es ist statistisch eher ungewöhnlich, dass so konfigurierte Server mit sauberer und geplanter Software-Entwicklung von sicherheitskritischer Software korrelieren.&lt;/p&gt;
&lt;p&gt;Bei Software, die sagen wir einmal Führerscheindaten verwaltet, wäre es aber schon wichtig zu wissen, daß ihr Entwicklungsprozess Anforderungen genügt, die es erlauben, Aussagen über die Software bezüglich Verhalten, Sicherheit und dergleichen zu machen. Man will mindestens erst einmal nachvollziehen können, was da an Komponenten drin ist, und wer da wann warum welche Änderungen mit welchem Ziel vorgenommen hat, um dann an Tests zu sehen, daß das funktioniert hat.&lt;/p&gt;
&lt;h1 id=&#34;der-ccc-ist-mein-sicherheitscheck&#34;&gt;
    &lt;a href=&#34;#der-ccc-ist-mein-sicherheitscheck&#34;&gt;
	Der CCC ist mein Sicherheitscheck
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Der CCC ist kein Sicherheitsdienstleister.&lt;/p&gt;
&lt;p&gt;Als ich zuletzt nachgesehen habe war der CCC eine Vereinigung von Leuten mit dem Ziel, Spaß am Gerät zu haben. Das kann auch Dein Gerät sein, aber das ist dann eher schlecht für Dich.&lt;/p&gt;
&lt;p&gt;Auf keinen Fall ersetzt das ein Sicherheitskonzept. Ein Sicherheitskonzept würde&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ein organisatorisches und inhaltliches Konzept für die Anwendung haben,&lt;/li&gt;
&lt;li&gt;und dann einen Prozess, der dies in der Entwicklung umsetzt und dokumentiert, daß die Anforderungen erfüllt werden.&lt;/li&gt;
&lt;li&gt;Dann hätte man ein ebensolches Konzept für den Betrieb&lt;/li&gt;
&lt;li&gt;und einen Prozess, der dies im Betrieb umsetzt und dokumentiert, daß die Anforderungen erfüllt werden.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Und ganz wichtig:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;einen Plan, der umgesetzt wird, wenn es dann doch schief geht.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Denn es wird doch schief gehen - das sind dann die von Prof. Pohlmann angesprochenen Restrisiken.
&lt;a href=&#34;https://www.slideshare.net/isotopp/security-management-sys11-version-harald-wagener&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hier&lt;/a&gt;

 sind ein paar Slides von &lt;a href=&#34;https://twitter.com/mausdompteur&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Harald Wagener&lt;/a&gt;

, basierend auf Ideen von Harald und ein paar noch älteren Slides von mir.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/this-tall2.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Ein Risiko Management Prozess ist wie jeder Prozess eine Schleife, bei denen man Angreifer und Angriffe identifiziert, Risiken bewertet, Maßnahmen gegen die Risiken definiert und umsetzt, und dann wiederholt.
Die Maßnahmen können wir nicht beliebig weit treiben, denn betriebliche Notwendigkeiten setzen uns Grenzen: &amp;ldquo;Die Server abschalten und im Marianengraben versenken&amp;rdquo; ist keine Option.
Damit bleiben uns Restrisiken, die eventuell versicherbar sind.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/this-tall3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Der Risiko-Managementprozess ist ein Prozess.
Er unterliegt einer Evaluierung in der Retrospektive, und dann Anpassungen.
Ich habe das &lt;a href=&#34;https://blog.koehntopp.info/2020/06/15/pizza-people-projects-and-processes.html&#34;&gt;am Beispiel einer Pizzeria&lt;/a&gt;

 anderswo schon einmal ausführlicher diskutiert.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/this-tall3.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;Und während es super schwer ist, Security zu messen, gibt es immerhin Maße für Prozessreife, etwa das Capability Maturity Modell, über das wir auch im obigen Pizzeria-Beispiel reden.&lt;/p&gt;
&lt;p&gt;Und das bringt uns zu&lt;/p&gt;
&lt;h1 id=&#34;hackerterrorcybercyberversicherungen-und-der-umgang-mit-restrisiken&#34;&gt;
    &lt;a href=&#34;#hackerterrorcybercyberversicherungen-und-der-umgang-mit-restrisiken&#34;&gt;
	Hackerterrorcybercyberversicherungen und der Umgang mit Restrisiken
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Ich sagte weiter oben&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aber wenn einer vom 1 % das tut, liegt das System dennoch 100 % am Boden. Das ist eine wichtige Beobachtung, über die wir weiter unten noch einmal reden müssen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Das ist hier.&lt;/p&gt;
&lt;p&gt;Eine HTCCV ist eine Versicherung, die Du abschließen kannst, um Schäden abzudecken, die auftreten, wenn Du dann doch gehackt wirst.
Der Versicherer übernimmt dann die Kosten aus Forderungen gegen Dich, die im Nachgang zu so einem Hack auftreten.&lt;/p&gt;
&lt;p&gt;Wenn Du so eine HTCCV haben willst, dann wird der Versicherer in der Regel seinen Taschenrechner anwerfen und Dir einen Tarif machen, der auf der Einschätzung Deiner Sicherheit durch einen von ihm beauftragten Auditor basiert.&lt;/p&gt;
&lt;p&gt;Das heißt, der Anbieter wird Dich nach den oben erwähnten Plänen für ein Risiko Management fragen, einen langen, strengen Blick auf die Pläne und ihre Umsetzung werfen, und danach die Prämie bemessen. Wenn er die Risiken für versicherbar hält.&lt;/p&gt;
&lt;p&gt;Wenn man nach dem Anruf beim Versicherer ein paar Tastendrücke hört, ein irres Kichern und dann einen Klick in der Leitung, dann ist das eher nicht der Fall - siehe den Portscan ganz oben.&lt;/p&gt;
&lt;p&gt;Als Inhaber einer HTCCV wird man also regelmäßig, meist jährlich oder im jährlichen Wechsel mit einer Datenschutz-Prüfung die Auditoren im Haus haben.
Sie werden jedes Mal einen grundlegenden Überblick haben wollen und jedes Jahr ein anderes Thema zur besonderen Vertiefung auswählen.&lt;/p&gt;
&lt;p&gt;Damit hat man auch den von mir oben geforderten Test mit Audit als Teil der Versicherungsauflagen.
Meiner persönlichen Erfahrung mit solchen Auditoren nach finden sie solche verscharchten Setups wie das ganz oben in weniger als 15 Sekunden.
Das deutet darauf hin, daß auch eine HTCCV für dieses Projekt eher nicht bestand.&lt;/p&gt;
&lt;h1 id=&#34;wir-werden-sowieso-gehackt-aufgeben-ist-eine-option&#34;&gt;
    &lt;a href=&#34;#wir-werden-sowieso-gehackt-aufgeben-ist-eine-option&#34;&gt;
	Wir werden sowieso gehackt, Aufgeben ist eine Option.
    &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Der Satz &amp;ldquo;Hundertprozentige Sicherheit gibt es nicht&amp;rdquo; wird gerne als erster Halbsatz der Aussage verwendet, die mit &amp;ldquo;und darum brauchen wir uns gar nicht anzustrengen.&amp;rdquo; endet.
Das ist auch der Tenor von Prof. Pohlmann oben.&lt;/p&gt;
&lt;p&gt;&lt;p class=&#34;md__image&#34;&gt;
  &lt;img src=&#34;https://blog.koehntopp.info/uploads/2021/10/this-tall5.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://quotes.yourdictionary.com/articles/who-said-hope-is-not-strategy.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hope is not a strategy&lt;/a&gt;

&amp;rdquo; ist nicht nur ein beliebtes Zitat, sondern auch ein gerne von Google SREs verwendetes Motto.&lt;/p&gt;
&lt;p&gt;Auch dem Laien ist intuitiv klar, dass &amp;ldquo;Aufgeben&amp;rdquo; keine skalierbare Strategie ist.
Ich habe hier versucht zu erklären, warum die Laien-Intuition genau auf den Punkt ist.&lt;/p&gt;
&lt;p&gt;Darum reden wir von Schutzlevel, &amp;ldquo;raising the bar&amp;rdquo; und wenn wir von Prozenten reden, dann eher mit Hinblick auf &amp;ldquo;wie viel Prozent von &lt;Grundmenge&gt; wären denn in der Lage, einen ernstzunehmenden Angriff vorzutragen?&amp;rdquo;
Also wieviel Zeit, Kapital und Ausbildung braucht ein Angreifer, um uns gefährlich werden zu können?&lt;/p&gt;
&lt;p&gt;Wenn es also in der Gemeinschaft von technikaffinen Personen auf Mate Vorbehalte gegen dieses Führerschein ID-Wallet gibt, und Widerspruch gegen die Haltung von Prof. Pohlmann, dann deswegen.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

